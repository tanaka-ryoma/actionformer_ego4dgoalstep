/home/ubuntu/slocal/ActionFormer/.venv/bin/python
running install
running bdist_egg
running egg_info
writing nms_1d_cpu.egg-info/PKG-INFO
writing dependency_links to nms_1d_cpu.egg-info/dependency_links.txt
writing top-level names to nms_1d_cpu.egg-info/top_level.txt
reading manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
writing manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.8/nms_1d_cpu.cpython-38-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for nms_1d_cpu.cpython-38-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/nms_1d_cpu.py to nms_1d_cpu.cpython-38.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
creating 'dist/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
removing '/home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' (and everything under it)
creating /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Extracting nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg to /home/ubuntu/.local/lib/python3.8/site-packages
nms-1d-cpu 0.0.0 is already the active version in easy-install.pth

Installed /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Processing dependencies for nms-1d-cpu==0.0.0
Finished processing dependencies for nms-1d-cpu==0.0.0
{'dataset': {'crop_ratio': [0.9, 1.0],
             'default_fps': 30,
             'downsample_rate': 1,
             'feat_folder': './v2/omnivore_video_swinl',
             'feat_stride': 16,
             'file_ext': '.pt',
             'file_prefix': None,
             'force_upsampling': False,
             'input_dim': 1536,
             'max_seq_len': 1024,
             'num_classes': 454,
             'num_frames': 32,
             'train_json_file': './goalstep_train_withID_subset.json',
             'trunc_thresh': 0.5,
             'val_json_file': './goalstep_val_withID_subset.json'},
 'dataset_name': 'ego4d_goalstep',
 'devices': ['cuda:0'],
 'init_rand_seed': 1234567891,
 'loader': {'batch_size': 8, 'num_workers': 4},
 'model': {'backbone_arch': (2, 2, 5),
           'backbone_type': 'convTransformer',
           'embd_dim': 512,
           'embd_kernel_size': 3,
           'embd_with_ln': True,
           'fpn_dim': 512,
           'fpn_start_level': 0,
           'fpn_type': 'identity',
           'fpn_with_ln': True,
           'head_dim': 512,
           'head_kernel_size': 3,
           'head_num_layers': 3,
           'head_with_ln': True,
           'input_dim': 1536,
           'max_buffer_len_factor': 4.0,
           'max_seq_len': 1024,
           'n_head': 4,
           'n_mha_win_size': 9,
           'num_classes': 454,
           'regression_range': [(0, 4),
                                (4, 8),
                                (8, 16),
                                (16, 32),
                                (32, 64),
                                (64, 10000)],
           'scale_factor': 2,
           'test_cfg': {'duration_thresh': 0.05,
                        'ext_score_file': None,
                        'iou_threshold': 0.1,
                        'max_seg_num': 200,
                        'min_score': 0.001,
                        'multiclass_nms': True,
                        'nms_method': 'soft',
                        'nms_sigma': 0.5,
                        'pre_nms_thresh': 0.001,
                        'pre_nms_topk': 2000,
                        'voting_thresh': 0.7},
           'train_cfg': {'center_sample': 'radius',
                         'center_sample_radius': 1.5,
                         'clip_grad_l2norm': 1.0,
                         'cls_prior_prob': 0.01,
                         'dropout': 0.0,
                         'droppath': 0.1,
                         'head_empty_cls': [],
                         'init_loss_norm': 100,
                         'label_smoothing': 0.0,
                         'loss_weight': 1.0},
           'use_abs_pe': False,
           'use_rel_pe': False},
 'model_name': 'LocPointTransformer',
 'opt': {'epochs': 40,
         'learning_rate': 0.0001,
         'momentum': 0.9,
         'schedule_gamma': 0.1,
         'schedule_steps': [],
         'schedule_type': 'cosine',
         'type': 'AdamW',
         'warmup': True,
         'warmup_epochs': 10,
         'weight_decay': 0.0},
 'output_folder': './ckpt/',
 'test_cfg': {'duration_thresh': 0.05,
              'ext_score_file': None,
              'iou_threshold': 0.1,
              'max_seg_num': 200,
              'min_score': 0.001,
              'multiclass_nms': True,
              'nms_method': 'soft',
              'nms_sigma': 0.5,
              'pre_nms_thresh': 0.001,
              'pre_nms_topk': 2000,
              'voting_thresh': 0.7},
 'train_cfg': {'center_sample': 'radius',
               'center_sample_radius': 1.5,
               'clip_grad_l2norm': 1.0,
               'cls_prior_prob': 0.01,
               'dropout': 0.0,
               'droppath': 0.1,
               'head_empty_cls': [],
               'init_loss_norm': 100,
               'label_smoothing': 0.0,
               'loss_weight': 1.0},
 'train_split': ['train'],
 'val_split': ['val']}
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_train_withID_subset.json
dict_db[labels] [ 44 304 217 201  88 430  88  72  88 436  88  72  88  91 411 209  88 424
  88 247  80  91 411  88  80  88  91  88 354  88 209 411 121 105  88 411
   8  88 436]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7ff258394cd0>
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_val_withID_subset.json
dict_db[labels] [ 47  80 447  49 166   9 338 447 166  47 166  93  47 392  80 166  47 338
 338 281 370 183  47 447 232 325 116  80 166  93 166  47 116  36  80 166
  80 166  80 181  80 119 213  82 346 338  47 388 137 294 383 183 311  80
 166 166 389 330 338 447  70]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7ff2583944f0>
PtTransformerClsHead
PtTransformerRegHead
Using model EMA ...

Start training model LocPointTransformer ...
yes
train
dataset_name None
activity_index {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 34: 33, 35: 34, 36: 35, 37: 36, 38: 37, 39: 38, 40: 39, 41: 40, 42: 41, 43: 42, 44: 43, 45: 44, 46: 45, 47: 46, 48: 47, 49: 48, 50: 49, 51: 50, 52: 51, 53: 52, 54: 53, 55: 54, 57: 55, 58: 56, 59: 57, 60: 58, 61: 59, 62: 60, 63: 61, 64: 62, 65: 63, 66: 64, 67: 65, 68: 66, 69: 67, 70: 68, 71: 69, 72: 70, 73: 71, 74: 72, 75: 73, 76: 74, 77: 75, 78: 76, 79: 77, 80: 78, 81: 79, 82: 80, 83: 81, 84: 82, 85: 83, 86: 84, 87: 85, 88: 86, 89: 87, 90: 88, 91: 89, 92: 90, 93: 91, 94: 92, 95: 93, 96: 94, 97: 95, 98: 96, 99: 97, 100: 98, 102: 99, 103: 100, 104: 101, 105: 102, 106: 103, 107: 104, 108: 105, 109: 106, 110: 107, 112: 108, 113: 109, 114: 110, 115: 111, 116: 112, 117: 113, 119: 114, 120: 115, 121: 116, 122: 117, 123: 118, 124: 119, 125: 120, 126: 121, 127: 122, 128: 123, 129: 124, 130: 125, 131: 126, 132: 127, 133: 128, 134: 129, 135: 130, 136: 131, 137: 132, 138: 133, 139: 134, 140: 135, 141: 136, 142: 137, 143: 138, 144: 139, 145: 140, 146: 141, 147: 142, 148: 143, 149: 144, 150: 145, 151: 146, 152: 147, 153: 148, 154: 149, 155: 150, 156: 151, 157: 152, 158: 153, 159: 154, 160: 155, 161: 156, 162: 157, 163: 158, 164: 159, 165: 160, 166: 161, 167: 162, 168: 163, 169: 164, 170: 165, 171: 166, 172: 167, 173: 168, 174: 169, 175: 170, 176: 171, 177: 172, 178: 173, 179: 174, 180: 175, 181: 176, 182: 177, 183: 178, 184: 179, 185: 180, 186: 181, 187: 182, 188: 183, 189: 184, 190: 185, 191: 186, 192: 187, 193: 188, 194: 189, 195: 190, 196: 191, 197: 192, 199: 193, 200: 194, 201: 195, 202: 196, 203: 197, 204: 198, 205: 199, 207: 200, 208: 201, 209: 202, 210: 203, 211: 204, 212: 205, 213: 206, 214: 207, 215: 208, 216: 209, 217: 210, 218: 211, 219: 212, 220: 213, 221: 214, 222: 215, 223: 216, 224: 217, 225: 218, 226: 219, 228: 220, 229: 221, 230: 222, 231: 223, 232: 224, 233: 225, 234: 226, 235: 227, 236: 228, 237: 229, 238: 230, 239: 231, 240: 232, 241: 233, 242: 234, 244: 235, 245: 236, 246: 237, 247: 238, 248: 239, 249: 240, 250: 241, 251: 242, 252: 243, 253: 244, 254: 245, 255: 246, 256: 247, 257: 248, 258: 249, 259: 250, 260: 251, 261: 252, 262: 253, 263: 254, 264: 255, 265: 256, 266: 257, 267: 258, 268: 259, 269: 260, 270: 261, 271: 262, 273: 263, 274: 264, 275: 265, 276: 266, 277: 267, 278: 268, 279: 269, 280: 270, 281: 271, 282: 272, 283: 273, 284: 274, 285: 275, 286: 276, 287: 277, 288: 278, 289: 279, 290: 280, 291: 281, 292: 282, 293: 283, 294: 284, 295: 285, 296: 286, 297: 287, 298: 288, 299: 289, 300: 290, 301: 291, 302: 292, 303: 293, 304: 294, 305: 295, 306: 296, 307: 297, 309: 298, 310: 299, 311: 300, 312: 301, 313: 302, 314: 303, 315: 304, 316: 305, 317: 306, 318: 307, 319: 308, 320: 309, 321: 310, 322: 311, 323: 312, 324: 313, 325: 314, 326: 315, 327: 316, 328: 317, 329: 318, 330: 319, 331: 320, 332: 321, 333: 322, 334: 323, 335: 324, 336: 325, 337: 326, 338: 327, 339: 328, 340: 329, 341: 330, 342: 331, 343: 332, 344: 333, 345: 334, 346: 335, 347: 336, 348: 337, 349: 338, 350: 339, 351: 340, 352: 341, 354: 342, 355: 343, 356: 344, 357: 345, 358: 346, 359: 347, 360: 348, 361: 349, 362: 350, 363: 351, 364: 352, 365: 353, 366: 354, 367: 355, 368: 356, 369: 357, 370: 358, 371: 359, 372: 360, 373: 361, 374: 362, 375: 363, 376: 364, 377: 365, 378: 366, 379: 367, 380: 368, 381: 369, 382: 370, 383: 371, 384: 372, 385: 373, 386: 374, 387: 375, 388: 376, 389: 377, 390: 378, 391: 379, 392: 380, 393: 381, 394: 382, 395: 383, 396: 384, 397: 385, 398: 386, 399: 387, 400: 388, 401: 389, 402: 390, 403: 391, 404: 392, 405: 393, 406: 394, 407: 395, 408: 396, 409: 397, 410: 398, 411: 399, 412: 400, 413: 401, 414: 402, 415: 403, 416: 404, 417: 405, 418: 406, 419: 407, 420: 408, 421: 409, 422: 410, 423: 411, 424: 412, 425: 413, 426: 414, 428: 415, 429: 416, 430: 417, 431: 418, 432: 419, 433: 420, 434: 421, 435: 422, 436: 423, 437: 424, 438: 425, 439: 426, 440: 427, 441: 428, 442: 429, 443: 430, 444: 431, 445: 432, 446: 433, 447: 434, 448: 435, 449: 436, 450: 437, 451: 438, 452: 439, 453: 440}
gound_truth 0         44
1        304
2        217
3        201
4         88
        ... 
13337    254
13338    380
13339    408
13340    415
13341    436
Name: label, Length: 13342, dtype: int64
gound_truth 0         43
1        294
2        210
3        195
4         86
        ... 
13337    245
13338    368
13339    396
13340    403
13341    423
Name: label, Length: 13342, dtype: int64
gound_truth                                    video-id      t-start        t-end  label
0      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1069.34800   1298.59400     43
1      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1298.66082   1327.09850    294
2      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1381.06481   1383.41099    210
3      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1384.24600   1404.91851    195
4      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1410.80762   1430.91046     86
...                                     ...          ...          ...    ...
13337  3e057cdc-bf48-4090-81d6-b66bb18542e7  17552.33613  17559.34967    245
13338  3e057cdc-bf48-4090-81d6-b66bb18542e7  17559.34967  17567.20658    368
13339  3e057cdc-bf48-4090-81d6-b66bb18542e7  17567.20658  17583.35754    396
13340  3e057cdc-bf48-4090-81d6-b66bb18542e7  17583.35754  17599.04962    403
13341  3e057cdc-bf48-4090-81d6-b66bb18542e7  17622.51034  17690.55467    423

[13342 rows x 4 columns]

[Train]: Epoch 0 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([357, 431, 294], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([181, 181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([256, 385, 354,  47, 354, 256, 116, 116, 116, 116, 325, 116, 147, 105,
        325], device='cuda:0'), tensor([215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387, 385, 215],
       device='cuda:0'), tensor([249, 155, 131, 191], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(2.1483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.7161, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.8644, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0274, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6590, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.6863, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 16, 197,  11,  71, 305, 286,  31,  31,  31], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249],
       device='cuda:0'), tensor([ 93, 279, 283, 279, 121, 283,  98, 283, 301, 283, 329, 301, 283],
       device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([436, 294, 294, 436, 294], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([166], device='cuda:0')]
yes3 {'cls_loss': tensor(2.1498, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.8253, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.9750, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 15,  15,  15,  15, 305], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([306, 116, 306, 116, 306], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([351, 399, 351, 245, 351, 142, 351, 142, 279, 201, 142],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([ 47, 100, 453, 388, 257, 370,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(2.3276, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.8957, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.2233, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([399], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93, 270], device='cuda:0'), tensor([219, 219], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2388, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0003, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2391, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141], device='cuda:0'), tensor([100,  80,  93, 121, 124, 332, 248], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([415, 121, 184, 436, 224, 213, 436, 224, 436, 213,  19, 436, 384,  19,
        182, 121, 430, 436,  80], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([ 63, 319,  30,  50, 201, 451, 201, 280, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(2.1183, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.7597, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.8781, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([250,  50, 250], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([399, 121, 294], device='cuda:0'), tensor([132], device='cuda:0'), tensor([339,  31, 445, 340, 277, 279, 236,  31, 415], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16], device='cuda:0'), tensor([426, 252, 367, 426, 252, 367, 426, 252, 367,  62, 183,  70, 426, 426,
        426, 252, 367, 426, 252], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2890, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0579, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3469, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([392, 146], device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0'), tensor([436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,
         84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([319, 121, 224, 147, 438], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.7763, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.4644, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.2407, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([441, 415, 441,  49], device='cuda:0'), tensor([354, 447, 401, 399, 121], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([108, 305, 285, 305, 441, 225,  16,  76,  16, 418], device='cuda:0'), tensor([249, 105,  50,  73,  82,  15, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0126, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7921, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8047, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36],
       device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191, 301], device='cuda:0'), tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([ 80,  80, 121,   8, 217,  47,  55, 453,  47, 294, 294, 385,   8, 404,
         47], device='cuda:0'), tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402, 223], device='cuda:0'), tensor([224, 201, 121, 447, 438, 121, 215,  76,  37, 399, 113,  37],
       device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9670, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6181, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.5852, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([121,  80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([ 93, 120, 453,  44,  87, 436, 405, 100, 385, 436,  93, 291, 121, 291,
        121, 115, 436,  10, 357, 296], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3933, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1429, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5362, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00010/00055]	Time 0.82 (0.82)	Loss 2.54 (2.54)
		cls_loss 1.39 (1.39)	reg_loss 1.14 (1.14)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([398, 436], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([173, 125, 341, 411, 319], device='cuda:0'), tensor([356, 384,  43, 110,  90,  44, 269, 279, 269, 269, 315],
       device='cuda:0'), tensor([108], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254], device='cuda:0'), tensor([436, 441, 143, 279, 441,  32, 124,  71, 100,  32, 430, 441],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1120, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8931, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0051, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([420, 451, 420,  95], device='cuda:0'), tensor([453, 107, 107, 107, 107], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([451], device='cuda:0'), tensor([146, 182, 392], device='cuda:0'), tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([429], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9402, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7387, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6789, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([ 11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411,
        286, 411, 286,  90, 312,  37,  82], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([ 50, 309, 279, 121, 309], device='cuda:0'), tensor([130, 446, 166, 130, 378, 166, 385, 378, 388, 302], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4130, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1619, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5749, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 14, 327], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62, 294, 294,  96],
       device='cuda:0'), tensor([100, 294,   4,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9250, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7658, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6908, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([223, 345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193],
       device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([451, 279, 442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 44, 351, 121, 351, 127, 351, 351, 351, 351, 231, 351],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2638, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9965, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 306, 256, 306], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 62, 301,  82, 294, 298, 441, 298], device='cuda:0'), tensor([268], device='cuda:0'), tensor([439, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8993, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6693, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5686, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([436], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46, 120, 120,  46], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2758, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0081, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2838, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([399, 216], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9836, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7533, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7369, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([271, 131, 117, 271, 121], device='cuda:0'), tensor([309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436,
        305, 407, 280], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([238,  12, 415, 453, 415, 385, 210, 415, 279, 453, 385,  32, 399, 121,
        356, 279, 273, 453], device='cuda:0'), tensor([ 50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294],
       device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([309, 332, 453, 105, 453, 100,  45, 217, 429,  96, 201, 100, 294,  50,
        213], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7049, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.3561, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.0610, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 436], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 90,  50,  90,  50, 121, 159, 121, 384, 279, 385, 121,  87],
       device='cuda:0'), tensor([268, 376, 268, 376, 268,  80], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268],
       device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5952, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2236, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.8188, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00020/00055]	Time 0.81 (0.82)	Loss 2.82 (2.68)
		cls_loss 1.60 (1.49)	reg_loss 1.22 (1.18)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([ 63, 436,  80], device='cuda:0'), tensor([332,  93,  82, 249, 200,  44, 408, 155, 294], device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 83, 405, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8385, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6446, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4831, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352],
       device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0'), tensor([415, 121], device='cuda:0'), tensor([284], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([305, 120, 305, 187, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7894, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8271, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([88, 16, 88, 73], device='cuda:0'), tensor([121, 166,  93, 120, 424, 166], device='cuda:0'), tensor([ 91, 345,  91,  91, 345,  91, 247,  91,  37, 201], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201, 268, 146], device='cuda:0'), tensor([431,  71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22,
        167, 220,  71], device='cuda:0'), tensor([315], device='cuda:0'), tensor([423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1947, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8611, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0558, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([408], device='cuda:0'), tensor([268], device='cuda:0'), tensor([388, 354, 392], device='cuda:0'), tensor([430], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4265, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3128, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7393, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([437,  87, 137], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([425, 150, 437, 150, 397, 249, 394], device='cuda:0'), tensor([183, 138,  47, 213, 281, 392,  47, 362, 385, 194, 194],
       device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([215, 345,  93, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1363, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8769, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0132, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([181, 181], device='cuda:0'), tensor([ 93, 351, 325, 351, 294, 351,  93,  93, 351,  93], device='cuda:0'), tensor([100, 100, 116, 232], device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([451], device='cuda:0'), tensor([415, 296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150,
        292, 415,  22], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3243, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3467, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([256], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3089, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9859, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2948, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([446,  44, 152, 437,  44, 436,  44,  37,  37,  37, 207,  70],
       device='cuda:0'), tensor([ 15, 121, 312, 334,  15], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93,
        437,  93], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([89], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9894, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7151, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7045, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223,
        223,  82, 248, 138, 164], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([189, 313], device='cuda:0'), tensor([295, 295, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0289, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3617, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 402,  87, 131, 397, 385], device='cuda:0'), tensor([430, 123, 123, 152, 123, 287, 123, 123, 123, 350, 436, 436, 287,  87,
        279, 121], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80, 116,  19, 182],
       device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([215,  90], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4045, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0624, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4669, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00030/00055]	Time 0.41 (0.68)	Loss 2.47 (2.61)
		cls_loss 1.40 (1.46)	reg_loss 1.06 (1.14)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([98], device='cuda:0'), tensor([187], device='cuda:0'), tensor([244], device='cuda:0'), tensor([225], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4652, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7876, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49,  22, 270],
       device='cuda:0'), tensor([100,  96,  71,  30,  71], device='cuda:0'), tensor([401, 409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,
         82, 302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([116, 404, 138, 100,   9, 404], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4718, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0308, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5026, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([309,  13, 437, 413, 197, 380, 413, 424,  90, 413,  90, 121],
       device='cuda:0'), tensor([  8, 116, 138,   8, 116, 138, 232], device='cuda:0'), tensor([ 44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436],
       device='cuda:0'), tensor([312, 121,  50,  10], device='cuda:0'), tensor([394, 121,   4], device='cuda:0'), tensor([436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([220], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1440, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9641, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([80, 80], device='cuda:0'), tensor([443, 377,  93, 443], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([255], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([120, 209,  96], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9302, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6655, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5956, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([440, 436, 137, 357, 220], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257],
       device='cuda:0'), tensor([135, 451, 107,  93, 128,  93, 215, 141, 294, 399], device='cuda:0'), tensor([301,  91, 294, 137, 294, 229, 434, 401,  93], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,
         37, 411, 411, 411], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0176, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.4481, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.4658, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([395,  76, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395],
       device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([408, 385, 384, 279, 436,  11,  46, 279,  90, 279, 436, 408, 433, 397],
       device='cuda:0'), tensor([195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325, 183],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5521, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0875, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6396, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120,  98, 451, 121], device='cuda:0'), tensor([ 52,  70, 181,  52, 436], device='cuda:0'), tensor([433], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([ 21, 286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,  96, 155,
        351,  96, 121, 351, 217, 351, 217, 305], device='cuda:0'), tensor([65], device='cuda:0'), tensor([407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338, 338,
         80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4179, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3851, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([58], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([105, 436, 105, 436,  83, 181, 415,  32, 181, 436, 447],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([256], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6734, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4533, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([201,  90, 371, 430, 371, 424], device='cuda:0'), tensor([121, 187, 305, 354,  96], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1720, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9453, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294, 294, 116, 404, 146, 325, 146, 345, 183,  47, 232, 404, 354],
       device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([256, 412, 412, 412, 354, 412, 354, 412, 138, 398, 256, 412, 412, 412,
        138, 398, 354, 412, 256, 412, 412, 354, 412, 138, 398, 256, 412, 412,
        412, 411, 412, 411, 138, 429, 398, 429, 412, 411, 412, 354, 412, 138,
        256, 398, 354, 412, 256, 412, 412, 354, 412, 412, 354, 412, 138, 256,
        398, 256, 412, 412, 354, 412, 354, 412, 138, 398, 354, 412, 256, 412,
        412, 354, 412, 138, 398], device='cuda:0'), tensor([260], device='cuda:0'), tensor([408], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([159, 177, 294, 249], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.0694, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00040/00055]	Time 0.30 (0.59)	Loss 3.07 (2.72)
		cls_loss 1.83 (1.56)	reg_loss 1.24 (1.17)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([319, 234, 319, 339, 402], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310, 310], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268,
        268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,
          5, 392,  50, 268, 268, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6729, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1535, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.8264, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([417], device='cuda:0'), tensor([294, 100, 279, 451, 346, 249,  93,  71, 329, 300], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7825, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5199, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3024, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181, 382, 315,
        181, 315, 181, 315], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100,
        392, 100, 392, 100], device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([451, 406, 140, 451], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([399, 441, 385, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70,
        398, 396, 268, 268, 121, 268, 158, 138, 214,  44, 340],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.6537, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.7452, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 37, 268, 105], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([ 88,  99,  88, 187, 100,  88,  88], device='cuda:0'), tensor([399, 408,  50, 399,  50], device='cuda:0'), tensor([37], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0730, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6778, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7508, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([ 93, 267,  93, 158,  93], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([315, 305, 315,  73, 401, 441, 451, 305, 451, 121], device='cuda:0'), tensor([436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436, 164,
        282, 195], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([415, 269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1376, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7227, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 268, 432, 268], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([362, 105], device='cuda:0'), tensor([ 11, 230,  46,  93, 215, 249, 134, 215, 134], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([408], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6791, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7798, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([ 52, 137, 385,  50, 137], device='cuda:0'), tensor([295], device='cuda:0'), tensor([415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10],
       device='cuda:0'), tensor([ 14,  61, 436], device='cuda:0'), tensor([332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,  95, 436],
       device='cuda:0'), tensor([441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37,
        436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37],
       device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1566, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6952, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8518, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([354], device='cuda:0'), tensor([436, 240], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([304, 280], device='cuda:0'), tensor([224, 385, 224, 246], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4945, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2961, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7906, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([100,  80, 100, 100,  80, 100,  80,  71, 354], device='cuda:0'), tensor([351, 436, 359, 436, 359, 441, 359], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1649, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6823, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8473, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121],
       device='cuda:0'), tensor([438,  22, 254, 224, 399], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([294, 196, 215, 215], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9843, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5479, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5322, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00050/00055]	Time 0.30 (0.53)	Loss 1.53 (2.48)
		cls_loss 0.98 (1.44)	reg_loss 0.55 (1.04)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([208, 121, 264, 336, 436, 305, 215], device='cuda:0'), tensor([405, 121, 415, 294], device='cuda:0'), tensor([256, 302], device='cuda:0'), tensor([286, 199, 447,  93,  71,  93, 315, 315, 447, 315, 431, 315, 315,  93,
         48, 447, 365, 431,  83, 447, 447, 315,  67, 431, 438, 216],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1696, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6769, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([412, 357, 398, 412, 357, 412, 357, 398, 357], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([4], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6587, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3687, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0274, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310], device='cuda:0'), tensor([47], device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0809, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5912, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6721, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([50], device='cuda:0'), tensor([ 80,  91, 411,  88,  80,  88,  91,  88], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([158, 294], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([436, 366,  10, 366], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9313, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4910, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4223, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 0 finished with lr=0.00000492


[Train]: Epoch 1 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([137,  10, 436,  44, 108, 431, 436], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181], device='cuda:0'), tensor([268, 424, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0265, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5779, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6044, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407, 385],
       device='cuda:0'), tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0188, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5911, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6099, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([366, 436, 366,  10], device='cuda:0'), tensor([340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1474, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5595, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7069, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([  9, 121,  71,  22, 201, 131], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([240], device='cuda:0'), tensor([ 83,  16,  22, 215, 441], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0393, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5543, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5936, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430,  11, 452, 284,  90], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([93], device='cuda:0'), tensor([356,  11,  44, 351, 121, 351, 127, 351, 351, 351], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7688, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3837, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1525, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451, 451], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([279, 309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6513, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7869, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4383, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201, 348], device='cuda:0'), tensor([ 22, 276, 453, 416, 424, 181, 445], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([441], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7386, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3653, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1038, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223],
       device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([338, 397, 100, 388,  80, 370,  51,  68, 370, 404, 404,  47, 285],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0367, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9183, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.9550, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([100,  96,  71,  30,  71], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([121,  44,  73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437, 315,
        437, 315], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([332,  93, 436, 215,  83], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2473, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5390, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7864, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([110, 394, 257, 441,  44,  22, 384, 436, 384], device='cuda:0'), tensor([408], device='cuda:0'), tensor([80], device='cuda:0'), tensor([256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392, 129,
        100, 392, 430, 100, 257], device='cuda:0'), tensor([248, 340, 236], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3423, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6044, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9466, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([ 47, 392, 436, 392,  47, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3919, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5833, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9753, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00010/00055]	Time 0.36 (0.36)	Loss 1.98 (1.98)
		cls_loss 1.39 (1.39)	reg_loss 0.58 (0.58)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([384,  43, 110,  90,  44, 269, 279, 269, 269, 315, 269],
       device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268,
        138, 268,   5, 268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268,
        268, 268,   5, 268, 268], device='cuda:0'), tensor([392, 116,  47,  80, 404, 116,  88, 189], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([108, 209, 338, 401], device='cuda:0'), tensor([223, 223, 223, 223, 223], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6820, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([120, 175, 120,  98, 451], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 93, 100, 305, 305,  71, 390, 453,  93], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([346, 415, 269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8023, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3328, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1351, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([260], device='cuda:0'), tensor([301,  76,  98,  91, 302, 451, 286, 424,  91, 451,  91],
       device='cuda:0'), tensor([327], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([357, 376, 146, 398,  44, 338,  71, 116, 398, 354], device='cuda:0'), tensor([403, 196, 294, 294,   9, 313,  52, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1014, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4496, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5510, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([ 19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289],
       device='cuda:0'), tensor([ 36, 183, 354, 330,  80,  80, 338,  80], device='cuda:0'), tensor([436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44,
        438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2153, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6964, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([356], device='cuda:0'), tensor([ 11,  78, 175,  71, 121, 436, 402], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408],
       device='cuda:0'), tensor([201,  93, 279, 283, 279, 121, 283,  98, 283, 301, 283, 329, 301],
       device='cuda:0'), tensor([119, 131, 121, 131, 415], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5127, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8770, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 436], device='cuda:0'), tensor([315,  82, 431, 385, 431, 315, 213, 216, 436,  82, 103, 385, 385, 103,
          8, 365, 103, 302, 103], device='cuda:0'), tensor([ 93, 315, 244], device='cuda:0'), tensor([225], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1532, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4445, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5977, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([256], device='cuda:0'), tensor([116, 116], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([298, 436, 294, 294, 436], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([220], device='cuda:0'), tensor([ 15,  30, 451, 100, 100, 294, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6100, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2536, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8636, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([163, 398, 163, 398], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254], device='cuda:0'), tensor([385, 286, 385, 437, 166, 286, 238,  31, 437,  31, 437,  31],
       device='cuda:0'), tensor([14], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1449, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4218, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5667, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 439, 439], device='cuda:0'), tensor([316, 305, 366, 445, 441, 385, 286], device='cuda:0'), tensor([399, 363, 305, 426, 426, 252, 367, 305, 426], device='cuda:0'), tensor([ 22, 254, 224, 399], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([447,  37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37,
         37, 217, 329,  37, 282, 121,  37, 447, 385], device='cuda:0'), tensor([105, 436,  83, 181, 415,  32, 181, 436, 447, 436], device='cuda:0'), tensor([294, 294, 430, 127,  44,  63, 234], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3370, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4668, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8038, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 268, 354, 138,  70, 398, 438, 268, 268, 256, 138, 438, 256, 438,
        354, 268, 268, 256, 268, 256, 268, 438, 138, 398, 354, 268, 256, 438,
        268, 138,  70, 256, 354, 438, 268, 268, 256, 430, 438, 268, 256, 138,
         70, 398, 441, 302, 249,  93], device='cuda:0'), tensor([441, 220, 181, 441, 431,  50, 431, 441, 220, 441, 431, 219, 399, 220,
        217, 431, 397, 431,  73, 220], device='cuda:0'), tensor([ 47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116,
        195, 325], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([ 90, 399, 230, 277, 305, 175], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8995, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7023, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6018, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00020/00055]	Time 0.30 (0.33)	Loss 2.60 (2.29)
		cls_loss 1.90 (1.65)	reg_loss 0.70 (0.64)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([ 96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([ 61, 217, 255,  50,  85, 365, 215, 292,  16, 292,  49,  16],
       device='cuda:0'), tensor([121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0840, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3743, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4584, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([402, 215, 215, 215, 402, 108], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394], device='cuda:0'), tensor([148], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9644, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3459, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3103, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([247, 436], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147], device='cuda:0'), tensor([ 22,  78, 279, 223, 228, 430, 223,  93, 223], device='cuda:0'), tensor([ 93, 447,  68,  47, 443,  93,  19, 389,  47, 200,  49,  49],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5351, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0566, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 88, 436,  88,  72,  88,  91, 411, 209,  88, 424,  88, 247,  80,  91,
        411,  88], device='cuda:0'), tensor([451, 451, 451, 451, 436,  15], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([15, 72], device='cuda:0'), tensor([ 50, 301], device='cuda:0'), tensor([177, 380, 209,  88, 354,  88,  80,  88], device='cuda:0'), tensor([437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150,
        397, 249, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3506, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4018, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0'), tensor([ 65, 294,  65, 124, 144,  23], device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([362], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 87,  91,  63, 305, 363, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0549, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3629, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4178, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([ 71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([319, 319, 121], device='cuda:0'), tensor([249, 217, 249, 217,  93, 201,  93,  71,  93,  96,  22, 197, 351, 226,
        351, 226,  93, 351, 390, 420], device='cuda:0'), tensor([406], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286,
        411, 286, 411, 286], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2250, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4029, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6279, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36,  36],
       device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([431], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407, 280,  21,  40,
        269,  44, 424, 407,  21], device='cuda:0'), tensor([313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453, 197, 436, 340,
        121, 351, 318], device='cuda:0'), tensor([ 10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100,
        385, 436,  93], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3759, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4857, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8616, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([357, 431, 220, 409, 220, 357, 431, 294, 357, 431, 447, 357, 431, 294],
       device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27,  27, 135],
       device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([113, 441, 279, 248, 415,  23, 217, 441], device='cuda:0'), tensor([417], device='cuda:0'), tensor([413,  90, 121, 437, 124,   9, 437, 120, 437,  90, 413,  90],
       device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0176, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3241, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3416, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([166, 294], device='cuda:0'), tensor([ 93, 408, 216, 447], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([15], device='cuda:0'), tensor([411, 268,  73, 268, 411, 268, 146, 430, 411, 268, 105, 268, 280, 268,
        411, 268, 280, 268,  72, 329, 411,  47,  78], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8248, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1155, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([50], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([441, 441], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([294, 249], device='cuda:0'), tensor([2, 2, 2, 2, 2], device='cuda:0'), tensor([159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([436, 334, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6020, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2156, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8176, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00030/00055]	Time 0.29 (0.32)	Loss 0.82 (1.80)
		cls_loss 0.60 (1.30)	reg_loss 0.22 (0.50)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([361, 325,  47, 302,  47, 256,  47, 109,  47], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371, 420], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([392, 100,  80, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9319, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2895, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2214, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([187], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([181, 436,  82, 313,  82, 181,  82, 181,  82, 436], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([224], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8439, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2853, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1291, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([146], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([80], device='cuda:0'), tensor([234, 415], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([215, 225, 424, 225, 215,  91,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3742, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5506, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([424, 166, 385, 166], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([429], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([319, 406, 451, 406, 140], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0249, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3180, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3429, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417,
        388, 417, 411, 417, 417, 417, 314, 417, 417, 417, 436, 417],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([411, 405, 411, 282, 451, 258,  71, 411, 399, 188, 430, 425, 411],
       device='cuda:0'), tensor([219], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2797, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4220, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7017, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([9], device='cuda:0'), tensor([197, 452,  15, 436, 225], device='cuda:0'), tensor([295, 295, 436], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 16, 302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([447, 402,  50, 181,  30, 181], device='cuda:0'), tensor([ 19, 436, 384,  19, 182, 121, 430, 436,  80,  47, 436, 325,  93, 436,
        345, 113], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2981, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4120, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7101, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([279,  90, 279,  90], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310], device='cuda:0'), tensor([137,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451,  49, 424], device='cuda:0'), tensor([415, 417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8872, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3055, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1927, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([313,  83, 436, 280, 193, 163, 304, 437, 436, 279, 296],
       device='cuda:0'), tensor([181, 181, 205, 436, 345], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([98], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([256, 388, 109, 116, 183, 325, 354,  47, 294, 302, 116, 256, 116, 116,
        302, 116], device='cuda:0'), tensor([298, 215, 187,   8, 187,  96,  96, 226,  83], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0468, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3130, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3598, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,
         50, 415,  93], device='cuda:0'), tensor([267,  93, 158,  93], device='cuda:0'), tensor([305, 423], device='cuda:0'), tensor([408], device='cuda:0'), tensor([295, 295, 295, 295, 195, 295], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([197, 215,  63, 385,  82,  14, 121], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0628, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3564, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4193, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([47,  9], device='cuda:0'), tensor([430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190,
        357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([294,   4,   4], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([333, 354, 100, 298], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1710, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3640, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5350, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00040/00055]	Time 0.30 (0.31)	Loss 1.53 (1.73)
		cls_loss 1.17 (1.27)	reg_loss 0.36 (0.47)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 18, 215, 345, 215], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([113], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7796, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2587, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0383, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([132], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3948, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4516, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([436, 436, 159,  15, 436,  15, 436, 121, 451, 436, 451,  12],
       device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1928, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3825, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5753, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([316, 430, 316], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([ 93, 244, 432], device='cuda:0'), tensor([89], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([146,  71, 390, 401], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8371, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2750, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1121, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 215, 100,  37, 257, 430, 451], device='cuda:0'), tensor([208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([270, 385, 393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181,
        382], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([63], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2069, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3921, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5991, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([351, 295, 351,  63], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37], device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405],
       device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3268, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4121, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7389, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([437,  87, 137], device='cuda:0'), tensor([268,  80, 268,  80,  80], device='cuda:0'), tensor([255], device='cuda:0'), tensor([  9,  88,  91,  88, 100,  88,  91,  88, 100,  88,  88, 100,  88, 100,
         88,  88], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0')]yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1875, 1536])yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats
yes3 {'cls_loss': tensor(1.0165, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3341, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3507, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([100, 354], device='cuda:0'), tensor([232, 388, 232, 388, 232, 116], device='cuda:0'), tensor([408], device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([88], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399,  76], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2164, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9150, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268,   5, 430, 268], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([451], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7971, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2683, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0654, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 52, 107,  96, 338], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([441, 441, 225, 108, 305, 285, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3848, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5833, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00050/00055]	Time 0.30 (0.31)	Loss 1.58 (1.70)
		cls_loss 1.20 (1.25)	reg_loss 0.38 (0.45)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([116, 412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([166], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([392, 392, 392], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8406, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2734, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1140, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430],
       device='cuda:0'), tensor([146, 182, 392,   5, 146], device='cuda:0'), tensor([ 93, 437, 121, 437,  93, 437,  93, 437,  93, 437, 121, 280,  93,  12,
        121, 432, 408, 286, 283], device='cuda:0'), tensor([201], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([ 51, 398, 435, 398], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0436, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3485, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3922, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 58, 399], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([383, 415, 313, 172, 441, 438, 441, 138, 415, 270, 441, 247],
       device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([451, 408,  37,  37,  37, 380, 408, 451, 193, 279, 105, 313, 451, 193,
         16, 105,  85, 408, 408,  50, 408,  50, 313], device='cuda:0'), tensor([ 10, 436,  10, 315], device='cuda:0'), tensor([215,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4110, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4696, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8806, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([47], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([108], device='cuda:0'), tensor([298,  73,  71, 136,  73, 424, 298, 425], device='cuda:0'), tensor([196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302, 305,
        217, 305, 402, 305, 149], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1692, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3794, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5485, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 1 finished with lr=0.00000984


[Train]: Epoch 2 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([402, 384, 215, 215], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([399], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9603, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3213, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2817, device='cuda:0', grad_fn=<AddBackward0>)}yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([6047, 1536])yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([267,  93, 267,  93, 267], device='cuda:0'), tensor([188, 430, 425, 411, 207, 108,  70, 447,  44], device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 96, 382], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0748, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3571, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4319, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301,  91, 294, 137, 294, 229, 434, 401,  93, 431], device='cuda:0'), tensor([183, 325, 354,  47, 294, 302, 116, 256, 116, 116, 302, 116, 388, 338,
        362], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([268], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2213, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4030, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6242, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255, 394, 255, 394], device='cuda:0'), tensor([437, 436, 279, 296, 302, 422, 121,  30,  30], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([315], device='cuda:0'), tensor([389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133, 404,
        389], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2599, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3994, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6592, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294, 120, 436, 120,  35, 436, 383,  44, 354], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 68, 121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279],
       device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1717, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3902, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5619, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([255], device='cuda:0'), tensor([436,  52,  52, 298,  71, 298,  52], device='cuda:0'), tensor([451], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([ 88, 354,  88, 209, 411, 121, 105], device='cuda:0'), tensor([302, 248,  71, 224], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1112, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3767, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4879, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([50], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0'), tensor([183, 388, 338, 281, 116, 138, 311, 303, 183, 138,  47, 213, 281],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([90, 11, 90, 11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9703, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3249, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2952, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([392, 436, 392,  47, 392], device='cuda:0'), tensor([ 43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([ 12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2994, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4346, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7341, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453, 197, 436, 340,
        121, 351, 318], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([294, 315, 436, 315, 108,   8,   8], device='cuda:0'), tensor([ 80, 354], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5244, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5015, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0259, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([116, 116,  47, 354], device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411], device='cuda:0'), tensor([ 73, 105, 283, 280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150,
        394, 150, 437, 425, 150, 437, 150, 397], device='cuda:0'), tensor([417], device='cuda:0'), tensor([182, 392, 146], device='cuda:0'), tensor([436, 103, 385, 103], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1095, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3832, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4927, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436], device='cuda:0'), tensor([  4, 134,   4, 358], device='cuda:0'), tensor([398, 376, 398,   9, 398,  82, 256, 315, 256], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([280, 319, 319, 100], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([399, 159, 177], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2730, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0715, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00010/00055]	Time 0.35 (0.35)	Loss 1.07 (1.07)
		cls_loss 0.80 (0.80)	reg_loss 0.27 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([295, 181], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([155, 131, 119], device='cuda:0'), tensor([197, 121,  11, 121, 215,  32, 121, 120, 351,  89, 351,  37, 351,  94,
        121, 155], device='cuda:0'), tensor([ 99,  88, 187, 100,  88,  88,  88], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2978, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4491, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7469, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([4], device='cuda:0'), tensor([294, 385,   8, 404,  47, 435, 124, 447, 335,  82, 320],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([284], device='cuda:0'), tensor([166], device='cuda:0'), tensor([121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,
         50, 223, 402, 313, 223, 402], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([436,  22, 436, 316,  22, 452,  90, 159, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2714, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 12, 425,  63, 165], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([279,  11,  11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98,
        283, 301, 283], device='cuda:0'), tensor([408], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([219], device='cuda:0'), tensor([436, 201, 436, 403, 403,  63], device='cuda:0'), tensor([399, 351, 245, 351, 142, 351, 142, 279, 201, 142,  11],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1514, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4060, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5574, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([113], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137,  71, 137,  71, 137], device='cuda:0'), tensor([441, 415, 441,  49], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8360, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2830, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1190, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([181, 181, 205, 436, 345], device='cuda:0'), tensor([430, 270, 436, 430], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([386, 184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2536, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4431, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6968, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([181, 219, 181], device='cuda:0'), tensor([142, 224, 279, 136, 121, 224, 451, 309, 249], device='cuda:0'), tensor([ 10, 220, 436,  71,  93,  10, 220, 220, 436, 357], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0'), tensor([295, 295, 295, 195, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4439, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4702, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9141, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8, 395, 205, 326,
        395,  85, 417, 159,  31, 121], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0'), tensor([108, 348, 354], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([268, 432, 268], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3350, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4667, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8017, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 50, 309, 279, 121, 309], device='cuda:0'), tensor([100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100,
        392, 129, 100, 392, 100], device='cuda:0'), tensor([436, 439, 439, 436, 439, 436], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([121,  80, 142, 121, 436, 121, 398, 384], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1474, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3904, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5378, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([131,  22], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220, 181,
        220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357, 431,
        137, 220, 220, 357, 431, 220, 409, 220, 357, 431], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([63], device='cuda:0'), tensor([298,  71, 247], device='cuda:0'), tensor([408,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1382, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3645, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5027, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([415, 405, 121, 415], device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215, 204],
       device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([440, 356, 384,  43, 110,  90,  44, 269, 279], device='cuda:0'), tensor([319, 319, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4458, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7433, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00020/00055]	Time 0.30 (0.33)	Loss 1.74 (1.41)
		cls_loss 1.30 (1.05)	reg_loss 0.45 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405], device='cuda:0'), tensor([ 46,  10, 415,   9,   9, 436], device='cuda:0'), tensor([148], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([437,  93, 437, 121, 280,  93,  12, 121, 432, 408, 286, 283, 280, 279,
        121, 345, 121, 437,  93, 437], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0324, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3591, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3915, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([4], device='cuda:0'), tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166], device='cuda:0'), tensor([451, 451, 451, 451, 155, 451, 451], device='cuda:0'), tensor([294, 391, 120,  96], device='cuda:0'), tensor([256], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0'), tensor([451], device='cuda:0'), tensor([268, 146, 411, 268,  73, 268, 411, 268, 146, 430, 411, 268, 105, 268,
        280, 268, 411, 268, 280, 268,  72, 329], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8776, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2789, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1566, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([451, 406, 140, 451, 300], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1906, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8248, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([ 90, 305, 451,  73, 121,  44,  73, 315, 437, 305, 437],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([215,  18, 215, 345, 215], device='cuda:0'), tensor([268,   5, 430, 268], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([187,  96, 108,  96, 294,  96, 385,  50], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8389, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2869, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1258, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 175, 223], device='cuda:0'), tensor([441, 225, 108, 305, 285, 305, 441, 418], device='cuda:0'), tensor([436, 447, 436, 246, 436,  82], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([201], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 93, 283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7895, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2759, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0653, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 31, 365,  31, 365, 305], device='cuda:0'), tensor([89], device='cuda:0'), tensor([50, 10], device='cuda:0'), tensor([408], device='cuda:0'), tensor([196, 397, 279, 100, 296, 415, 100, 121,  85, 453,  72, 399, 453, 270],
       device='cuda:0'), tensor([ 83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0'), tensor([408, 436, 399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0895, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3493, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4388, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([384, 438, 121, 113, 438, 385,  90, 438, 396], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4485, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4950, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9435, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 383], device='cuda:0'), tensor([ 31, 445, 340, 277, 279, 236,  31, 415], device='cuda:0'), tensor([191], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([294,  65, 124, 144,  23,  82,  65], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([108], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8070, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2554, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0624, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([223, 228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294,
        223, 223,  82], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([354], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286], device='cuda:0'), tensor([ 44, 268, 354, 268, 256, 138,  70, 256, 354, 268, 256, 268, 256, 268,
        354, 138,  70, 398, 438, 268, 268, 256, 138, 438, 256, 438, 354, 268,
        268, 256, 268, 256, 268, 438, 138, 398, 354, 268, 256, 438, 268, 138,
         70, 256, 354, 438, 268, 268, 256, 430, 438, 268, 256, 138,  70, 398,
        441], device='cuda:0'), tensor([305], device='cuda:0'), tensor([369, 369, 369, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.9456, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6829, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6285, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([250,  50, 250], device='cuda:0'), tensor([ 80, 177, 398, 385,  80], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([441, 113], device='cuda:0'), tensor([301, 249, 294, 294, 205,  15], device='cuda:0'), tensor([113, 405,  93, 405,  93, 405,  93, 332,  40, 405, 385],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6630, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2344, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8974, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00030/00055]	Time 0.30 (0.32)	Loss 0.90 (1.24)
		cls_loss 0.66 (0.92)	reg_loss 0.23 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424, 150,
        433, 247, 218, 214], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([401, 121,  62, 294,  75], device='cuda:0'), tensor([21], device='cuda:0'), tensor([181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([ 50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221,
        196, 316], device='cuda:0'), tensor([100, 257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9656, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2772, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 155, 247, 436, 230], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80],
       device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8990, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2942, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1932, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([80, 80], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([47], device='cuda:0'), tensor([327,  52,  14, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7654, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2632, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0286, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([264, 233, 385, 436, 415, 264, 218, 264, 433, 121, 264, 415],
       device='cuda:0'), tensor([  8, 385,  47, 109, 195,  47, 256,  80, 109, 325,  47],
       device='cuda:0'), tensor([ 93, 408, 216, 447], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313],
       device='cuda:0'), tensor([441, 359, 203, 359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4953, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9250, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([58], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197,  50], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([146], device='cuda:0'), tensor([305, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5505, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1966, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7470, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([98], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([98], device='cuda:0'), tensor([305, 393, 305, 159, 393, 100, 393,  87, 437, 332, 437,  95,  83, 286,
        407, 437,  21, 168], device='cuda:0'), tensor([323, 323, 121, 269], device='cuda:0'), tensor([255], device='cuda:0'), tensor([37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8249, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2697, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0946, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270,
        394, 279, 421, 150, 302, 415, 184, 302, 296, 302], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407, 385],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4550, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5054, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9605, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([173], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([295], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 63, 446,  44, 152, 437,  44, 436,  44,  37,  37,  37, 207],
       device='cuda:0'), tensor([392, 100,  80, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7164, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9781, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([  9, 155, 121,  43,  17, 147, 344], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([451, 121, 305, 424, 305, 450, 305, 436], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7396, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2520, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9916, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([47,  9], device='cuda:0'), tensor([337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270],
       device='cuda:0'), tensor([ 46, 279,  90, 279, 436, 408, 433, 397, 249, 408, 408, 294, 451, 193,
        105, 305], device='cuda:0'), tensor([288, 249, 430, 313, 165, 205, 156, 121, 156], device='cuda:0'), tensor([244], device='cuda:0'), tensor([122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135, 135,
         93, 214, 351,  96, 155, 351,  96, 121, 351, 217], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([385, 436, 121, 319, 121, 316,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5077, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9655, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00040/00055]	Time 0.30 (0.31)	Loss 1.97 (1.42)
		cls_loss 1.46 (1.05)	reg_loss 0.51 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([  6, 158], device='cuda:0'), tensor([404, 116,  88, 189, 388, 404, 116, 116], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([163], device='cuda:0'), tensor([399,  49, 440, 440], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9093, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3114, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2207, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([120, 415, 430, 257,  31,  49,  24,  49, 181], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4090, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4760, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8850, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195, 325],
       device='cuda:0'), tensor([166, 437, 385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399,
        437,  50], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([ 80, 116,  80,  80,  93, 325, 388, 232, 338], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([248, 258, 132], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4032, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5800, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 54, 398], device='cuda:0'), tensor([65], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([80], device='cuda:0'), tensor([191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215,
        436, 215], device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([176,  46, 120, 120,  46, 197, 283,  46, 108, 209], device='cuda:0'), tensor([451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27,  27],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9746, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3442, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3187, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([306, 116, 116, 306, 306], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([268], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6640, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2538, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9178, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([116, 116, 116, 116, 404, 138], device='cuda:0'), tensor([137, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3781, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4827, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([303, 325, 388, 116, 100,  51, 100, 303, 294, 289], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([400, 430, 351, 430, 430, 351, 430, 351,  93, 351, 325],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3765, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4343, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([408], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([431], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8221, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2871, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1092, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([354, 354, 432, 354], device='cuda:0'), tensor([9], device='cuda:0'), tensor([294, 430, 127,  44,  63, 234], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([441,   8, 441, 286, 441, 385, 441, 257], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([187], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9875, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3324, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3198, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,
          5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392, 268, 268, 268,
        268,   5], device='cuda:0'), tensor([ 15, 294,  15,  15], device='cuda:0'), tensor([116, 116, 138, 294, 362, 362], device='cuda:0'), tensor([415,  16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16],
       device='cuda:0'), tensor([430, 437, 386, 437, 386, 437, 386, 385, 121], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2073, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4617, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6690, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00050/00055]	Time 0.30 (0.31)	Loss 1.67 (1.47)
		cls_loss 1.21 (1.08)	reg_loss 0.46 (0.38)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([204, 350, 204, 143], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354], device='cuda:0'), tensor([220, 292,  49], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([ 16, 298,  73,  71, 136,  73, 424, 298], device='cuda:0'), tensor([108], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1300, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3665, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4964, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 240], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([435, 398], device='cuda:0'), tensor([105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2486, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9210, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([ 47, 260,  17, 116, 388,  93,  19, 109,  80, 303, 116],
       device='cuda:0'), tensor([249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100, 385,
        436,  93, 291, 121, 291, 121, 115], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2663, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4486, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7150, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385], device='cuda:0'), tensor([385, 385, 217, 385, 121, 441, 383, 415, 313, 172], device='cuda:0'), tensor([ 91,  37, 201, 345, 359,  91, 345,  91,  91, 345,  91, 247],
       device='cuda:0'), tensor([120, 436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37,
        447,  37, 331,  37], device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5,
        167, 431, 268, 415,  22,  50, 268], device='cuda:0'), tensor([437, 300, 437,  90], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5881, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5295, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1176, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 2 finished with lr=0.00001475


[Train]: Epoch 3 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3252, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2016, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417,
        411, 417, 417, 417, 314, 417, 417, 417, 436, 417, 150],
       device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([268], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([284], device='cuda:0'), tensor([100, 116, 232, 116, 399], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0030, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3556, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3586, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,  95, 436],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([451], device='cuda:0'), tensor([146, 401, 146, 268, 408, 268,  44, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0273, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3586, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3859, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([253,  87, 140, 316], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([256], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([88], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7747, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2693, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0440, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408, 415, 408],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([137, 431,   9, 431, 131, 247], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([283, 436, 383,  50], device='cuda:0'), tensor([385, 224, 246, 224, 246, 224], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7945, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2823, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0768, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 306, 256, 306], device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([398, 436, 398,  51, 398], device='cuda:0'), tensor([224, 436, 213,  19, 436, 384,  19, 182, 121, 430, 436,  80,  47, 436,
        325], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([80], device='cuda:0'), tensor([225], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6138, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2123, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8261, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([146, 182, 392, 146, 146], device='cuda:0'), tensor([440, 436, 137, 357, 220,  15, 294, 302, 415], device='cuda:0'), tensor([100, 121, 388, 359, 338,  30, 338, 338, 354, 215, 311],
       device='cuda:0'), tensor([234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385, 393,
        382, 234, 303, 382, 181,   9, 181, 315, 181], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([298,  16, 298,  73,  71, 136,  73], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4712, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9584, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([ 50, 291, 438, 396, 438, 291, 438, 291, 438, 291, 396, 438, 291],
       device='cuda:0'), tensor([232, 116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362, 325, 294,
        294, 116, 404], device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([399], device='cuda:0'), tensor([44], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1641, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3861, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5502, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([47], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223, 305],
       device='cuda:0'), tensor([120, 120,  46, 197, 283,  46, 108, 209], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([109,   8, 325,  82, 436, 325, 183, 361, 325], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 369, 174, 256, 174, 256],
       device='cuda:0'), tensor([260,  44, 447, 294, 392, 100], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0868, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4009, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4878, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120,  98, 451, 121], device='cuda:0'), tensor([399], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443],
       device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([ 37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,
         37, 247, 225], device='cuda:0'), tensor([313,  82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,
         82, 436, 124], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2772, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4794, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7566, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([302,  72, 196,  43, 402, 305, 128, 236, 128, 128, 241, 305],
       device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([319, 316, 441, 441, 225], device='cuda:0'), tensor([316, 436], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([197, 197, 197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9018, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1982, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00010/00055]	Time 0.36 (0.36)	Loss 1.20 (1.20)
		cls_loss 0.90 (0.90)	reg_loss 0.30 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([334, 120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([158], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([2, 2, 2, 2], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 90, 305, 451,  73, 121,  44,  73, 315, 437, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8133, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2669, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0802, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([116, 116, 306, 306, 116, 306], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([ 63,  80, 351, 121, 302], device='cuda:0'), tensor([ 71, 437, 436, 283,  82], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8279, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2980, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1259, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436,  14, 436,  14], device='cuda:0'), tensor([439, 436, 439, 436, 439], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 11,  90,  11, 429], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9085, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3375, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2460, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 215, 141, 294, 399, 135, 307, 400,  50, 294], device='cuda:0'), tensor([451, 451, 319], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([220, 292], device='cuda:0'), tensor([249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0'), tensor([294, 249, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9478, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3441, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2919, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50,  16, 436, 385,
         16], device='cuda:0'), tensor([108, 348, 354], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([225,   0, 301, 131, 121, 228,  71,  42, 201, 257, 430],
       device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([148], device='cuda:0'), tensor([441, 385, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398,
        396, 268, 268, 121, 268, 158, 138, 214,  44, 340, 354],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3588, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5066, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8654, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8,
        395, 205, 326, 395,  85, 417], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 62, 301,  82, 294, 298], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1067, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3802, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([146], device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([436], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5193, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6908, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 256], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([338, 362, 338, 256, 385, 354,  47, 354, 256], device='cuda:0'), tensor([436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44,
        438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([ 59, 436, 224,  71, 385,  62, 451,  62], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0663, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4147, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4810, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([15], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([50], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6687, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2380, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9067, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([  7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437, 100, 437],
       device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([406], device='cuda:0'), tensor([181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181, 205],
       device='cuda:0'), tensor([402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181, 219],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0872, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3826, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4698, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00020/00055]	Time 0.31 (0.33)	Loss 1.47 (1.33)
		cls_loss 1.09 (0.99)	reg_loss 0.38 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100,  80,  93, 121, 124, 332, 248, 298], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351, 217, 305,  32,
        305, 438, 215], device='cuda:0'), tensor([315], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([105, 407, 385, 436, 407, 436, 407, 407, 314, 407,  85, 314,  95,  50],
       device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2989, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4621, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7610, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([108], device='cuda:0'), tensor([82], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7633, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2732, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0364, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([399, 121, 294], device='cuda:0'), tensor([ 19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289],
       device='cuda:0'), tensor([234,  93,  44,  93,  12,  93,  35, 249,  93,  12,  93],
       device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([445, 236, 181, 236, 181, 107, 181, 352, 279, 340, 121, 424, 181, 305,
        280, 415], device='cuda:0'), tensor([244, 432], device='cuda:0'), tensor([436,  10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,
         10, 436,  10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1876, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4293, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6168, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282, 195], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([63], device='cuda:0'), tensor([354, 398, 376,  71, 354, 398, 354, 398, 354, 357, 376, 146, 398],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2570, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4358, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6927, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([384, 279, 385, 121,  87, 120, 201, 430], device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197],
       device='cuda:0'), tensor([424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([436,  93, 137,  10, 436,  44, 108, 431], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1026, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3986, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5012, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([93], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71,
        167,   5, 167, 431, 268, 415,  22,  50], device='cuda:0'), tensor([121, 291, 121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366, 215,
         83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436],
       device='cuda:0'), tensor([294, 399, 302], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299,  32,  93],
       device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1872, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4220, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6092, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([447, 436, 246, 436,  82], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269], device='cuda:0'), tensor([268], device='cuda:0'), tensor([431, 100, 294], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 10, 366], device='cuda:0'), tensor([432, 354], device='cuda:0'), tensor([166], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4387, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1658, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6045, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([113], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([305, 292, 305, 399, 363, 305], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([411,  50, 415,  93], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([438, 121, 113, 438, 385,  90, 438, 396, 411, 342, 415, 309, 415, 309,
        201,  32, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8103, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1010, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([405, 441, 405, 441, 405, 444], device='cuda:0'), tensor([166, 286, 238,  31, 437,  31, 437,  31, 166], device='cuda:0'), tensor([354, 100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 354, 256, 100], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0224, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3739, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([401,  81, 100, 121,  29, 453, 249, 356,  11,  44, 351, 121],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294],
       device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([195, 442, 121, 442, 451, 279, 442,  93, 345, 437, 115, 437],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([142,  80, 298, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8806, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3151, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1957, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00030/00055]	Time 0.30 (0.32)	Loss 1.20 (1.29)
		cls_loss 0.88 (0.96)	reg_loss 0.32 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137,  71, 137,  71, 137], device='cuda:0'), tensor([356], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([388, 232, 388, 232, 116, 116, 138, 294], device='cuda:0'), tensor([9], device='cuda:0'), tensor([294, 264, 292, 399, 142,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8650, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2812, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([443, 124, 142, 166, 294], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([223, 223, 223, 223, 223], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([225, 424, 225, 215,  91,  63, 113], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9849, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3524, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3373, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,
         21,  21, 224], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([ 44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436, 441],
       device='cuda:0'), tensor([413, 245, 413, 319, 394, 453, 100,  93,  86, 413], device='cuda:0'), tensor([301, 283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,
         83, 283,  83], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3848, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4689, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8537, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([423], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([447,  37, 447,  37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49,
        122,  37,  37, 217, 329,  37, 282, 121,  37], device='cuda:0'), tensor([425,  93, 283, 283, 283, 225, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9396, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3195, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2591, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332,
        269], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([181, 181,   9, 155, 121,  43], device='cuda:0'), tensor([305, 187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([370,  80,  80, 443,  93, 166], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1685, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4047, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5732, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268],
       device='cuda:0'), tensor([197, 452,  15, 436, 225], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 80, 436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311, 354, 159,
        354], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0572, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3913, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4485, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([89], device='cuda:0'), tensor([294, 121, 289, 432, 270], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([ 37, 380, 408, 451, 193, 279, 105, 313, 451, 193,  16, 105,  85, 408,
        408,  50, 408,  50, 313, 451, 201, 451], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([215,  50,  50, 217, 436], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2684, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0830, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 443], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([37], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([392, 268, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268, 268,   5,
        392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5,
        392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8407, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3741, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2147, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 143, 279, 441,  32, 124,  71, 100,  32, 430, 441, 257],
       device='cuda:0'), tensor([357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270],
       device='cuda:0'), tensor([ 93, 394, 183, 435, 311, 232,  36, 120,  36,  36,  73, 116],
       device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([439, 439, 257,   9], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([436, 294, 315, 436, 315, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1425, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4040, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([433, 356], device='cuda:0'), tensor([294, 100, 279, 451, 346, 249,  93,  71, 329, 300], device='cuda:0'), tensor([ 14, 436], device='cuda:0'), tensor([295], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([319], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 82, 181,  82, 313, 181,  82, 181,  82, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4863, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1762, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6625, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00040/00055]	Time 0.30 (0.32)	Loss 0.66 (1.13)
		cls_loss 0.49 (0.84)	reg_loss 0.18 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([271, 121, 316], device='cuda:0'), tensor([384, 436,  80, 385,  22,  22, 257, 133, 399, 302], device='cuda:0'), tensor([181, 451], device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436], device='cuda:0'), tensor([248, 340], device='cuda:0'), tensor([295, 295, 295, 195, 295], device='cuda:0'), tensor([ 87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150,
        283, 286, 283], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64)]
yes3 {'cls_loss': tensor(0.8425, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2892, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1317, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 430, 197, 440, 121, 316,  32,  63, 121,  32, 453,  31, 300],
       device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([4], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9386, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3740, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3126, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([436, 392,  47, 392, 436], device='cuda:0'), tensor([437, 436, 279, 296, 302, 422, 121,  30,  30], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([215, 215, 402, 108, 415], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9670, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3744, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3415, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([103, 385, 103,  70, 431], device='cuda:0'), tensor([451, 405, 258, 430, 411, 108], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([ 37,  37,  37, 207,  70, 270,  44], device='cuda:0'), tensor([392, 100,  80, 100], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7585, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2558, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0142, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50, 159],
       device='cuda:0'), tensor([ 50, 301], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0161, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3751, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([330, 217,  47, 232, 281, 388, 392, 404,  47,  88,   9, 327, 325,  63],
       device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([21], device='cuda:0'), tensor([405, 168, 405,  82, 213, 285, 405, 294,  21], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1416, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4058, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5474, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95], device='cuda:0'), tensor([241, 184, 296, 411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415],
       device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([399], device='cuda:0'), tensor([201,  90, 371, 430, 371], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1583, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4061, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5644, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([249, 319,  87, 105, 356, 279,  96, 100], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([333,  58], device='cuda:0'), tensor([405, 121, 415], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([385, 155, 131, 119], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7085, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2264, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9349, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([279,  90, 279,  90], device='cuda:0'), tensor([344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270,
        394, 279, 421, 150, 302, 415, 184, 302, 296, 302], device='cuda:0'), tensor([191], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([244], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 82, 294,  82, 134, 255,  31,  63,  82, 255,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3290, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2435, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([433, 323, 323, 121, 269], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([183, 361, 203, 385, 325, 397, 325, 354, 370, 213, 183, 354, 404, 124],
       device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0550, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3888, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4438, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00050/00055]	Time 0.31 (0.32)	Loss 1.44 (1.19)
		cls_loss 1.06 (0.88)	reg_loss 0.39 (0.31)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305], device='cuda:0'), tensor([294, 196, 215], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([65], device='cuda:0'), tensor([220, 181,  80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181,
        220, 181, 217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357,
        431, 220, 409, 220, 357, 431, 294], device='cuda:0'), tensor([436, 240], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9232, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2446, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([219], device='cuda:0'), tensor([436], device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87], device='cuda:0'), tensor([121], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279], device='cuda:0'), tensor([258, 132], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 82, 431, 441, 431,   9, 431, 441, 431, 385, 431, 441, 220,  49, 441,
        431, 436, 220, 441, 220, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0337, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3566, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3903, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 16,   9,  88,  91,  88, 100,  88,  91,  88, 100,  88,  88, 100,  88,
        100,  88,  88], device='cuda:0'), tensor([244], device='cuda:0'), tensor([386, 437, 386, 437, 386, 385, 121, 166,  93], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1897, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4189, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6086, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436], device='cuda:0'), tensor([441, 415, 441,  49], device='cuda:0'), tensor([305, 159, 393, 100, 393,  87, 437, 332, 437,  95,  83, 286, 407, 437,
         21, 168, 100,  21, 437,  21, 329, 292,  21], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([ 88, 268,  80, 268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1724, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4142, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5866, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 3 finished with lr=0.00001967


[Train]: Epoch 4 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133, 404,
        389], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([146, 325, 146, 345, 183,  47, 232, 404, 354, 194, 453, 415, 116],
       device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0')]
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([3258, 1536]) torch.Size([706, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([73, 1536]) torch.Size([212, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([3375, 1536])
yes3 {'cls_loss': tensor(1.0532, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3780, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4312, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([193, 163, 304, 437, 436, 279, 296, 302, 422], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299,  32], device='cuda:0'), tensor([284], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([201], device='cuda:0'), tensor([47], device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([100,  71, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9430, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3377, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2807, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325, 183],
       device='cuda:0'), tensor([ 36, 120,  36,  36,  73, 116,  82, 294, 305,  36, 177,  36],
       device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3103, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4587, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7691, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([90], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([351, 121, 351, 127, 351, 351, 351, 351, 231, 351], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([301, 385, 399, 441, 301, 433, 294], device='cuda:0'), tensor([ 90, 268,  37, 268, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6594, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2390, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8985, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([388, 354, 392], device='cuda:0'), tensor([ 71, 437, 436, 283,  82], device='cuda:0'), tensor([430,  81, 127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([100, 354], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([ 44, 195, 201, 195], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6438, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2332, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8769, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([215, 108, 348], device='cuda:0'), tensor([417], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 65, 294,  65, 124, 144], device='cuda:0'), tensor([181,  82, 181,  82, 181,  82], device='cuda:0'), tensor([371, 420, 420, 424, 371,  91, 113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6962, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2765, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9727, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([408], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([257], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([399, 302, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3799, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4086, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([251, 251], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([ 47, 100, 453, 388, 257, 370,  80], device='cuda:0'), tensor([382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181, 382, 315, 181,
        315, 181, 315, 181], device='cuda:0'), tensor([406, 140, 451, 300], device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 395,   8, 395, 205, 326, 395,  85, 417,
        159,  31, 121, 114, 326], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1616, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4077, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5693, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201, 305, 305, 394, 201, 305, 302, 305, 217, 305, 402, 305, 149, 302,
         72, 196], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([315, 305, 315,  73, 401, 441, 451, 305, 451], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0361, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3740, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4101, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([137,   0,  22,  52, 137, 385,  50], device='cuda:0'), tensor([ 37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,
         37, 247, 225], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3880, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2938, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3046, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1104, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00010/00055]	Time 0.35 (0.35)	Loss 1.11 (1.11)
		cls_loss 0.81 (0.81)	reg_loss 0.30 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([248, 340, 236], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([432, 268, 268], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8174, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3053, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1227, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 82, 440, 441, 279], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 267], device='cuda:0'), tensor([354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256,
        100, 392, 129, 100, 392], device='cuda:0'), tensor([296], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8810, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3317, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2127, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([302, 350, 313, 120,  82, 255,  82, 294,  82, 134, 255],
       device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8891, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3328, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2219, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([398, 116, 357, 412, 357, 412, 357, 398, 412], device='cuda:0'), tensor([ 44, 354, 398, 256, 412, 412, 412, 354, 412, 412, 354, 138, 398, 256,
        412, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 138, 398, 354,
        412, 256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 354, 412,
        354, 412, 138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412,
        412, 354, 412, 138], device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([177, 253,  87, 140], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([398, 436, 398,  51, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5751, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6377, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2128, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([31], device='cuda:0'), tensor([225], device='cuda:0'), tensor([392,  51, 392, 100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404,
        285], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([224, 121,  70, 224,  70,  22,  52, 257, 234], device='cuda:0'), tensor([451, 436, 316,  93, 191, 436,  44, 451, 221, 284, 436],
       device='cuda:0'), tensor([ 85, 292, 385, 155, 131], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8311, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2930, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1241, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 436, 439], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0'), tensor([121, 424, 181, 305, 280, 415, 415, 238,  12, 415, 453, 415, 385, 210,
        415, 279, 453, 385,  32], device='cuda:0'), tensor([110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269,  71, 424],
       device='cuda:0'), tensor([334, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5120, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1513, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([295], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([226], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([415, 430,  70,  44, 430, 394, 279,  82], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4236, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1744, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5981, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([225, 424, 225, 215,  91,  63, 113], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([417], device='cuda:0'), tensor([413, 245, 413, 319, 394, 453, 100,  93,  86, 413, 384],
       device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([ 87, 213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16,
        286], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9006, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3059, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2065, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([158], device='cuda:0'), tensor([441,  44,  22, 384, 436, 384, 438, 121, 113, 438, 385],
       device='cuda:0'), tensor([14], device='cuda:0'), tensor([4], device='cuda:0'), tensor([255], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([116, 404, 138, 100,   9, 404], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5039, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1855, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6894, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 93, 120, 424, 166], device='cuda:0'), tensor([256, 138,  70, 256, 354, 268, 256, 268, 256, 268, 354, 138,  70, 398,
        438, 268, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256,
        268, 438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438,
        268, 268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302],
       device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3523, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9334, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00020/00055]	Time 0.30 (0.33)	Loss 1.93 (1.52)
		cls_loss 1.35 (1.08)	reg_loss 0.58 (0.44)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([338, 401], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([384, 262, 339,  31, 445, 340, 277, 279, 236], device='cuda:0'), tensor([ 57,  93, 441], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([319, 121, 316,  15, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8457, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3048, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1505, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294],
       device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([434, 401,  93, 431, 436, 385, 220,  50, 431, 385, 329, 294, 431,  82,
        431, 441], device='cuda:0'), tensor([257,  31,  49,  24,  49, 181,  49,  22, 270], device='cuda:0'), tensor([305, 305, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2302, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4492, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6793, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([220, 292,  49], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121], device='cuda:0'), tensor([ 90,  11, 429], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,
         83, 270, 415,  49, 301, 119, 430, 336,  93, 301, 387],
       device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([127, 142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0418, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4352, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10],
       device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([150, 142, 436, 201, 436, 403], device='cuda:0'), tensor([362, 338, 256, 385, 354,  47, 354, 256, 116, 116], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([98], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6763, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2507, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9270, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([98], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([148], device='cuda:0'), tensor([80], device='cuda:0'), tensor([ 47, 392, 436, 392,  47, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2276, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8553, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 316, 316, 316, 294,  82], device='cuda:0'), tensor([ 21,  32,  95, 415], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([120,  98, 451, 121], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4934, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1952, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6886, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([384, 270, 241, 415, 430, 294, 223, 223,  82, 248, 138, 164, 147,  93,
         25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421],
       device='cuda:0'), tensor([385, 437, 385, 399, 385, 399, 437,  50, 166, 166], device='cuda:0'), tensor([181, 205, 436, 345,  30, 443], device='cuda:0'), tensor([ 96,  22, 197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21,
        305,  21], device='cuda:0'), tensor([256], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3634, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4855, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8489, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([333], device='cuda:0'), tensor([197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,
         90,  37, 445, 286,  90], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354], device='cuda:0'), tensor([  7,   7,   7,   7,   7, 436, 247, 247, 100, 181], device='cuda:0'), tensor([362, 146, 100, 355, 116], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9493, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3448, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2940, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 46,  10, 415,   9,   9], device='cuda:0'), tensor([  5, 378, 146, 182, 392,   5], device='cuda:0'), tensor([451], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([ 93, 283], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([319,  11, 230,  46,  93, 215, 249, 134], device='cuda:0'), tensor([315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6044, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2050, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8094, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436,  15], device='cuda:0'), tensor([21], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([93], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([2], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([121, 124, 332, 248, 298, 249,  93,  96, 441, 121, 441,  96, 121, 441],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1795, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6220, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00030/00055]	Time 0.30 (0.32)	Loss 0.62 (1.22)
		cls_loss 0.44 (0.87)	reg_loss 0.18 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([155,  10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405,
        100, 385, 436], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([217, 429,  96, 201, 100, 294,  50, 213, 122,  30,  93],
       device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349],
       device='cuda:0'), tensor([362], device='cuda:0'), tensor([142, 224, 279, 136, 121, 224, 451, 309, 249], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([430,  75], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0245, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4095, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316,
        286, 310,  50], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([146], device='cuda:0'), tensor([146,  83], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0303, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4713, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([ 19,  31, 424,  31, 365,  31, 365, 305], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8314, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2852, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1167, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([166, 130, 378, 166, 385, 378, 388, 302,  80, 116], device='cuda:0'), tensor([430], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([398, 256, 398, 398, 376], device='cuda:0'), tensor([451, 399, 411, 439, 296, 411, 280, 411, 405, 411, 282],
       device='cuda:0'), tensor([436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,
         10, 315], device='cuda:0'), tensor([441, 402, 441], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9080, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3244, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2324, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([440, 121, 430, 197], device='cuda:0'), tensor([ 88, 100,  88, 100], device='cuda:0'), tensor([163, 398, 163, 398, 408, 398], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([108, 441, 247], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7571, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2750, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0321, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([399, 230, 277, 305, 175, 197], device='cuda:0'), tensor([ 71,  22, 201, 131], device='cuda:0'), tensor([15, 72], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 16, 219, 155], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([423, 423, 333], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6742, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2445, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9187, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([127, 294, 394, 411], device='cuda:0'), tensor([ 96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,  82,
        213, 285, 405, 294], device='cuda:0'), tensor([65], device='cuda:0'), tensor([82], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 80, 354], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3064, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1055, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([439, 439, 439], device='cuda:0'), tensor([181], device='cuda:0'), tensor([356], device='cuda:0'), tensor([260,  44, 447, 294, 392, 100], device='cuda:0'), tensor([294,  71,  79, 294,  82], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([268, 268], device='cuda:0'), tensor([131, 397, 385, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5062, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1894, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6956, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88, 91], device='cuda:0'), tensor([256], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([93], device='cuda:0'), tensor([423,  83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408,
        436], device='cuda:0'), tensor([408], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71],
       device='cuda:0'), tensor([316, 301, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1353, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4800, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6153, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,
         37,  22,  22,  37,  49, 122,  37,  37, 217, 329], device='cuda:0'), tensor([ 80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181, 220, 181,
        217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357, 431, 220,
        409, 220, 357, 431, 294, 357, 431], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([255], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([305], device='cuda:0'), tensor([244], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2148, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4686, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6834, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00040/00055]	Time 0.30 (0.31)	Loss 1.68 (1.34)
		cls_loss 1.21 (0.95)	reg_loss 0.47 (0.38)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([163], device='cuda:0'), tensor([405, 113, 405,  93, 405,  93, 405,  93, 332,  40, 405],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([323, 323, 121, 269], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6882, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2367, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([399], device='cuda:0'), tensor([ 71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223, 219,
        387, 184,  76, 247, 279, 223,  50, 310, 279,  70], device='cuda:0'), tensor([302, 248,  71, 224], device='cuda:0'), tensor([294, 425,  93, 283, 283, 283, 225, 385], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1521, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4182, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5703, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249, 296, 402, 436, 402, 181, 181], device='cuda:0'), tensor([430, 201, 316, 316, 316, 305, 366, 445], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5,
        392, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392,
        268, 268, 268, 268, 268], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([114,  80, 258, 376], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1706, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4871, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6577, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([124,   7, 163,  50], device='cuda:0'), tensor([100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([ 93, 384,  11,  43,  32, 309, 429, 451, 215], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([408], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7668, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2623, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0291, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([240], device='cuda:0'), tensor([303, 325, 388, 116, 100,  51, 100, 303, 294, 289], device='cuda:0'), tensor([103, 385, 103,  70], device='cuda:0'), tensor([ 11,  11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([295,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7528, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3003, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0531, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([215], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([295], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443, 394],
       device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7497, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2906, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 50, 291,  50], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([215, 215,  18, 215, 345, 215], device='cuda:0'), tensor([ 93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93, 437,  93, 437,
         93, 437, 121, 280,  93,  12, 121, 432, 408], device='cuda:0'), tensor([447, 436, 246, 436,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9230, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3926, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3156, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([189, 313], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([ 44, 304, 217, 201,  88, 430], device='cuda:0'), tensor([89], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([399], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6847, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2388, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9235, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268,  80, 268,  80,  80], device='cuda:0'), tensor([109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256,
        116, 195, 325], device='cuda:0'), tensor([357, 399,  16, 401,  96, 399, 302, 294, 121,  16, 201, 217,  87, 401,
        302, 431, 436, 220, 242], device='cuda:0'), tensor([121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438,
        213], device='cuda:0'), tensor([105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,
         22, 247, 234, 247, 294, 424], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([244, 432, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6142, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5870, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2012, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([350, 302, 121,  96, 294,  52, 294,  52, 119,  52, 294,  52, 447,  52,
        385,  52, 409,  52,  44,  52,  44,  96], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([ 10, 366,  10, 436, 121], device='cuda:0'), tensor([283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397, 249, 394],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([166], device='cuda:0'), tensor([392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([359, 359, 436, 359, 436, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2444, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4343, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6787, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00050/00055]	Time 0.30 (0.31)	Loss 1.68 (1.41)
		cls_loss 1.24 (1.01)	reg_loss 0.43 (0.39)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([319, 319, 121], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([436,  16, 408,  16, 108, 234, 294, 108, 408], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([436], device='cuda:0'), tensor([146,  71, 390, 401], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6644, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2243, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8887, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130],
       device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215, 313],
       device='cuda:0'), tensor([120, 302, 424,  46,  72], device='cuda:0'), tensor([351,  93, 295, 351, 325, 295, 351, 351], device='cuda:0'), tensor([120, 209,  96], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0251, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3697, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3948, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 93, 315, 244], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([441, 415, 441,  49], device='cuda:0'), tensor([394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314, 184,
        147,  95, 231], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0437, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3840, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4276, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164], device='cuda:0'), tensor([187], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([230, 351,  90, 351,  90,  43, 436, 441], device='cuda:0'), tensor([436, 436, 436, 436,  22], device='cuda:0'), tensor([108,   8,   8, 294,   8, 436, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7472, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2975, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0447, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 4 finished with lr=0.00002459


[Train]: Epoch 5 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([440, 356, 384,  43, 110,  90,  44, 269, 279, 269], device='cuda:0'), tensor([108,  70, 447,  44, 383, 294, 224, 201, 121, 447, 438, 121, 215,  76],
       device='cuda:0'), tensor([362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7470, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2759, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0229, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 13,   9, 436], device='cuda:0'), tensor([408], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 47, 256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93,
        260, 256,  47, 256], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44,
        438, 345, 167, 108, 436, 241, 387,  85], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2666, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4747, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7413, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([436, 436, 436, 436,  22], device='cuda:0'), tensor([356], device='cuda:0'), tensor([294, 120, 436, 120,  35, 436, 383,  44, 354], device='cuda:0'), tensor([354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398, 396, 268, 268,
        121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256, 441, 268, 268,
        138, 302,  76, 345,  70, 441, 356, 279,  76, 399,  76],
       device='cuda:0'), tensor([ 87, 401, 302, 431, 436, 220, 242, 220, 242, 137, 220],
       device='cuda:0'), tensor([88, 16, 88], device='cuda:0'), tensor([148], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1793, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4655, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6448, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([292, 415,  22, 247, 234, 247, 294, 424, 150, 433, 247, 218, 214, 417,
        294,  83, 417, 311, 417, 388], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5,
        392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,
         50, 268, 268, 392, 268, 268, 268], device='cuda:0'), tensor([436], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([120, 302, 424,  46,  72, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1688, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5101, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6789, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([394, 453, 100,  93,  86, 413, 384, 177, 309], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0'), tensor([234, 215,  50,  50], device='cuda:0'), tensor([451], device='cuda:0'), tensor([234, 415], device='cuda:0'), tensor([ 51, 398, 435, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7589, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2643, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0232, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,
         37, 436,  37,  22,  22,  37,  49, 122,  37,  37], device='cuda:0'), tensor([405, 302, 405], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 96, 105, 226,  71, 338,  16, 197,  11,  71, 305, 286],
       device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([354, 121, 108], device='cuda:0'), tensor([191, 315, 305, 315,  73, 401, 441, 451, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4804, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6039, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([436,  10, 315], device='cuda:0'), tensor([196, 215, 215, 215, 345, 215,  85, 215, 345, 217], device='cuda:0'), tensor([146,  71, 390, 401], device='cuda:0'), tensor([345, 302, 245, 385,  82, 188, 294,  30], device='cuda:0'), tensor([332, 332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([437,  87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7465, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2607, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0072, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([284], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([98], device='cuda:0'), tensor([187], device='cuda:0'), tensor([58], device='cuda:0'), tensor([ 15, 294,  15,  15], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6193, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2312, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8505, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100, 116, 232, 116], device='cuda:0'), tensor([80], device='cuda:0'), tensor([4], device='cuda:0'), tensor([451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215],
       device='cuda:0'), tensor([408, 181, 181, 205, 436, 345], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223,
        196, 221, 196], device='cuda:0'), tensor([411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,
         50, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3246, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1903, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([316, 142, 436, 142], device='cuda:0'), tensor([246, 224, 246, 224, 316, 195], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([121,  29, 453, 249, 356,  11,  44, 351, 121, 351, 127],
       device='cuda:0'), tensor([181,  82, 181,  82, 181, 436,  82], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316],
       device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0472, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301, 119], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([191], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3517, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1844, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00010/00055]	Time 0.36 (0.36)	Loss 1.18 (1.18)
		cls_loss 0.83 (0.83)	reg_loss 0.35 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93], device='cuda:0'), tensor([215], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2283, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8673, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([63], device='cuda:0'), tensor([315, 436, 315, 108,   8,   8, 294], device='cuda:0'), tensor([408], device='cuda:0'), tensor([345, 309, 279, 309, 299,  32,  93, 121, 120, 302, 121],
       device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5690, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1992, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7682, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 47, 232, 404, 354, 194, 453, 415, 116, 389, 182,  80, 404, 279, 133,
        294], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([436, 313,  83, 436, 280, 193, 163, 304, 437, 436, 279],
       device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8195, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3090, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1285, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430,  44,  11, 436], device='cuda:0'), tensor([268], device='cuda:0'), tensor([31], device='cuda:0'), tensor([244], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0'), tensor([255], device='cuda:0'), tensor([65], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5978, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2544, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8522, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 83,  16,  22, 215, 441, 415], device='cuda:0'), tensor([248, 340, 236], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8307, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3037, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1345, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([432, 268, 268], device='cuda:0'), tensor([ 93, 396,  50,  50], device='cuda:0'), tensor([158, 294, 158], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 31, 365, 305, 292, 305], device='cuda:0'), tensor([ 88,  91,  88, 354,  88, 209, 411], device='cuda:0'), tensor([402, 108, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6207, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2626, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8832, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([134, 108, 431], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 31,  63,  82, 255,  82, 165,  82, 165, 385, 107], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384, 270],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5743, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1700, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([ 22, 436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([408], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436], device='cuda:0'), tensor([392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8600, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3517, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2117, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([116,  93, 447,  68,  47, 443,  93,  19, 389,  47, 200,  49],
       device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282, 195], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2500, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4640, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7140, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([ 93, 127, 294, 394, 411], device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([295, 295, 295, 295, 195], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6357, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2494, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8851, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00020/00055]	Time 0.30 (0.33)	Loss 0.89 (1.03)
		cls_loss 0.64 (0.73)	reg_loss 0.25 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([350, 302, 121,  96, 294,  52, 294,  52, 119,  52, 294,  52, 447,  52,
        385,  52, 409,  52,  44,  52,  44,  96], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0269, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3831, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4101, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([254,  40,  11, 217,  11,  11,  71,  11, 420, 451], device='cuda:0'), tensor([ 71,  79, 294,  82], device='cuda:0'), tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166, 294],
       device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 96, 187,  96, 108,  96], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8313, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2949, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1262, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([399], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([ 46,  10, 415,   9,   9], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7083, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3207, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0290, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37,
        247, 225,  91], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 31, 415,  63, 279, 121, 411, 401], device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([ 88,  91,  88, 100,  88,  88, 100,  88, 100,  88,  88, 100,  88, 100,
         88, 100,  88, 100], device='cuda:0'), tensor([451, 301], device='cuda:0'), tensor([173, 125], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0341, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4688, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5029, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([90], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([ 93, 295, 351, 325, 295, 351, 351, 295], device='cuda:0'), tensor([439, 439], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6240, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2757, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8997, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([361, 298,  80], device='cuda:0'), tensor([436, 392,  47, 392, 436], device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116,  47], device='cuda:0'), tensor([  7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436, 221,
        121, 191, 301], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3831, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2805, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([215, 311, 388, 133, 133, 303, 345, 146,   5, 183, 388, 404, 285, 435,
        138], device='cuda:0'), tensor([327,  52,  14], device='cuda:0'), tensor([328], device='cuda:0'), tensor([9], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([451,  93, 402, 385, 402,  87, 131], device='cuda:0'), tensor([439,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8860, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2918, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1778, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([181], device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([ 80, 313], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 382,  96,
        382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8155, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3370, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1526, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 36, 183, 354, 330,  80,  80, 338], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([406], device='cuda:0'), tensor([286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([ 78, 175,  71, 121, 436, 402, 452, 437], device='cuda:0'), tensor([441], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([253,  71, 253,  71, 253,  71,  18,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8022, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2984, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1007, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([113], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([385, 393, 305, 393, 305, 393, 305, 159, 393, 100, 393,  87, 437, 332,
        437,  95,  83, 286, 407], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 91,  91, 345,  91, 247,  91,  37, 201, 345, 359, 359],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1688, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4125, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5813, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00030/00055]	Time 0.31 (0.32)	Loss 1.58 (1.22)
		cls_loss 1.17 (0.88)	reg_loss 0.41 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([232, 388, 232, 116, 116, 138, 294, 362], device='cuda:0'), tensor([256, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8053, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3114, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1167, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([98], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([146, 182, 392], device='cuda:0'), tensor([4], device='cuda:0'), tensor([21], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4115, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1558, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5673, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201], device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87], device='cuda:0'), tensor([443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7317, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3193, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0509, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 300, 451], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([256], device='cuda:0'), tensor([315], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1885, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6841, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([219, 424, 181], device='cuda:0'), tensor([47], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([225], device='cuda:0'), tensor([451,  49, 424, 218, 436], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8332, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3436, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1768, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437,
        294, 345, 294, 437], device='cuda:0'), tensor([415, 385, 441, 301, 385, 399, 441], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1240, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4223, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 47, 404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47, 116, 256,
        354,  47,  36, 354, 183,  36, 256], device='cuda:0'), tensor([ 50,  90,  50,  90,  50, 121, 159, 121, 384, 279, 385, 121,  87],
       device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1785, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 121, 166, 182, 385, 330], device='cuda:0'), tensor([366,  10], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([215, 150,  71,  71, 215,  71, 329,  27,  27, 135, 451, 107,  93, 128],
       device='cuda:0'), tensor([436, 246, 436,  82], device='cuda:0'), tensor([424, 371, 371, 420, 420, 424, 371], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4357, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6017, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([405, 294,  21, 302,  95], device='cuda:0'), tensor([396], device='cuda:0'), tensor([430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385,
        166,  19, 121, 137, 286], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0'), tensor([354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392,
        354, 100, 392], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0341, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4153, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4494, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([181,   9, 155, 121,  43,  17, 147], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([305], device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([204, 204, 204, 350, 204, 143], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8480, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2892, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1372, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00040/00055]	Time 0.30 (0.32)	Loss 1.14 (1.20)
		cls_loss 0.85 (0.87)	reg_loss 0.29 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([], device='cuda:0', dtype=torch.int64), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36,  36],
       device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223, 305], device='cuda:0'), tensor([ 55, 453,  47, 294, 294, 385,   8, 404,  47, 435, 124, 447, 335,  82,
        320], device='cuda:0'), tensor([417], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279], device='cuda:0'), tensor([351, 245, 351, 142, 351, 142, 279, 201, 142,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1280, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4558, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5838, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268], device='cuda:0'), tensor([181, 219, 181], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([438, 121, 113, 438, 385,  90, 438, 396, 411, 342, 415, 309, 415, 309,
        201,  32], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351, 217,
        305,  32, 305, 438], device='cuda:0'), tensor([369, 369, 369, 369, 174, 256, 174, 256, 174], device='cuda:0'), tensor([436, 408, 294,   8], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8976, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3383, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2359, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([242, 431], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([436, 121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([399, 408,  50, 399], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([351, 294,  62,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6499, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2492, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8990, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([402, 225, 441, 285, 108], device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,  91,
         44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([415, 124, 124,  51,   8, 385,  47, 109, 195,  47, 256,  80, 109],
       device='cuda:0'), tensor([ 82, 295], device='cuda:0'), tensor([283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437],
       device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9274, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3630, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2904, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411], device='cuda:0'), tensor([100, 100, 294, 429, 354, 121], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([47], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([93], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6784, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2681, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([256], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([436, 440,  82, 440], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6999, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2523, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9522, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([220, 292], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63, 446,  44, 152,
        437,  44], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([392, 100,  80, 100], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7728, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0937, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([215, 440,  71], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147, 224, 217], device='cuda:0'), tensor([9], device='cuda:0'), tensor([122,  83, 120, 385, 159, 286, 199, 447,  93,  71,  93, 315, 315, 447,
        315, 431, 315, 315,  93,  48, 447, 365, 431,  83, 447, 447, 315,  67,
        431, 438], device='cuda:0'), tensor([93], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0437, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3867, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4304, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 96, 301,  91, 294, 137, 294, 229], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([37], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([316, 433, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6771, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2374, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9145, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([82], device='cuda:0'), tensor([240], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([431, 436, 220, 329, 220, 165, 220, 220, 137,  93, 430],
       device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([366, 215,  83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385,
        436, 282, 226, 279, 226, 279, 197,  10,  93,  10,  87, 436],
       device='cuda:0'), tensor([398, 256, 398, 398], device='cuda:0'), tensor([121, 215, 100,  37, 257, 430, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0498, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3970, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4469, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00050/00055]	Time 0.30 (0.31)	Loss 1.45 (1.25)
		cls_loss 1.05 (0.91)	reg_loss 0.40 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9378, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3641, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3019, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([399, 121, 356, 279, 273, 453, 196, 397, 279, 100, 296, 415, 100],
       device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([215], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3730, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3534, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([244], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([357, 412, 357, 398, 412, 357, 412], device='cuda:0'), tensor([89], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([436, 441, 301], device='cuda:0'), tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8602, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3398, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2000, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21],
       device='cuda:0'), tensor([224, 305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([121, 316, 316, 316, 294,  82, 292, 178], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411],
       device='cuda:0'), tensor([219], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311, 354, 159, 354],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2947, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4895, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7842, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 5 finished with lr=0.00002951


[Train]: Epoch 6 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([408], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289],
       device='cuda:0'), tensor([425,  22, 258, 296, 408, 110, 197], device='cuda:0'), tensor([100,   7,   7,   7,   7,   7, 436, 247, 247, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0113, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3879, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3993, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([306, 256, 306, 256], device='cuda:0'), tensor([ 31,  31,  31,  31,  31,  31,  31,  31, 201], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([439, 436], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([181, 181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([133, 121, 187, 305, 354,  96], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7888, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3174, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1062, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451], device='cuda:0'), tensor([ 90, 305, 451,  73, 121,  44,  73, 315, 437, 305], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([408], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([950, 1536])
yes2
yes3 {'cls_loss': tensor(0.7673, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0514, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,
         90,  37, 445, 286,  90], device='cuda:0'), tensor([138, 298,  14], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96],
       device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 22,  52, 257, 234,  63], device='cuda:0'), tensor([244], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7927, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2861, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0788, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([265,  46, 384, 265, 319,  11, 230,  46,  93, 215], device='cuda:0'), tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([ 37, 217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210],
       device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([ 37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37, 247,
        225,  91], device='cuda:0'), tensor([236, 181, 236, 181, 107, 181, 352, 279, 340, 121, 424, 181, 305, 280,
        415, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0810, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4064, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4875, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 121], device='cuda:0'), tensor([411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([121,  71,  22, 201, 131], device='cuda:0'), tensor([305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93, 443],
       device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([219, 448], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226,
        279, 226, 279, 197,  10,  93,  10,  87, 436, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9091, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2484, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357], device='cuda:0'), tensor([436, 431,  71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,
         22, 167], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135, 135,
         93, 214, 351,  96, 155, 351,  96, 121, 351, 217], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([62, 10], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0639, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3923, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4562, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 267,  93], device='cuda:0'), tensor([105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,
         22, 247, 234, 247, 294, 424], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([232, 388, 232, 388, 232, 116], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([158], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7016, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2553, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9569, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301, 436], device='cuda:0'), tensor([120, 453, 312, 284, 334], device='cuda:0'), tensor([100], device='cuda:0'), tensor([441, 451, 441, 451], device='cuda:0'), tensor([304, 280], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286], device='cuda:0'), tensor([436, 316,  93, 191, 436,  44, 451, 221, 284, 436, 394],
       device='cuda:0'), tensor([89], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7033, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2699, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9732, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100, 100], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([294,  47, 116,  47, 116, 263, 116, 116,  47, 116], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217],
       device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([116, 116, 116, 116, 404, 138], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7157, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3123, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0280, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([295, 295, 295, 295, 195], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([98], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8935, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3635, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2570, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00010/00055]	Time 0.39 (0.39)	Loss 1.26 (1.26)
		cls_loss 0.89 (0.89)	reg_loss 0.36 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([417, 436], device='cuda:0'), tensor([155,  22, 159, 159, 120, 415, 430, 257,  31,  49,  24],
       device='cuda:0'), tensor([120], device='cuda:0'), tensor([113], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6701, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2529, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9230, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141], device='cuda:0'), tensor([ 88, 209, 411, 121, 105,  88, 411,   8,  88, 436], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0'), tensor([ 90, 413, 437, 394, 213, 437, 394,  93, 394,  30, 437],
       device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([295], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3592, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8801, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([406], device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384, 270],
       device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9269, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3487, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2755, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([397, 249, 394], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([295, 294], device='cuda:0'), tensor([415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([255], device='cuda:0'), tensor([65], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1998, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6902, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([ 11,  43,  32, 309, 429, 451, 215, 177, 294], device='cuda:0'), tensor([451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436],
       device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436],
       device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([385, 385, 217, 385, 121, 441, 383, 415, 313, 172, 441],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4488, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5723, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([451,  49, 424, 218, 436], device='cuda:0'), tensor([441, 294, 264, 294], device='cuda:0'), tensor([384,  43, 110,  90,  44, 269, 279, 269, 269, 315, 269],
       device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7682, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3016, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0698, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100,  71, 362], device='cuda:0'), tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([4], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([ 10, 436,  10, 315], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4444, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1718, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6162, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 408, 279, 408, 436, 408, 436, 408, 436], device='cuda:0'), tensor([ 35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93, 437,
         93, 437,  93, 437, 121, 280], device='cuda:0'), tensor([ 93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([316, 441, 441, 225, 108, 305], device='cuda:0'), tensor([431, 415, 431, 431, 436, 431, 165,  44, 436,  93, 137],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9618, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4200, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3819, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 31, 408], device='cuda:0'), tensor([155, 131, 191,   9, 385,  71, 314, 105, 407, 385, 436, 407],
       device='cuda:0'), tensor([191], device='cuda:0'), tensor([424, 280], device='cuda:0'), tensor([ 70, 411,  44, 200, 258, 226, 411, 226, 453, 197, 436, 340, 121, 351,
        318, 351, 436], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385,
        166,  19, 121, 137], device='cuda:0'), tensor([ 89, 319, 406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9479, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3361, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70,  82],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 63, 234, 215], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([ 49, 408,  22,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6307, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2540, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8847, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00020/00055]	Time 0.30 (0.34)	Loss 0.88 (1.07)
		cls_loss 0.63 (0.76)	reg_loss 0.25 (0.31)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([98], device='cuda:0'), tensor([446,  44, 152, 437,  44, 436,  44,  37,  37,  37, 207],
       device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([93], device='cuda:0'), tensor([295, 436, 295], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7741, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3053, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0795, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([ 88, 100,  99,  88, 100,  88,  88, 100,  88, 100,  88],
       device='cuda:0'), tensor([224, 385, 224, 246, 224], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121],
       device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8642, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3514, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2156, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([142, 182, 359,  44, 359, 201, 359, 451,  71, 201, 359, 280],
       device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([399], device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430, 384], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50,  50, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1615, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([316, 279, 301, 436, 225, 247, 436, 294, 425], device='cuda:0'), tensor([121, 249, 371, 201], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([ 80, 453,  36, 453, 392,  51, 392, 100, 201,  47, 116,  47, 303, 363,
        281], device='cuda:0'), tensor([197, 197, 197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3312, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1660, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([401, 280, 354], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([231, 196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302,
        305, 217, 305, 402], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6749, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2816, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9565, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([93], device='cuda:0'), tensor([116, 116], device='cuda:0'), tensor([268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256, 441, 268,
        268, 138, 302,  76, 345,  70, 441, 356, 279,  76, 399,  76, 396, 441,
        316], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 9, 15], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7310, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3022, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0332, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80,  50, 268,  80, 436], device='cuda:0'), tensor([ 44,  93, 221, 221, 137,   0,  22,  52], device='cuda:0'), tensor([ 45, 217, 429,  96, 201, 100, 294,  50, 213, 122,  30,  93],
       device='cuda:0'), tensor([301,  80], device='cuda:0'), tensor([305], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7585, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2796, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0381, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80,  80, 166, 121, 285,  80, 121], device='cuda:0'), tensor([187,  71], device='cuda:0'), tensor([279, 121, 283,  98, 283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([451, 100, 100, 443, 302,  62, 130, 100, 284, 197], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8194, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3001, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1196, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([417], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399],
       device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([ 65,  65, 294,  65, 124], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7726, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3822, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1547, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430,  44,  11, 436], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([385, 329, 294, 431,  82, 431, 441, 431,   9, 431, 441, 431, 385, 431,
        441, 220,  49, 441, 431, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8917, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3985, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2902, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00030/00055]	Time 0.30 (0.33)	Loss 1.29 (1.14)
		cls_loss 0.89 (0.81)	reg_loss 0.40 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279], device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 10, 366], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6907, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2793, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9701, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 405, 258, 430, 411, 108], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([148], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7220, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2890, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0110, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([174, 256, 174, 256], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([80], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16],
       device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([296], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5582, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2149, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7731, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451], device='cuda:0'), tensor([21], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([215, 305, 298, 292,  73, 399,  49, 440], device='cuda:0'), tensor([240], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5924, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2887, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8811, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([256], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([215], device='cuda:0'), tensor([47,  9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4813, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1981, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6793, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([431, 436,  82,  93,  93, 161,  48, 122,  83, 120, 385, 159, 286, 199,
        447,  93,  71,  93, 315, 315, 447, 315, 431, 315, 315,  93,  48],
       device='cuda:0'), tensor([181, 436, 447, 436, 246, 436], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 22, 399, 294, 399], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0591, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4372, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([58], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268],
       device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8842, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3816, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2659, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([451,  32, 121,  37,  43, 121, 124,  44, 197, 121], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([319, 451, 279, 380, 402, 447, 402], device='cuda:0'), tensor([121,  62, 294,  75,   9, 294,  62, 294,  62, 294, 294,  96, 392, 345],
       device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 129, 100, 392], device='cuda:0'), tensor([ 57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3908, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([325,  47, 195,  47], device='cuda:0'), tensor([248, 340], device='cuda:0'), tensor([298, 441, 298,  76, 298, 441], device='cuda:0'), tensor([116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362, 325, 294, 294,
        116, 404], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([9], device='cuda:0'), tensor([415, 121, 242, 242], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7991, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0898, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([215, 436, 400, 430, 351, 430, 430, 351, 351], device='cuda:0'), tensor([451, 121, 305, 424, 305], device='cuda:0'), tensor([ 62, 451,  62, 451, 264, 233, 385, 436], device='cuda:0'), tensor([187], device='cuda:0'), tensor([121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436, 399],
       device='cuda:0'), tensor([194, 388, 100,  30,  47, 370,  68,  80,  68,  47, 131, 303,  47, 447,
         47], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399,  76, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0866, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4316, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5182, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00040/00055]	Time 0.30 (0.32)	Loss 1.52 (1.24)
		cls_loss 1.09 (0.88)	reg_loss 0.43 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([268], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 369, 174, 256, 174, 256],
       device='cuda:0'), tensor([204, 350, 204, 143], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6668, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2576, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9244, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([268, 268], device='cuda:0'), tensor([ 88,  73,  88, 298,  16, 298], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([399, 121, 408, 430], device='cuda:0'), tensor([436, 436, 436, 436], device='cuda:0'), tensor([330, 217,  47, 232, 281, 388, 392, 404,  47,  88,   9, 327, 325,  63],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7470, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2709, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0179, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423],
       device='cuda:0'), tensor([354, 100, 121, 404,  93, 257, 385, 453, 110, 394, 257, 441],
       device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215],
       device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([146], device='cuda:0'), tensor([ 47, 404], device='cuda:0'), tensor([354,  71, 376, 398, 354, 398, 256, 256, 398, 376], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9187, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3286, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2474, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 82, 181,  82, 181,  82, 181], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5063, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2205, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([183, 124, 100, 404, 155, 100, 100, 436], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407],
       device='cuda:0'), tensor([436,  15, 294,  15], device='cuda:0'), tensor([ 50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([408, 408, 181, 181, 205, 436], device='cuda:0'), tensor([90], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0072, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3927, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3999, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([415, 138,  50, 294, 302, 436, 302,  93], device='cuda:0'), tensor([436, 316, 433], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([354,  47,  36, 354, 183,  36, 256, 256, 325, 354, 404,  47, 116,  47,
        256], device='cuda:0'), tensor([90, 11], device='cuda:0'), tensor([284], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8128, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4123, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2251, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([80], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([295, 356], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5073, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1893, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6966, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([392, 268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268,
        447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([116, 357, 412, 357, 412, 357, 398, 412, 357, 412], device='cuda:0'), tensor([256, 354,  44, 354, 398, 256, 412, 412, 412, 354, 412, 412, 354, 138,
        398, 256, 412, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 138,
        398, 354, 412, 256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412,
        354, 412, 354, 412, 138, 398, 256, 412, 412, 412, 138, 398, 354, 412],
       device='cuda:0'), tensor([ 14,  61, 436], device='cuda:0'), tensor([398,  51, 398,  51, 398, 435], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5402, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2991, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116,
        195, 325], device='cuda:0'), tensor([338, 401], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 382,  96,
        382], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([283], device='cuda:0'), tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8248, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3489, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1737, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([215, 105, 215, 340, 215, 217, 215, 215], device='cuda:0'), tensor([ 52,  44,  52,  44,  96, 155,  52,   9,  52, 294,  52],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7349, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3272, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0620, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00050/00055]	Time 0.30 (0.32)	Loss 1.06 (1.20)
		cls_loss 0.73 (0.85)	reg_loss 0.33 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87, 398], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8870, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3994, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2864, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([159,  31, 121, 114, 326, 224, 224, 305,  32, 305], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([319, 319, 121], device='cuda:0'), tensor([215, 215, 402, 108, 415], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([225], device='cuda:0'), tensor([447,  93, 294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,
         95, 436], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2781, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0147, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420],
       device='cuda:0'), tensor([260,  44, 447, 294, 392, 100], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133, 404, 389], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([182, 392,   5, 146, 182, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1271, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4450, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5720, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([349, 399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349, 399],
       device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([436, 392, 404, 385], device='cuda:0'), tensor([244], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7818, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3540, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1358, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 6 finished with lr=0.00003443


[Train]: Epoch 7 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([21], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([218,  22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270, 386,
          9, 386, 184, 195], device='cuda:0'), tensor([244, 432], device='cuda:0'), tensor([430], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6701, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9436, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 383], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([120, 253, 279, 253, 253, 142, 230, 121, 171,  61], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([333], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4742, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2047, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6789, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([ 83, 405, 302], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([201, 268, 445, 268, 424], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([226, 383, 430], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5177, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2237, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7414, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([251, 251], device='cuda:0'), tensor([306, 116, 116, 306, 306], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425,  63], device='cuda:0'), tensor([268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268,
        268, 138, 268,   5, 268, 447, 268, 313,   5, 392,  50, 268, 268, 392,
        268, 268, 268,   5, 268], device='cuda:0'), tensor([100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286,
        310,  50,  50], device='cuda:0'), tensor([ 47, 100, 453, 388, 257, 370,  80], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2001, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5205, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7207, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([248, 340, 236, 121, 312], device='cuda:0'), tensor([385, 224, 246, 224, 246, 224], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 91, 302, 451, 286, 424,  91, 451,  91], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 11,  44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436],
       device='cuda:0'), tensor([100,  88, 100,  88,  99,  88, 187,  88,  88], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7402, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2845, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0247, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([117, 271, 121, 316], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([181], device='cuda:0'), tensor([256], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4847, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1878, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6725, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([44], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0043, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4559, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385], device='cuda:0'), tensor([82], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([325, 146, 345, 183,  47, 232, 404, 354, 194, 453, 415, 116, 389],
       device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8167, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3226, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1394, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([65], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([398, 116, 357, 412, 357, 412, 357, 398, 412], device='cuda:0'), tensor([204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([408], device='cuda:0'), tensor([362], device='cuda:0'), tensor([ 63, 177, 380, 209,  88, 354,  88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2030, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7089, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0'), tensor([436, 247], device='cuda:0'), tensor([ 96, 338, 351, 436, 351], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([268], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5608, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2532, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8140, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([201, 329,   8, 191,  32, 350, 257, 350, 257,  20,  52,  32, 124, 296,
        100, 301, 436, 441, 436, 441, 143, 279], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9622, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4177, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3800, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00010/00055]	Time 0.35 (0.35)	Loss 1.38 (1.38)
		cls_loss 0.96 (0.96)	reg_loss 0.42 (0.42)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([146], device='cuda:0'), tensor([  5, 146, 182, 392, 146, 146], device='cuda:0'), tensor([430, 351,  93, 351, 325, 351, 294, 351,  93,  93], device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6335, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2418, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8753, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255], device='cuda:0'), tensor([ 63, 436,  80], device='cuda:0'), tensor([404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47, 116, 256, 354,
         47,  36, 354, 183,  36, 256, 256], device='cuda:0'), tensor([399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([93], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5843, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8259, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([224,  71, 385,  62, 451,  62, 451, 264], device='cuda:0'), tensor([373, 234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385,
        393, 382, 234, 303, 382, 181,   9, 181, 315], device='cuda:0'), tensor([436], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8054, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2937, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0991, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([224, 213, 436, 224, 436, 213,  19, 436, 384,  19, 182, 121, 430, 436,
         80,  47, 436], device='cuda:0'), tensor([354, 398, 376,  71, 354, 398, 354, 398, 354, 357, 376, 146, 398],
       device='cuda:0'), tensor([121, 289, 432, 270], device='cuda:0'), tensor([432, 268, 268], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([240], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0489, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4114, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4603, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([89], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([10], device='cuda:0'), tensor([182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0'), tensor([288, 249, 430, 313, 165, 205, 156, 121, 156], device='cuda:0'), tensor([280,  93,  12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,
         93, 437, 294, 345, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9163, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3677, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([294, 264, 294, 329,  93], device='cuda:0'), tensor([451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([301,  91, 294, 137, 294, 229, 434, 401,  93, 431, 436],
       device='cuda:0'), tensor([181, 219, 181], device='cuda:0'), tensor([245, 451, 100, 100, 443, 302,  62], device='cuda:0'), tensor([105, 215, 340, 215, 217, 215, 215, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7544, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3019, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0563, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([4], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([215], device='cuda:0'), tensor([415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([187,  71], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5785, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2277, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8062, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([268, 415,  22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360,
        436, 282,  50,  50, 436], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([417], device='cuda:0'), tensor([230, 142,  11, 441, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9454, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3678, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3132, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451], device='cuda:0'), tensor([256], device='cuda:0'), tensor([80, 80], device='cuda:0'), tensor([406], device='cuda:0'), tensor([269,  94, 269, 269, 203, 332, 269, 407, 121, 407, 437, 286],
       device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2617, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9663, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302, 405], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([158], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([121,  80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8583, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3494, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2077, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00020/00055]	Time 0.30 (0.33)	Loss 1.21 (1.29)
		cls_loss 0.86 (0.91)	reg_loss 0.35 (0.38)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([315], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([316, 436, 316], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([244], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4251, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2102, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6353, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([306, 268, 306, 268, 268, 306, 268, 306, 306], device='cuda:0'), tensor([452, 284,  90,  80], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([338, 401], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5615, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2276, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7891, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408], device='cuda:0'), tensor([108,  96, 294,  96, 385,  50, 385], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([121, 262, 100, 262, 100, 430, 384, 262, 339], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([187], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6320, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2443, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8763, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([181,  82, 181,  82, 181, 436,  82, 313], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223, 223,  82,
        248, 138, 164, 147,  93,  25, 336, 241, 184], device='cuda:0'), tensor([451, 399, 411, 439, 296, 411, 280, 411, 405, 411, 282],
       device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1740, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4790, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6530, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([100,  80, 100,  80, 166, 181,  71, 354], device='cuda:0'), tensor([ 49,  22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184,   8],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3243, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4882, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8125, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([50], device='cuda:0'), tensor([255], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([105, 436, 105, 436,  83, 181, 415,  32, 181, 436, 447],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([408, 127, 142, 127, 337], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([100,  93, 100, 305, 305,  71, 390, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4540, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1906, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6445, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([197,  50,  11,  50,  90,  50,  90,  50], device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([430,  75, 451], device='cuda:0'), tensor([166, 166, 276, 437,  50, 437,  82,  50, 385, 437], device='cuda:0'), tensor([ 37,  49, 122,  37,  37, 217, 329,  37, 282, 121,  37, 447, 385, 407],
       device='cuda:0'), tensor([245, 351, 142, 351, 142, 279, 201, 142,  11, 351], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0022, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3662, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3684, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([439], device='cuda:0'), tensor([ 63, 446,  44, 152, 437,  44, 436,  44,  37,  37,  37, 207],
       device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 63,  47,  47,  93,  23, 443,  49,  47,  98, 447,  47],
       device='cuda:0'), tensor([441, 415, 441,  49], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6880, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3067, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9947, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 283], device='cuda:0'), tensor([116, 138, 294, 362, 362, 146, 100], device='cuda:0'), tensor([225], device='cuda:0'), tensor([256], device='cuda:0'), tensor([305, 315,  73, 401, 441, 451, 305, 451, 121, 315], device='cuda:0'), tensor([ 95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217,
        351, 217, 305,  32, 305], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7877, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3118, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0994, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([121], device='cuda:0'), tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116],
       device='cuda:0'), tensor([ 52, 313,  96, 383, 403, 196], device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294, 385],
       device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([285, 108, 441, 247], device='cuda:0'), tensor([215,  90, 209], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8323, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1780, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00030/00055]	Time 0.31 (0.32)	Loss 1.18 (1.26)
		cls_loss 0.83 (0.88)	reg_loss 0.35 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430,  44,  11], device='cuda:0'), tensor([ 81, 395,  76, 395, 326, 395, 326, 395, 326, 395, 326, 395],
       device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127], device='cuda:0'), tensor([195, 442, 121, 442, 451, 279, 442,  93, 345, 437, 115, 437, 415],
       device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7484, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0391, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([430,  81, 127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([ 93,  52, 436,  52,  44, 302,  52, 131,  40, 121,  75],
       device='cuda:0'), tensor([132], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0357, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4268, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4624, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([15,  9, 15], device='cuda:0'), tensor([394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209, 302, 123],
       device='cuda:0'), tensor([302, 408], device='cuda:0'), tensor([201,  90, 371, 430, 371, 424, 371], device='cuda:0'), tensor([166, 385, 166,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6229, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2375, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8604, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([163, 304, 437, 436, 279, 296, 302, 422, 121,  30], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([268,   5, 430, 268], device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([14], device='cuda:0'), tensor([365, 161, 121, 436, 103], device='cuda:0'), tensor([256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6334, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8803, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([181, 181, 181, 181, 181, 181, 296, 181, 219, 424, 181],
       device='cuda:0'), tensor([138, 361, 298,  80], device='cuda:0'), tensor([436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,
         84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([98], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9838, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4721, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4559, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([9], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([98], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4067, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1802, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5870, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([315], device='cuda:0'), tensor([224, 279, 136, 121, 224, 451, 309, 249,  44, 436], device='cuda:0'), tensor([319, 121, 316,  15, 121], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([354, 438, 268, 268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302,
        249,  93, 399, 441, 385, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9778, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4041, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3819, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([113, 441], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223,
        402, 223,  50, 223, 402, 313, 223], device='cuda:0'), tensor([295, 436, 295], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6635, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2895, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9530, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399],
       device='cuda:0'), tensor([ 44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215,
        215], device='cuda:0'), tensor([121, 291, 121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366, 215,
         83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385],
       device='cuda:0'), tensor([ 16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([219], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0731, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4631, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5361, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([166], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([ 31,  50, 262,  31,  50, 365, 215, 305, 298, 292,  73, 399,  49],
       device='cuda:0'), tensor([415,  22, 247, 234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,
         83, 417, 311, 417, 388], device='cuda:0'), tensor([430,   8, 325, 385, 385, 183, 361, 203, 385, 325, 397, 325, 354],
       device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1851, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4325, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6176, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00040/00055]	Time 0.30 (0.31)	Loss 1.62 (1.35)
		cls_loss 1.19 (0.96)	reg_loss 0.43 (0.39)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201, 348], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([295, 295, 295, 195, 295], device='cuda:0'), tensor([441,  44,  22, 384, 436, 384, 438, 121, 113, 438, 385],
       device='cuda:0'), tensor([399, 363, 305, 426, 426, 252, 367, 305, 426, 252, 367, 426],
       device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7668, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2897, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0565, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314], device='cuda:0'), tensor([ 47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195,
        325], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7038, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3435, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0472, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([131, 119, 131], device='cuda:0'), tensor([138,  47, 213, 281, 392,  47, 362, 385, 194, 194,  51,  51, 194, 194,
        194, 194], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([354,  47,  23, 183,  23, 183, 260,  36, 354,  47, 100,  47, 133],
       device='cuda:0'), tensor([ 51, 398,  51, 398, 435], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9829, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4083, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3911, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([354, 100, 100, 116], device='cuda:0'), tensor([181, 451], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([114,  80, 258, 376], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4515, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1749, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6263, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([408, 451, 193, 279, 105, 313, 451, 193,  16, 105,  85, 408, 408,  50,
        408,  50, 313, 451, 201, 451, 193, 105], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399],
       device='cuda:0'), tensor([  9, 121,  71,  22, 201, 131], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0228, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3906, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4134, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([90, 11], device='cuda:0'), tensor([415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10, 436],
       device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([295], device='cuda:0'), tensor([159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279,
        421, 150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([223, 223, 223, 223, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8368, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3808, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2176, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21],
       device='cuda:0'), tensor([319, 234, 319, 339, 402], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 267,  93], device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197],
       device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([121,  11, 121, 215,  32, 121, 120, 351,  89, 351,  37, 351,  94, 121,
        155, 121], device='cuda:0'), tensor([384, 177, 309,  13, 437, 413, 197, 380, 413, 424,  90],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4194, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3855, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([250, 432, 250, 244], device='cuda:0'), tensor([415, 345, 309, 279, 309, 299,  32,  93, 121, 120, 302],
       device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([166, 294], device='cuda:0'), tensor([ 37,  37, 257, 215, 313, 411,  70, 411,  44, 200, 258, 226, 411, 226,
        453, 197, 436, 340], device='cuda:0'), tensor([ 63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255,
        275,   9, 436, 430], device='cuda:0'), tensor([411, 411, 411,  50, 157,  90, 157,  37, 247, 225,  91,  91,  76, 105],
       device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9726, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3762, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3489, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([286, 121, 187], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357, 357], device='cuda:0'), tensor([127, 363, 430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217],
       device='cuda:0'), tensor([354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        129, 100, 392, 430, 100, 257], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3624, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2108, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([105, 283, 280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150, 394,
        150, 437, 425, 150, 437, 150, 397], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7835, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3801, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1635, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00050/00055]	Time 0.30 (0.31)	Loss 1.16 (1.31)
		cls_loss 0.78 (0.92)	reg_loss 0.38 (0.39)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100,   7,   7,   7,   7,   7, 436, 247, 247, 100], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([ 16,  88,  73,  88, 298,  16], device='cuda:0'), tensor([305], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([142, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5160, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2428, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7588, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([417], device='cuda:0'), tensor([ 61, 253, 313,  14], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([279, 273, 453, 196, 397, 279, 100, 296, 415, 100, 121,  85, 453,  72],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6686, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2561, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9248, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301, 283, 329, 301, 283], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([319], device='cuda:0'), tensor([406, 451, 406, 140, 451], device='cuda:0'), tensor([ 11,  43,  32, 309, 429, 451, 215, 177, 294, 215, 150],
       device='cuda:0'), tensor([177, 253,  87, 140], device='cuda:0'), tensor([441, 249, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6625, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2556, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9182, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294, 357, 431,
        447, 357, 431, 294], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 46,  10, 415,   9,   9], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([436, 392,  47, 392, 436], device='cuda:0'), tensor([333, 354, 100, 298], device='cuda:0'), tensor([197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6790, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2942, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9731, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 7 finished with lr=0.00003934


[Train]: Epoch 8 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 83,  16,  22, 215, 441], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([316, 433, 316, 100], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44,
        438, 345, 167, 108, 436, 241, 387], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8099, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4065, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2164, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([351, 197, 351, 121, 394, 443, 394,  70,  82, 296], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7309, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0995, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([400,  44, 248, 302, 248,  71, 224], device='cuda:0'), tensor([356], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([280, 451], device='cuda:0'), tensor([305, 256, 256, 256], device='cuda:0'), tensor([443,  49,  47,  98, 447,  47, 213,  80,  80, 121,   8, 217,  47,  55,
        453,  47, 294, 294], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6187, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2605, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8792, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 47, 354, 256, 116, 116, 116, 116, 325, 116, 147, 105, 325,  51, 109,
        183], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([ 93, 166], device='cuda:0'), tensor([215], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 52, 257, 234,  63, 399, 121], device='cuda:0'), tensor([98], device='cuda:0'), tensor([116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7577, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3273, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0850, device='cuda:0', grad_fn=<AddBackward0>)}
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([4255, 1536])
feats torch.Size([996, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([2769, 1536])
feats torch.Size([745, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([5793, 1536])
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([294, 315, 436, 315, 108], device='cuda:0'), tensor([408, 302, 383, 279, 383], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([183,  23, 183, 260,  36, 354,  47, 100,  47, 133, 256, 338],
       device='cuda:0'), tensor([399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6980, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3236, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0216, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399], device='cuda:0'), tensor([384, 215, 215, 215, 402], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3247, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0162, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 384,  11,  43,  32, 309, 429, 451, 215], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294,
        399], device='cuda:0'), tensor([146, 401, 146, 268, 408, 268,  44, 146], device='cuda:0'), tensor([436, 247], device='cuda:0'), tensor([441, 113, 441], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133, 404], device='cuda:0'), tensor([295, 351,  63,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2946, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9501, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([256], device='cuda:0'), tensor([354,  96, 187,  96, 108,  96], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5161, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2156, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7316, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([215], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([226, 351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,  30,  21,
        286,  21, 286, 105,  95], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([420, 420, 424, 371,  91, 113, 371], device='cuda:0'), tensor([443], device='cuda:0'), tensor([146,  71, 390], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6268, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2421, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8689, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([316, 430, 316, 436], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407, 280,  21,  40,
        269,  44, 424, 407,  21], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6817, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2780, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9598, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255], device='cuda:0'), tensor([231, 196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302,
        305, 217, 305], device='cuda:0'), tensor([244], device='cuda:0'), tensor([234], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5253, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2605, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7857, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00010/00055]	Time 0.35 (0.35)	Loss 0.79 (0.79)
		cls_loss 0.53 (0.53)	reg_loss 0.26 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 54, 398, 398], device='cuda:0'), tensor([63], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([441, 441, 225, 108, 305, 285, 305, 441], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0')]
yes3
feats torch.Size([5951, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2199, 1536]) {'cls_loss': tensor(0.7615, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0824, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([264, 218, 264, 433, 121, 264, 415], device='cuda:0'), tensor([148], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([116, 116, 116,  80], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5385, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2362, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7747, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([417], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([31], device='cuda:0'), tensor([132], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4209, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1770, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5979, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([340,  13, 221,  44], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([ 80, 100, 100,  80, 100,  80, 166,  71, 354], device='cuda:0'), tensor([15], device='cuda:0'), tensor([90], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8368, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3191, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1559, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201, 348], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302,
        441], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([14], device='cuda:0'), tensor([359, 436, 359, 441, 359, 203, 359, 279], device='cuda:0'), tensor([174, 256, 174, 256, 174], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7510, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3598, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1107, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([319, 319, 121], device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([ 88,  16,  88,  73,  88, 298], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 44, 447, 294, 392, 100], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([201, 121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4138, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2020, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6158, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408], device='cuda:0'), tensor([392, 392, 392], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,  22,
        247, 234, 247, 294, 424, 150, 433], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357], device='cuda:0'), tensor([100, 443, 281, 325, 124, 289, 100, 116, 296, 355, 182,  93, 355],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3798, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2716, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([80], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([14], device='cuda:0'), tensor([ 85, 292, 385, 155, 131], device='cuda:0'), tensor([155, 247, 436, 230, 142,  11], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([173, 125, 341], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4683, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2086, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6769, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 46, 120, 120,  46, 197, 283,  46, 108, 209], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181],
       device='cuda:0'), tensor([305], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([451, 191, 108], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8824, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4045, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([103, 249, 103, 436,  48, 365, 161, 121, 436], device='cuda:0'), tensor([116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,
         47, 116], device='cuda:0'), tensor([430], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([ 37,  37, 257, 215, 313, 411,  70, 411,  44, 200, 258, 226, 411, 226,
        453, 197, 436, 340], device='cuda:0'), tensor([430, 436, 431, 415, 431, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9732, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4164, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3896, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00020/00055]	Time 0.30 (0.32)	Loss 1.39 (1.09)
		cls_loss 0.97 (0.75)	reg_loss 0.42 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([  9, 155, 121,  43,  17, 147, 344], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([393, 305, 159, 393, 100, 393,  87, 437, 332, 437,  95,  83, 286, 407,
        437,  21, 168, 100,  21, 437,  21], device='cuda:0'), tensor([411,  50, 415,  93], device='cuda:0'), tensor([315, 451, 441,  32, 315,  90, 305, 451,  73, 121], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254], device='cuda:0'), tensor([146], device='cuda:0'), tensor([121,  80, 142, 121, 436, 121, 398, 384], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9778, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3713, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 63, 436,  80, 354,  93, 120,  93, 183], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([316, 316, 316, 305, 366, 445, 441], device='cuda:0'), tensor([2], device='cuda:0'), tensor([408, 408, 436, 436], device='cuda:0'), tensor([316, 451, 405, 258, 430], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([413, 245, 413, 319, 394, 453, 100,  93,  86, 413], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2874, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0182, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([301,  76,  98,  91, 302, 451, 286, 424,  91, 451,  91],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302], device='cuda:0'), tensor([120, 302, 424], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6910, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2953, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9863, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([250,  50, 250, 432], device='cuda:0'), tensor([399, 441, 301, 433, 294, 385, 385, 217, 385], device='cuda:0'), tensor([294, 196, 215], device='cuda:0'), tensor([ 11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98, 283, 301,
        283], device='cuda:0'), tensor([436, 366,  10, 366], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7642, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3431, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1073, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([397, 249, 394], device='cuda:0'), tensor([271, 121, 316], device='cuda:0'), tensor([ 44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436],
       device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269], device='cuda:0'), tensor([219], device='cuda:0'), tensor([89], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7175, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3014, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0188, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([37], device='cuda:0'), tensor([ 15,  15, 305, 181], device='cuda:0'), tensor([58], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7249, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3121, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0370, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 296, 108, 258,  71], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([315, 256], device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([90], device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7551, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3135, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0685, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 10, 218], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([415, 400, 415, 121], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37,
        424,  37, 411, 411, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8376, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1889, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([451,  32, 121,  37,  43, 121, 124,  44, 197, 121], device='cuda:0'), tensor([326, 436, 208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,
         19, 436, 384,  19, 182], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([439, 439, 257,   9, 439], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7589, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3217, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0807, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,
         50], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([187], device='cuda:0'), tensor([197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6322, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3264, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9585, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00030/00055]	Time 0.30 (0.32)	Loss 0.96 (1.04)
		cls_loss 0.63 (0.71)	reg_loss 0.33 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([255], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0'), tensor([121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437, 310,
        399, 415, 399, 302,  87], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([ 91,  31, 294,  31, 294,  91, 150, 150, 302,  85], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([123,  80, 436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311, 354],
       device='cuda:0'), tensor([398, 436, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9462, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4100, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3562, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191, 301], device='cuda:0'), tensor([298, 441,  96, 441, 298, 441], device='cuda:0'), tensor([80], device='cuda:0'), tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([406], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 10, 436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5645, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2663, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8307, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325],
       device='cuda:0'), tensor([279, 223, 228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430],
       device='cuda:0'), tensor([182, 392, 146, 146,  51], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([319, 408, 127, 142, 127, 337], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([269, 269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8653, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3213, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1866, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([137, 357, 431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294,
        357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([399], device='cuda:0'), tensor([436, 439, 439, 436, 439, 436], device='cuda:0'), tensor([82], device='cuda:0'), tensor([ 11,  78, 175,  71, 121, 436, 402], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([ 93, 283], device='cuda:0'), tensor([354, 432, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7131, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3125, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0256, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([319, 319, 196], device='cuda:0'), tensor([47], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([137, 137, 256], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3432, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1524, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([ 44, 304], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190,
        357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([21], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167,
        431, 268, 415,  22,  50, 268,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3510, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1787, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100,  80,  93, 121, 124, 332, 248, 298, 249], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([65], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([385, 437, 166, 385, 437, 385, 399, 385, 399, 437,  50, 166],
       device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([9], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6507, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2678, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9185, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([396], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([15], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 268], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([242, 415, 436, 242, 415, 121, 242, 242], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8051, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3834, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1885, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([220], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 14, 436], device='cuda:0'), tensor([244], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5247, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2066, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7313, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120, 424, 166, 385, 166], device='cuda:0'), tensor([256], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([408], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6492, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9516, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00040/00055]	Time 0.30 (0.31)	Loss 0.95 (1.02)
		cls_loss 0.65 (0.69)	reg_loss 0.30 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([399, 230, 277, 305, 175, 197, 121, 197], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0'), tensor([424, 269,  94, 269, 269, 203, 332, 269, 407, 121, 407, 437, 286],
       device='cuda:0'), tensor([187], device='cuda:0'), tensor([406, 451, 406, 140, 451], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0285, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3908, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4194, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([408], device='cuda:0'), tensor([406,  11, 441], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430, 384, 262], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([158, 120, 181, 158], device='cuda:0'), tensor([181,  82, 181,  82, 313, 181,  82, 181,  82, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5319, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7544, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([146, 100, 355, 116], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411,  90], device='cuda:0'), tensor([255,  50,  85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215,
        302, 357], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([ 93, 215, 225, 424, 225], device='cuda:0'), tensor([451,  49, 424, 218, 436], device='cuda:0'), tensor([142, 316,  12, 121, 120, 249,  31, 345,  96,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0127, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3879, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4006, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([294, 399], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([426, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426,
        252, 367, 385, 365], device='cuda:0'), tensor([256], device='cuda:0'), tensor([105, 436, 382,   8,  71, 234, 415, 282, 270, 385, 393, 382, 234, 303,
        382, 181,   9, 181, 315, 181,   9], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37,
        331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2144, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4778, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6922, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141, 141], device='cuda:0'), tensor([9], device='cuda:0'), tensor([121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366, 215,  83, 436,
         71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226, 279,
        226, 279], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([177, 253,  87, 140], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 267,  93], device='cuda:0'), tensor([436], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326, 395,  85], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8182, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3767, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1948, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6064, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2520, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8585, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([159,  15, 436,  15, 436, 121, 451, 436, 451,  12, 241],
       device='cuda:0'), tensor([121, 351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385],
       device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310,  50], device='cuda:0'), tensor([201], device='cuda:0'), tensor([88], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223, 305],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7686, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3165, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0851, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([255], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([295], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,
         50,  50], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4074, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1927, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6001, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([ 50, 291, 438, 396, 438, 291, 438, 291, 438, 291, 396, 438, 291],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 369, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([204, 204, 350, 204, 143], device='cuda:0'), tensor([4], device='cuda:0'), tensor([98], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5412, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2698, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8109, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([225], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([340, 236, 121, 312, 121,  50], device='cuda:0'), tensor([284], device='cuda:0'), tensor([80], device='cuda:0'), tensor([437,  93, 437, 121, 280,  93,  12, 121, 432, 408, 286, 283, 280, 279,
        121, 345, 121, 437,  93, 437], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3478, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1282, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00050/00055]	Time 0.30 (0.31)	Loss 1.13 (1.04)
		cls_loss 0.78 (0.71)	reg_loss 0.35 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([116, 116], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([394, 411], device='cuda:0'), tensor([100,  88, 100,  88, 100], device='cuda:0'), tensor([399], device='cuda:0'), tensor([240], device='cuda:0'), tensor([453, 415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279, 273,
        453, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6156, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2634, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8790, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([265, 319,  11, 230,  46,  93, 215, 249, 134], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([354, 385, 354, 100, 121, 404,  93, 257, 385, 453, 110],
       device='cuda:0'), tensor([ 96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([304, 437, 436, 279, 296, 302, 422, 121,  30], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([116,  93, 447,  68,  47, 443,  93,  19, 389,  47, 200,  49],
       device='cuda:0'), tensor([295, 436, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0890, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5479, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([181], device='cuda:0'), tensor([405, 441, 405, 441, 405, 444], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([256], device='cuda:0'), tensor([191], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3581, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1583, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5164, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([120, 295, 295, 295, 295], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([370, 213, 183, 354, 404, 124, 130, 446, 166, 130, 378, 166],
       device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([116, 385], device='cuda:0'), tensor([ 51, 392, 100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285,
        213], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8336, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3047, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1383, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 8 finished with lr=0.00004426


[Train]: Epoch 9 started
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 22, 215, 441, 415, 441], device='cuda:0'), tensor([ 44, 304, 217, 201,  88, 430], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([47], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6178, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2566, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8744, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([146, 268], device='cuda:0'), tensor([245, 265,  46, 384, 265, 319,  11, 230,  46], device='cuda:0'), tensor([268, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268,
        146, 411, 268, 146], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292,
        415,  22, 247, 234], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8281, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3518, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1799, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([412, 357, 412, 357, 398, 357, 412, 357, 357], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100], device='cuda:0'), tensor([436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50,  16],
       device='cuda:0'), tensor([392,  91, 392, 268, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268,
        268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268,
        268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447],
       device='cuda:0'), tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377],
       device='cuda:0'), tensor([408, 408, 415, 383, 399, 399, 383, 436,   8,   8, 399, 385, 436],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1720, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5593, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7313, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380], device='cuda:0'), tensor([143, 302, 180,  16], device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([345, 215], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([357, 296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9,
        298, 279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279, 197],
       device='cuda:0'), tensor([348, 354, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8770, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4163, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2933, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([283], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85,
        293,  84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([295, 295, 294], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([ 88, 100, 209], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6067, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2664, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8732, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9035, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3143, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([ 90,  11, 279,  11,  11, 279,  11, 121, 201,  93, 279, 283, 279, 121,
        283,  98, 283, 301], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([294, 354, 429, 138,  60,  83, 436, 411, 411, 436, 411, 436, 411, 436,
         59, 411,  59, 316, 430, 313, 411, 316, 411,  82, 411, 207],
       device='cuda:0'), tensor([215, 305, 298, 292,  73, 399,  49, 440], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0284, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4555, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4839, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121, 120, 249], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([ 93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441, 431],
       device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([254, 415, 147, 421, 421,  82, 421, 228, 415, 155], device='cuda:0'), tensor([451], device='cuda:0'), tensor([424,  90, 413,  90, 121, 437, 124,   9, 437], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6956, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2779, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9735, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([14], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2942, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1848, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4790, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310, 310], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([ 50,  90,  50, 121, 159, 121, 384, 279, 385, 121,  87],
       device='cuda:0'), tensor([ 65, 294,  65, 124, 144,  23], device='cuda:0'), tensor([453, 415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279, 273,
        453, 196, 397, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7633, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3448, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1080, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([ 21,  30,  21, 286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,
         96, 155, 351,  96, 121, 351, 217, 351, 217], device='cuda:0'), tensor([264, 409,  44, 319], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 22,  22,  37,  49, 122,  37,  37, 217, 329,  37, 282, 121,  37, 447,
        385, 407], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8784, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4100, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2884, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00010/00055]	Time 0.35 (0.35)	Loss 1.29 (1.29)
		cls_loss 0.88 (0.88)	reg_loss 0.41 (0.41)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([398], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95], device='cuda:0'), tensor([ 81, 384, 100, 384, 385,  11, 121], device='cuda:0'), tensor([ 22, 451,  53, 424, 451], device='cuda:0'), tensor([282, 436,  49, 159, 224, 121,  70, 224,  70,  22,  52, 257, 234],
       device='cuda:0'), tensor([  9, 294,  62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3173, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1077, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([226, 383, 430], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183],
       device='cuda:0'), tensor([441, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398, 396,
        268, 268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256, 441,
        268, 268], device='cuda:0'), tensor([279,  93, 394, 183, 435, 311, 232,  36, 120,  36,  36,  73, 116],
       device='cuda:0'), tensor([127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([174, 256, 369, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8323, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3834, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2157, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([248, 258, 132], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([82], device='cuda:0'), tensor([ 47, 443,  93,  19, 389,  47, 200,  49,  49, 138, 194, 388],
       device='cuda:0'), tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63], device='cuda:0'), tensor([181,  30, 181, 181,   9], device='cuda:0'), tensor([244], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5836, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2365, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8201, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121], device='cuda:0'), tensor([415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50, 159],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([439, 439, 257,   9, 439], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([327], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6556, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9367, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([93], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([436, 230, 142,  11, 441], device='cuda:0'), tensor([ 31,  63,  82, 255,  82, 165,  82, 165, 385, 107, 255],
       device='cuda:0'), tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5563, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2691, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8254, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([384,  43, 110,  90,  44, 269, 279, 269, 269, 315, 269],
       device='cuda:0'), tensor([351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,
         37, 445, 286,  90, 316,  22, 294,  90], device='cuda:0'), tensor([ 58, 399], device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0'), tensor([4], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6968, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2886, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9854, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([338, 401], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([392,  47, 362, 385, 194, 194,  51,  51, 194, 194, 194, 194, 388, 345,
        338, 338, 397, 100, 388,  80], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7666, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3412, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1077, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150,
        283, 286, 283], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([267,  93, 267,  93, 267,  93], device='cuda:0'), tensor([9], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7424, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3352, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0776, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([215], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3114, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1335, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4449, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([88], device='cuda:0'), tensor([392,   5, 146, 182, 392, 146], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([220, 441, 220, 181, 441, 431,  50, 431, 441, 220, 441, 431, 219, 399,
        220, 217, 431, 397, 431,  73, 220], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([127, 294, 394, 411], device='cuda:0'), tensor([ 93, 100,  93, 100, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2422, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8567, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00020/00055]	Time 0.31 (0.33)	Loss 0.86 (1.07)
		cls_loss 0.61 (0.75)	reg_loss 0.24 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([  4, 385,  80], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([366, 436, 366,  10], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1575, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([47,  9], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([294, 315, 436, 315, 108,   8,   8], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([ 82, 440, 441, 279], device='cuda:0'), tensor([301, 385, 399, 441, 301, 433, 294], device='cuda:0'), tensor([284], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5583, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2197, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7780, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([37], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([451, 436,  15, 294,  15], device='cuda:0'), tensor([225,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5349, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2148, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7497, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([354, 100, 121, 404,  93, 257, 385, 453, 110, 394], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75], device='cuda:0'), tensor([408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5720, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2710, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8429, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 382], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([408], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([121,   4], device='cuda:0'), tensor([451, 443, 100, 120, 415,  15,  30], device='cuda:0'), tensor([98], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7952, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3835, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1787, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([385, 431, 315, 213, 216, 436,  82, 103, 385, 385, 103,   8, 365, 103,
        302, 103, 436], device='cuda:0'), tensor([ 87, 213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16,
        286,  16, 436,  16, 286], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9882, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4166, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4048, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 90,  11, 429], device='cuda:0'), tensor([240, 436], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([325,  63,  47,  47,  93,  23, 443,  49,  47,  98], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([ 71, 302], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4180, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1780, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5960, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([315,  93, 244, 432], device='cuda:0'), tensor([ 47, 256,  80, 109, 325,  47, 256, 195,  47, 388], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([351, 197, 351, 121, 394, 443, 394,  70,  82, 296], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([120, 295, 295, 295, 295], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5473, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2301, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7774, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 93, 283], device='cuda:0'), tensor([436,  82,   0, 436, 447], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([385, 224, 246, 224, 246], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([156, 121, 156,  63,  93, 396,  50,  50], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4973, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7873, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 309,  50], device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311, 354, 159, 354],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([220, 292,  49], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4242, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2008, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6250, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00030/00055]	Time 0.30 (0.32)	Loss 0.62 (0.92)
		cls_loss 0.42 (0.64)	reg_loss 0.20 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([359, 359, 436, 359, 436, 436], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([356], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4544, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2495, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7039, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([136, 423], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362, 325, 294, 294,
        116, 404], device='cuda:0'), tensor([401, 280, 354], device='cuda:0'), tensor([354], device='cuda:0'), tensor([399, 408,  50, 399,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4843, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2285, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7128, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256], device='cuda:0'), tensor([166,  44,  11,  44,  71, 351,  82, 351, 424], device='cuda:0'), tensor([405, 113, 405,  93, 405,  93, 405,  93, 332,  40, 405],
       device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([430, 351, 430, 351,  93, 351, 325, 351, 294, 351], device='cuda:0'), tensor([371, 371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([142, 142, 280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8494, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3517, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2011, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([286, 121, 187], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8,
        395, 205, 326, 395,  85, 417], device='cuda:0'), tensor([ 71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([397, 113, 415, 183, 354, 254, 116, 415, 121,  88,   8, 354,   8, 430],
       device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([137,  10, 436,  44, 108, 431, 436], device='cuda:0'), tensor([121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9873, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4363, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4235, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([424, 424,  89, 319], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([181, 181, 219, 181], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 439],
       device='cuda:0'), tensor([100,   9, 404, 330,  57,  93, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6871, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([399, 230, 277, 305, 175, 197, 121], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415], device='cuda:0'), tensor([436, 407, 410, 280, 270], device='cuda:0'), tensor([408], device='cuda:0'), tensor([402, 305, 128, 236, 128, 128, 241, 305, 394,  50,  50,  50, 402, 294,
        138,  50], device='cuda:0'), tensor([220, 357, 431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9102, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3316, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2418, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 32, 309, 429, 451, 215, 177, 294, 215, 150,  71,  71],
       device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([451], device='cuda:0'), tensor([315], device='cuda:0'), tensor([423, 423, 333], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5708, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2514, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8222, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([80], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([121, 312, 121,  50,  10], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0'), tensor([ 23, 408, 436, 436, 408, 436], device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5461, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2392, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7853, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195, 325],
       device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3384, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9732, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([225], device='cuda:0'), tensor([121, 215,  76,  37, 399, 113,  37,  37, 150,  37], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([436, 443, 341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([354, 398, 376,  71, 354, 398, 354, 398, 354], device='cuda:0'), tensor([191, 315, 305, 315,  73, 401, 441, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6618, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2805, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9423, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00040/00055]	Time 0.30 (0.32)	Loss 0.94 (0.93)
		cls_loss 0.66 (0.64)	reg_loss 0.28 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([31], device='cuda:0'), tensor([220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5,
        167, 431, 268, 415,  22,  50, 268], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6942, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3226, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0168, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([268, 432, 268], device='cuda:0'), tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116, 263],
       device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223,
        215, 385,  90, 223, 402], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8315, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4478, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2794, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([411, 223, 345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([50], device='cuda:0'), tensor([116, 138,   8, 116, 138, 232, 388], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([173, 125, 341], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6176, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2531, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8707, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([100, 100, 210,  68, 121, 404, 257, 385,  80, 116,  19, 182],
       device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([181], device='cuda:0'), tensor([234, 215,  50,  50], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6184, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2981, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9165, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([ 37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,
         50, 157,  90, 157,  37], device='cuda:0'), tensor([436, 392,  47, 392, 436], device='cuda:0'), tensor([93], device='cuda:0'), tensor([430], device='cuda:0'), tensor([451, 451, 451, 451, 451, 155], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([437,  87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2441, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7398, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([9], device='cuda:0'), tensor([80], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 80, 298, 215, 187,   8, 187], device='cuda:0'), tensor([295], device='cuda:0'), tensor([441, 285, 108, 441], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4633, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2196, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6829, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([315, 244], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([255], device='cuda:0'), tensor([407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,  21,
        224,  21,  21], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([255], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5020, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2769, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7789, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([201], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([294, 158], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([215, 215, 402, 108, 415], device='cuda:0'), tensor([ 82,   0,  10,   0, 409], device='cuda:0'), tensor([187], device='cuda:0'), tensor([439, 436, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5829, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2601, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8430, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([256, 256, 256], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93, 437,  93,
        437,  93, 437, 121, 280,  93], device='cuda:0'), tensor([244], device='cuda:0'), tensor([163, 398, 163, 398, 408], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7107, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3458, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0565, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([ 10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([196, 294, 294,   9, 313,  52, 294, 181], device='cuda:0'), tensor([191], device='cuda:0'), tensor([319, 408, 127, 142, 127], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([319, 319], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6052, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2779, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8832, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00050/00055]	Time 0.30 (0.31)	Loss 0.88 (0.92)
		cls_loss 0.61 (0.64)	reg_loss 0.28 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([2, 2, 2, 2], device='cuda:0'), tensor([89], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([430, 440], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([182, 325,   1, 325,  93, 183,  47, 285, 356, 330, 415, 415,  36,  93,
        183,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9041, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3708, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2749, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([441, 383, 441], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([426, 252, 367, 426, 252, 367, 426, 252, 367,  62, 183,  70, 426, 426,
        426, 252, 367, 426, 252], device='cuda:0'), tensor([98], device='cuda:0'), tensor([437,  90,  44, 195], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8632, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3300, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1933, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([417], device='cuda:0'), tensor([271, 131, 117, 271, 121], device='cuda:0'), tensor([256], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4650, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2175, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6825, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([268, 376, 268, 376, 268,  80], device='cuda:0'), tensor([362], device='cuda:0'), tensor([ 16, 298,  73,  71, 136,  73, 424, 298], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([249, 316, 436], device='cuda:0'), tensor([163], device='cuda:0'), tensor([120], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4647, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2245, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6893, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 9 finished with lr=0.00004918

dataset_name None

Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7ff2509a3e80>
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00010/00444]	Time 0.33 (0.33)
loss {'cls_loss': tensor(0.1421, device='cuda:0'), 'reg_loss': tensor(0.1199, device='cuda:0'), 'final_loss': tensor(0.2620, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00020/00444]	Time 0.22 (0.28)
loss {'cls_loss': tensor(0.2097, device='cuda:0'), 'reg_loss': tensor(0.1026, device='cuda:0'), 'final_loss': tensor(0.3123, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00030/00444]	Time 0.23 (0.26)
loss {'cls_loss': tensor(0.5233, device='cuda:0'), 'reg_loss': tensor(0.2747, device='cuda:0'), 'final_loss': tensor(0.7980, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00040/00444]	Time 0.08 (0.22)
loss {'cls_loss': tensor(0.6088, device='cuda:0'), 'reg_loss': tensor(0.2778, device='cuda:0'), 'final_loss': tensor(0.8866, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00050/00444]	Time 0.08 (0.19)
loss {'cls_loss': tensor(0.2332, device='cuda:0'), 'reg_loss': tensor(0.1613, device='cuda:0'), 'final_loss': tensor(0.3945, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00060/00444]	Time 0.08 (0.17)
loss {'cls_loss': tensor(0.3687, device='cuda:0'), 'reg_loss': tensor(0.1684, device='cuda:0'), 'final_loss': tensor(0.5370, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00070/00444]	Time 0.09 (0.16)
loss {'cls_loss': tensor(0.3143, device='cuda:0'), 'reg_loss': tensor(0.2217, device='cuda:0'), 'final_loss': tensor(0.5360, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00080/00444]	Time 0.09 (0.15)
loss {'cls_loss': tensor(0.1783, device='cuda:0'), 'reg_loss': tensor(0.0657, device='cuda:0'), 'final_loss': tensor(0.2440, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00090/00444]	Time 0.08 (0.14)
loss {'cls_loss': tensor(0.2546, device='cuda:0'), 'reg_loss': tensor(0.2099, device='cuda:0'), 'final_loss': tensor(0.4645, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00100/00444]	Time 0.09 (0.14)
loss {'cls_loss': tensor(0.7568, device='cuda:0'), 'reg_loss': tensor(0.3750, device='cuda:0'), 'final_loss': tensor(1.1318, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00110/00444]	Time 0.08 (0.13)
loss {'cls_loss': tensor(1.3834, device='cuda:0'), 'reg_loss': tensor(0.8846, device='cuda:0'), 'final_loss': tensor(2.2681, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00120/00444]	Time 0.09 (0.13)
loss {'cls_loss': tensor(0.5971, device='cuda:0'), 'reg_loss': tensor(0.2544, device='cuda:0'), 'final_loss': tensor(0.8515, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00130/00444]	Time 0.09 (0.13)
loss {'cls_loss': tensor(0.1744, device='cuda:0'), 'reg_loss': tensor(0.1547, device='cuda:0'), 'final_loss': tensor(0.3291, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00140/00444]	Time 0.09 (0.12)
loss {'cls_loss': tensor(0.2713, device='cuda:0'), 'reg_loss': tensor(0.2483, device='cuda:0'), 'final_loss': tensor(0.5196, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00150/00444]	Time 0.08 (0.12)
loss {'cls_loss': tensor(0.3676, device='cuda:0'), 'reg_loss': tensor(0.1567, device='cuda:0'), 'final_loss': tensor(0.5243, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00160/00444]	Time 0.09 (0.12)
loss {'cls_loss': tensor(0.4954, device='cuda:0'), 'reg_loss': tensor(0.1584, device='cuda:0'), 'final_loss': tensor(0.6538, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00170/00444]	Time 0.09 (0.12)
loss {'cls_loss': tensor(0.9796, device='cuda:0'), 'reg_loss': tensor(0.4371, device='cuda:0'), 'final_loss': tensor(1.4167, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00180/00444]	Time 0.09 (0.12)
loss {'cls_loss': tensor(1.2419, device='cuda:0'), 'reg_loss': tensor(0.4765, device='cuda:0'), 'final_loss': tensor(1.7184, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00190/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.2813, device='cuda:0'), 'reg_loss': tensor(0.1042, device='cuda:0'), 'final_loss': tensor(0.3856, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00200/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.3283, device='cuda:0'), 'reg_loss': tensor(0.1472, device='cuda:0'), 'final_loss': tensor(0.4755, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00210/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.7037, device='cuda:0'), 'reg_loss': tensor(0.2681, device='cuda:0'), 'final_loss': tensor(0.9718, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00220/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.1042, device='cuda:0'), 'reg_loss': tensor(0.1202, device='cuda:0'), 'final_loss': tensor(0.2244, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00230/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.1672, device='cuda:0'), 'reg_loss': tensor(0.1224, device='cuda:0'), 'final_loss': tensor(0.2896, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00240/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.2706, device='cuda:0'), 'reg_loss': tensor(0.0693, device='cuda:0'), 'final_loss': tensor(0.3399, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00250/00444]	Time 0.08 (0.11)
loss {'cls_loss': tensor(0.3076, device='cuda:0'), 'reg_loss': tensor(0.1338, device='cuda:0'), 'final_loss': tensor(0.4414, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00260/00444]	Time 0.09 (0.11)
loss {'cls_loss': tensor(0.8934, device='cuda:0'), 'reg_loss': tensor(0.6705, device='cuda:0'), 'final_loss': tensor(1.5640, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00270/00444]	Time 0.09 (0.11)
loss {'cls_loss': tensor(0.4827, device='cuda:0'), 'reg_loss': tensor(0.2142, device='cuda:0'), 'final_loss': tensor(0.6968, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00280/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.6246, device='cuda:0'), 'reg_loss': tensor(0.2856, device='cuda:0'), 'final_loss': tensor(0.9102, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00290/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.3996, device='cuda:0'), 'reg_loss': tensor(0.1311, device='cuda:0'), 'final_loss': tensor(0.5307, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00300/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(1.9081, device='cuda:0'), 'reg_loss': tensor(0.7607, device='cuda:0'), 'final_loss': tensor(2.6688, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00310/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.0914, device='cuda:0'), 'reg_loss': tensor(0.0153, device='cuda:0'), 'final_loss': tensor(0.1067, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00320/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(0.1237, device='cuda:0'), 'reg_loss': tensor(0.0935, device='cuda:0'), 'final_loss': tensor(0.2173, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00330/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(1.1169, device='cuda:0'), 'reg_loss': tensor(0.6104, device='cuda:0'), 'final_loss': tensor(1.7273, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00340/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.4070, device='cuda:0'), 'reg_loss': tensor(0.1648, device='cuda:0'), 'final_loss': tensor(0.5718, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00350/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.3351, device='cuda:0'), 'reg_loss': tensor(0.0863, device='cuda:0'), 'final_loss': tensor(0.4214, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00360/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(0.3268, device='cuda:0'), 'reg_loss': tensor(0.1375, device='cuda:0'), 'final_loss': tensor(0.4644, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00370/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.1335, device='cuda:0'), 'reg_loss': tensor(0.0956, device='cuda:0'), 'final_loss': tensor(0.2291, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00380/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(0.0645, device='cuda:0'), 'reg_loss': tensor(0.0764, device='cuda:0'), 'final_loss': tensor(0.1409, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00390/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(2.0573, device='cuda:0'), 'reg_loss': tensor(0.6309, device='cuda:0'), 'final_loss': tensor(2.6883, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00400/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(1.2846, device='cuda:0'), 'reg_loss': tensor(0.4120, device='cuda:0'), 'final_loss': tensor(1.6966, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00410/00444]	Time 0.10 (0.10)
loss {'cls_loss': tensor(0.2771, device='cuda:0'), 'reg_loss': tensor(0.2401, device='cuda:0'), 'final_loss': tensor(0.5171, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00420/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(0.4996, device='cuda:0'), 'reg_loss': tensor(0.2443, device='cuda:0'), 'final_loss': tensor(0.7439, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00430/00444]	Time 0.08 (0.10)
loss {'cls_loss': tensor(1.7903, device='cuda:0'), 'reg_loss': tensor(0.6877, device='cuda:0'), 'final_loss': tensor(2.4780, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
Test: [00440/00444]	Time 0.09 (0.10)
loss {'cls_loss': tensor(0.1716, device='cuda:0'), 'reg_loss': tensor(0.0786, device='cuda:0'), 'final_loss': tensor(0.2502, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_lens [1024, 512, 256, 128, 64, 32]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
t-start,end [ 33.82286    -0.        259.71313     1.1529536  36.7119    379.8369
  18.489862   10.623142  277.00677    39.1367     30.119047   81.75741
 173.36809   319.93613   265.50702   136.88483   263.09146     9.8874855
 254.6995    490.49832  ] [ 44.58735    23.459646  271.7706     12.43835   128.80547   472.95508
  39.50028    13.5039215 300.641      42.02562    35.9506    104.64942
 217.86794   408.88367   276.81772   148.32632   265.88278    31.151209
 278.42282   533.7242   ]
label [ 88  91  88  88 354 354  91  88  88  88  88 354 354 354  88  88  88  88
  91 354]
label_len 88800
gt [ 91 411  88  80  88  91  88 354 163 398 163 430 120 253 279 253 253 142
 230 121]
gt_len 3226
score [0.18258834 0.17395227 0.17236641 0.1596501  0.14651735 0.14104472
 0.13681312 0.13648488 0.13357227 0.12878658 0.12540922 0.12526868
 0.12489322 0.12464793 0.12125346 0.120359   0.1194787  0.11825376
 0.11799258 0.11749784]
gt_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7ff253117f40>
pre_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7ff253117dc0>
pred_label [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 30, 31, 32, 35, 36, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 71, 73, 74, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 102, 104, 105, 109, 111, 112, 114, 115, 116, 119, 122, 124, 126, 128, 129, 132, 133, 136, 137, 139, 141, 142, 143, 145, 147, 150, 151, 152, 154, 159, 160, 161, 162, 166, 169, 172, 176, 177, 178, 179, 182, 184, 186, 189, 190, 191, 192, 194, 195, 198, 199, 202, 203, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 259, 260, 261, 265, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 284, 285, 286, 288, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 304, 305, 308, 314, 315, 318, 319, 320, 321, 327, 329, 334, 335, 337, 339, 340, 342, 343, 344, 345, 347, 350, 354, 359, 371, 372, 373, 376, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 430, 432, 434, 436, 437, 438, 440]
Warning: No predictions of label '1' were provdied.
Warning: No predictions of label '2' were provdied.
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '6' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '18' were provdied.
Warning: No predictions of label '20' were provdied.
Warning: No predictions of label '24' were provdied.
Warning: No predictions of label '25' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '27' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '29' were provdied.
Warning: No predictions of label '34' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '38' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '40' were provdied.
Warning: No predictions of label '41' were provdied.
Warning: No predictions of label '45' were provdied.
Warning: No predictions of label '48' were provdied.
Warning: No predictions of label '53' were provdied.
Warning: No predictions of label '55' were provdied.
Warning: No predictions of label '60' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '68' were provdied.
Warning: No predictions of label '69' were provdied.
Warning: No predictions of label '72' were provdied.
Warning: No predictions of label '74' were provdied.
Warning: No predictions of label '77' were provdied.
Warning: No predictions of label '78' were provdied.
Warning: No predictions of label '79' were provdied.
Warning: No predictions of label '84' were provdied.
Warning: No predictions of label '86' were provdied.
Warning: No predictions of label '92' were provdied.
Warning: No predictions of label '94' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '102' were provdied.
Warning: No predictions of label '103' were provdied.
Warning: No predictions of label '104' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '109' were provdied.
Warning: No predictions of label '110' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '114' were provdied.
Warning: No predictions of label '117' were provdied.
Warning: No predictions of label '122' were provdied.
Warning: No predictions of label '123' were provdied.
Warning: No predictions of label '125' were provdied.
Warning: No predictions of label '126' were provdied.
Warning: No predictions of label '128' were provdied.
Warning: No predictions of label '130' were provdied.
Warning: No predictions of label '132' were provdied.
Warning: No predictions of label '135' were provdied.
Warning: No predictions of label '136' were provdied.
Warning: No predictions of label '139' were provdied.
Warning: No predictions of label '140' were provdied.
Warning: No predictions of label '143' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '149' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '158' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '161' were provdied.
Warning: No predictions of label '162' were provdied.
Warning: No predictions of label '163' were provdied.
Warning: No predictions of label '168' were provdied.
Warning: No predictions of label '169' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '172' were provdied.
Warning: No predictions of label '173' were provdied.
Warning: No predictions of label '175' were provdied.
Warning: No predictions of label '176' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '185' were provdied.
Warning: No predictions of label '186' were provdied.
Warning: No predictions of label '188' were provdied.
Warning: No predictions of label '190' were provdied.
Warning: No predictions of label '192' were provdied.
Warning: No predictions of label '193' were provdied.
Warning: No predictions of label '199' were provdied.
Warning: No predictions of label '202' were provdied.
Warning: No predictions of label '203' were provdied.
Warning: No predictions of label '207' were provdied.
Warning: No predictions of label '208' were provdied.
Warning: No predictions of label '211' were provdied.
Warning: No predictions of label '212' were provdied.
Warning: No predictions of label '214' were provdied.
Warning: No predictions of label '216' were provdied.
Warning: No predictions of label '228' were provdied.
Warning: No predictions of label '229' were provdied.
Warning: No predictions of label '232' were provdied.
Warning: No predictions of label '233' were provdied.
Warning: No predictions of label '235' were provdied.
Warning: No predictions of label '238' were provdied.
Warning: No predictions of label '246' were provdied.
Warning: No predictions of label '252' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '263' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '271' were provdied.
Warning: No predictions of label '273' were provdied.
Warning: No predictions of label '274' were provdied.
Warning: No predictions of label '276' were provdied.
Warning: No predictions of label '277' were provdied.
Warning: No predictions of label '278' were provdied.
Warning: No predictions of label '287' were provdied.
Warning: No predictions of label '288' were provdied.
Warning: No predictions of label '289' were provdied.
Warning: No predictions of label '290' were provdied.
Warning: No predictions of label '293' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '299' were provdied.
Warning: No predictions of label '300' were provdied.
Warning: No predictions of label '304' were provdied.
Warning: No predictions of label '307' were provdied.
Warning: No predictions of label '314' were provdied.
Warning: No predictions of label '317' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '320' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '322' were provdied.
Warning: No predictions of label '323' were provdied.
Warning: No predictions of label '324' were provdied.
Warning: No predictions of label '327' were provdied.
Warning: No predictions of label '328' were provdied.
Warning: No predictions of label '333' were provdied.
Warning: No predictions of label '334' were provdied.
Warning: No predictions of label '335' were provdied.
Warning: No predictions of label '336' were provdied.
Warning: No predictions of label '337' were provdied.
Warning: No predictions of label '339' were provdied.
Warning: No predictions of label '341' were provdied.
Warning: No predictions of label '342' were provdied.
Warning: No predictions of label '343' were provdied.
Warning: No predictions of label '344' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '349' were provdied.
Warning: No predictions of label '352' were provdied.
Warning: No predictions of label '358' were provdied.
Warning: No predictions of label '360' were provdied.
Warning: No predictions of label '361' were provdied.
Warning: No predictions of label '363' were provdied.
Warning: No predictions of label '364' were provdied.
Warning: No predictions of label '365' were provdied.
Warning: No predictions of label '367' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '369' were provdied.
Warning: No predictions of label '370' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '373' were provdied.
Warning: No predictions of label '374' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '376' were provdied.
Warning: No predictions of label '377' were provdied.
Warning: No predictions of label '378' were provdied.
Warning: No predictions of label '379' were provdied.
Warning: No predictions of label '380' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '382' were provdied.
Warning: No predictions of label '386' were provdied.
Warning: No predictions of label '387' were provdied.
Warning: No predictions of label '390' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '393' were provdied.
Warning: No predictions of label '400' were provdied.
Warning: No predictions of label '403' were provdied.
Warning: No predictions of label '410' were provdied.
Warning: No predictions of label '413' were provdied.
Warning: No predictions of label '414' were provdied.
Warning: No predictions of label '418' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '426' were provdied.
Warning: No predictions of label '428' were provdied.
Warning: No predictions of label '434' were provdied.
Warning: No predictions of label '440' were provdied.
Warning: No predictions of label '442' were provdied.
Warning: No predictions of label '444' were provdied.
Warning: No predictions of label '446' were provdied.
Warning: No predictions of label '448' were provdied.
Warning: No predictions of label '452' were provdied.
Warning: No predictions of label '1' were provdied.
Warning: No predictions of label '2' were provdied.
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '6' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '18' were provdied.
Warning: No predictions of label '20' were provdied.
Warning: No predictions of label '24' were provdied.
Warning: No predictions of label '25' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '27' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '29' were provdied.
Warning: No predictions of label '34' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '38' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '40' were provdied.
Warning: No predictions of label '41' were provdied.
Warning: No predictions of label '45' were provdied.
Warning: No predictions of label '48' were provdied.
Warning: No predictions of label '53' were provdied.
Warning: No predictions of label '55' were provdied.
Warning: No predictions of label '60' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '68' were provdied.
Warning: No predictions of label '69' were provdied.
Warning: No predictions of label '72' were provdied.
Warning: No predictions of label '74' were provdied.
Warning: No predictions of label '77' were provdied.
Warning: No predictions of label '78' were provdied.
Warning: No predictions of label '79' were provdied.
Warning: No predictions of label '84' were provdied.
Warning: No predictions of label '86' were provdied.
Warning: No predictions of label '92' were provdied.
Warning: No predictions of label '94' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '102' were provdied.
Warning: No predictions of label '103' were provdied.
Warning: No predictions of label '104' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '109' were provdied.
Warning: No predictions of label '110' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '114' were provdied.
Warning: No predictions of label '117' were provdied.
Warning: No predictions of label '122' were provdied.
Warning: No predictions of label '123' were provdied.
Warning: No predictions of label '125' were provdied.
Warning: No predictions of label '126' were provdied.
Warning: No predictions of label '128' were provdied.
Warning: No predictions of label '130' were provdied.
Warning: No predictions of label '132' were provdied.
Warning: No predictions of label '135' were provdied.
Warning: No predictions of label '136' were provdied.
Warning: No predictions of label '139' were provdied.
Warning: No predictions of label '140' were provdied.
Warning: No predictions of label '143' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '149' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '158' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '161' were provdied.
Warning: No predictions of label '162' were provdied.
Warning: No predictions of label '163' were provdied.
Warning: No predictions of label '168' were provdied.
Warning: No predictions of label '169' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '172' were provdied.
Warning: No predictions of label '173' were provdied.
Warning: No predictions of label '175' were provdied.
Warning: No predictions of label '176' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '185' were provdied.
Warning: No predictions of label '186' were provdied.
Warning: No predictions of label '188' were provdied.
Warning: No predictions of label '190' were provdied.
Warning: No predictions of label '192' were provdied.
Warning: No predictions of label '193' were provdied.
Warning: No predictions of label '199' were provdied.
Warning: No predictions of label '202' were provdied.
Warning: No predictions of label '203' were provdied.
Warning: No predictions of label '207' were provdied.
Warning: No predictions of label '208' were provdied.
Warning: No predictions of label '211' were provdied.
Warning: No predictions of label '212' were provdied.
Warning: No predictions of label '214' were provdied.
Warning: No predictions of label '216' were provdied.
Warning: No predictions of label '228' were provdied.
Warning: No predictions of label '229' were provdied.
Warning: No predictions of label '232' were provdied.
Warning: No predictions of label '233' were provdied.
Warning: No predictions of label '235' were provdied.
Warning: No predictions of label '238' were provdied.
Warning: No predictions of label '246' were provdied.
Warning: No predictions of label '252' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '263' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '271' were provdied.
Warning: No predictions of label '273' were provdied.
Warning: No predictions of label '274' were provdied.
Warning: No predictions of label '276' were provdied.
Warning: No predictions of label '277' were provdied.
Warning: No predictions of label '278' were provdied.
Warning: No predictions of label '287' were provdied.
Warning: No predictions of label '288' were provdied.
Warning: No predictions of label '289' were provdied.
Warning: No predictions of label '290' were provdied.
Warning: No predictions of label '293' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '299' were provdied.
Warning: No predictions of label '300' were provdied.
Warning: No predictions of label '304' were provdied.
Warning: No predictions of label '307' were provdied.
Warning: No predictions of label '314' were provdied.
Warning: No predictions of label '317' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '320' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '322' were provdied.
Warning: No predictions of label '323' were provdied.
Warning: No predictions of label '324' were provdied.
Warning: No predictions of label '327' were provdied.
Warning: No predictions of label '328' were provdied.
Warning: No predictions of label '333' were provdied.
Warning: No predictions of label '334' were provdied.
Warning: No predictions of label '335' were provdied.
Warning: No predictions of label '336' were provdied.
Warning: No predictions of label '337' were provdied.
Warning: No predictions of label '339' were provdied.
Warning: No predictions of label '341' were provdied.
Warning: No predictions of label '342' were provdied.
Warning: No predictions of label '343' were provdied.
Warning: No predictions of label '344' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '349' were provdied.
Warning: No predictions of label '352' were provdied.
Warning: No predictions of label '358' were provdied.
Warning: No predictions of label '360' were provdied.
Warning: No predictions of label '361' were provdied.
Warning: No predictions of label '363' were provdied.
Warning: No predictions of label '364' were provdied.
Warning: No predictions of label '365' were provdied.
Warning: No predictions of label '367' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '369' were provdied.
Warning: No predictions of label '370' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '373' were provdied.
Warning: No predictions of label '374' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '376' were provdied.
Warning: No predictions of label '377' were provdied.
Warning: No predictions of label '378' were provdied.
Warning: No predictions of label '379' were provdied.
Warning: No predictions of label '380' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '382' were provdied.
Warning: No predictions of label '386' were provdied.
Warning: No predictions of label '387' were provdied.
Warning: No predictions of label '390' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '393' were provdied.
Warning: No predictions of label '400' were provdied.
Warning: No predictions of label '403' were provdied.
Warning: No predictions of label '410' were provdied.
Warning: No predictions of label '413' were provdied.
Warning: No predictions of label '414' were provdied.
Warning: No predictions of label '418' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '426' were provdied.
Warning: No predictions of label '428' were provdied.
Warning: No predictions of label '434' were provdied.
Warning: No predictions of label '440' were provdied.
Warning: No predictions of label '442' were provdied.
Warning: No predictions of label '444' were provdied.
Warning: No predictions of label '446' were provdied.
Warning: No predictions of label '448' were provdied.
Warning: No predictions of label '452' were provdied.
ap[0] [8.97435897e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.57142857e-02 0.00000000e+00 0.00000000e+00 7.95266042e-03
 4.76190476e-02 5.96788824e-02 1.02248956e-02 8.67683580e-02
 1.85185185e-02 0.00000000e+00 0.00000000e+00 1.19884296e-02
 2.70738124e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 4.02147560e-02 7.10034341e-04 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.06837607e-03 0.00000000e+00 0.00000000e+00 2.35596708e-02
 3.09101103e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 3.08641975e-02 3.65482625e-02
 0.00000000e+00 9.52380952e-02 3.43294609e-02 0.00000000e+00
 0.00000000e+00 5.44921462e-03 0.00000000e+00 2.55183413e-02
 0.00000000e+00 7.50000000e-01 0.00000000e+00 9.09090909e-02
 0.00000000e+00 9.25925926e-02 0.00000000e+00 2.50000000e-01
 0.00000000e+00 8.00950839e-02 3.28125000e-01 3.88109496e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.19780220e-02 1.99600798e-03 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.98863636e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 7.89231920e-02 0.00000000e+00
 3.39395311e-02 1.87287415e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.47528809e-02 2.00000000e-01
 1.39691932e-02 8.73006181e-02 0.00000000e+00 1.29153785e-02
 0.00000000e+00 0.00000000e+00 6.57894737e-03 0.00000000e+00
 6.66666667e-02 0.00000000e+00 3.73792223e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 4.18903803e-02 0.00000000e+00
 5.40540541e-02 9.21658986e-03 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 3.47222222e-03
 4.70087526e-02 0.00000000e+00 0.00000000e+00 3.97763639e-02
 5.04213796e-03 0.00000000e+00 0.00000000e+00 8.63636364e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.04166667e-01 0.00000000e+00 0.00000000e+00
 2.85714286e-02 1.50428018e-02 0.00000000e+00 0.00000000e+00
 3.23818918e-01 1.19686093e-01 0.00000000e+00 9.13580247e-03
 0.00000000e+00 7.65161074e-03 0.00000000e+00 1.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.42334260e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 6.25000000e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.00000000e+00 0.00000000e+00
 0.00000000e+00 1.53609789e-02 0.00000000e+00 0.00000000e+00
 5.26315789e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 5.36891321e-02 6.17283951e-02 0.00000000e+00 2.61752137e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.50000000e-01 0.00000000e+00 4.16666667e-02 0.00000000e+00
 0.00000000e+00 5.34759358e-03 0.00000000e+00 0.00000000e+00
 1.33823073e-01 0.00000000e+00 0.00000000e+00 4.18052044e-03
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 5.88235294e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.49936672e-02 0.00000000e+00 1.25000000e-02 3.57142857e-02
 1.48032045e-03 0.00000000e+00 1.05263158e-02 7.50000000e-01
 2.03507220e-02 1.84782609e-02 0.00000000e+00 1.52380952e-01
 0.00000000e+00 0.00000000e+00 9.09090909e-02 1.14035088e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 4.48995772e-01
 5.00000000e-01 1.04925303e-01 0.00000000e+00 3.57142857e-02
 0.00000000e+00 0.00000000e+00 8.19964349e-03 9.39393939e-02
 6.56005653e-03 6.25000000e-02 2.50000000e-01 0.00000000e+00
 2.72727273e-01 0.00000000e+00 1.06968680e-01 8.19977568e-02
 0.00000000e+00 2.00000000e-02 1.40502174e-01 1.31752306e-03
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.41595100e-01
 1.47667104e-02 2.00161421e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 3.63636364e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 6.17353892e-03 1.23117623e-03 0.00000000e+00
 0.00000000e+00 5.36696200e-02 0.00000000e+00 0.00000000e+00
 4.60555070e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 4.32900433e-04 0.00000000e+00 0.00000000e+00
 1.03796325e-02 7.08333333e-02 2.46913580e-02 0.00000000e+00
 3.33333333e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.94381047e-04 0.00000000e+00 0.00000000e+00 1.44818262e-02
 2.54802565e-01 0.00000000e+00 1.13636364e-02 0.00000000e+00
 2.97619048e-03 0.00000000e+00 6.67474567e-02 0.00000000e+00
 1.40765766e-04 1.75847751e-02 0.00000000e+00 0.00000000e+00
 4.27437642e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.68000604e-03 6.25730994e-03
 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.96078431e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 4.98734603e-02
 0.00000000e+00 1.51098901e-01 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.00000000e-01 0.00000000e+00 0.00000000e+00
 2.96794618e-03 0.00000000e+00 3.45408955e-02 0.00000000e+00
 2.85714286e-02 1.55038760e-03 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.09643606e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 6.17283951e-02
 3.28177258e-02 8.06031016e-03 0.00000000e+00 0.00000000e+00
 1.35135135e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.32802399e-01 0.00000000e+00 4.41837519e-02 1.12233446e-03
 0.00000000e+00 8.33333333e-02 7.42158512e-02 1.04631768e-02
 0.00000000e+00 4.04040404e-02 0.00000000e+00 0.00000000e+00
 1.79211470e-03 2.55555556e-02 0.00000000e+00 8.97024421e-02
 1.05071408e-02 5.00000000e-02 0.00000000e+00 1.97447447e-02
 4.39174352e-02 0.00000000e+00 0.00000000e+00 1.81669196e-03
 1.66666667e-01 4.16666667e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 4.16666667e-02 0.00000000e+00 2.62729285e-01
 1.02879716e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.33386216e-02 2.04081633e-02 3.34534535e-01
 2.17864924e-03 0.00000000e+00 0.00000000e+00 8.36887842e-03
 1.41119401e-02 2.26039783e-03 3.52600235e-01 0.00000000e+00
 5.10252817e-02 0.00000000e+00 5.33698411e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.69491525e-02 0.00000000e+00
 3.60000000e-01 3.57142857e-02 1.01081453e-01 0.00000000e+00
 4.76190476e-04]
[RESULTS] Action detection results on goalstep_train_withID_subset.

|tIoU = 0.30: mAP = 3.33 (%) Recall@1x = 4.73 (%) Recall@5x = 5.92 (%) 
|tIoU = 0.40: mAP = 2.68 (%) Recall@1x = 3.95 (%) Recall@5x = 5.02 (%) 
|tIoU = 0.50: mAP = 1.90 (%) Recall@1x = 2.98 (%) Recall@5x = 3.91 (%) 
|tIoU = 0.60: mAP = 1.35 (%) Recall@1x = 2.20 (%) Recall@5x = 2.81 (%) 
|tIoU = 0.70: mAP = 0.64 (%) Recall@1x = 1.22 (%) Recall@5x = 1.67 (%) 
Average mAP: 1.98 (%)
All done! Total time: 53.86 sec
dataset_name None
> /home/ubuntu/slocal/ActionFormer/actionformer_release/train.py(279)main()
-> print("\nStart testing model {:s} ...".format(cfg['model_name']))
(Pdb) 
Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7ff2509a3e80>
feat_lens [9728, 4864, 2432, 1216, 608, 304]
self.buffer_points BufferList()
feat_len: 9728
buffer_pts.shape[0]: 4096
--Return--
> /home/ubuntu/slocal/ActionFormer/actionformer_release/train.py(281)main()->None
-> mAP, y = valid_one_epoch(
(Pdb) AssertionError: Reached max buffer length for point generator
> /home/ubuntu/slocal/ActionFormer/actionformer_release/train.py(326)<module>()
-> main(args)
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/actionformer_release/train.py(326)<module>()->None
-> main(args)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->"# python imp...e)[0], 'eval_"
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->"results.pkl'... main(args)\n"
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->"# python imp...e)[0], 'eval_"
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->"results.pkl'... main(args)\n"
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'import os\ni...(), model.sta'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'te_dict().va...er) \n\n     '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'from collect...in other Modu'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'les, allowin...e using `.dat'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'a =`,\n     ...mat`): the de'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'sired memory... if len(out_g'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'rad_fn) == 0...             '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'import opera...aParallel mod'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'from collect...in other Modu'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'les, allowin...e using `.dat'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'a =`,\n     ...mat`): the de'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'sired memory... if len(out_g'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'rad_fn) == 0...             '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'import math\... max_seq_len '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'% stride == ..., T\n        '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'from collect...in other Modu'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'les, allowin...e using `.dat'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'a =`,\n     ...mat`): the de'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'sired memory... if len(out_g'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'rad_fn) == 0...             '
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(309)__init__()
-> def __init__(self, errors='strict'):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(310)__init__()
-> IncrementalDecoder.__init__(self, errors)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(260)__init__()
-> def __init__(self, errors='strict'):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(268)__init__()->None
-> self.errors = errors
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()
-> self.buffer = b""
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(312)__init__()->None
-> self.buffer = b""
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(331)getstate()
-> def getstate(self):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()
-> return (self.buffer, 0)
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(333)getstate()->(b'', 0)
-> return (self.buffer, 0)
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(319)decode()
-> def decode(self, input, final=False):
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(321)decode()
-> data = self.buffer + input
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(322)decode()
-> (result, consumed) = self._buffer_decode(data, self.errors, final)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(324)decode()
-> self.buffer = data[consumed:]
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()
-> return result
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/codecs.py(325)decode()->'import torch...turn pts_list'
-> return result
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1355)_shutdown()
-> def _shutdown():
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1364)_shutdown()
-> if _main_thread._is_stopped:
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1369)_shutdown()
-> tlock = _main_thread._tstate_lock
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1372)_shutdown()
-> assert tlock is not None
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1373)_shutdown()
-> assert tlock.locked()
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1374)_shutdown()
-> tlock.release()
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1375)_shutdown()
-> _main_thread._stop()
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(944)_stop()
-> def _stop(self):
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(968)_stop()->None
-> _shutdown_locks.discard(lock)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1379)_shutdown()
-> with _shutdown_locks_lock:
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1380)_shutdown()
-> locks = list(_shutdown_locks)
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1381)_shutdown()
-> _shutdown_locks.clear()
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1383)_shutdown()
-> if not locks:
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1384)_shutdown()
-> break
(Pdb) --Return--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/threading.py(1384)_shutdown()->None
-> break
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(587)_cleanup()
-> def _cleanup():
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(596)_cleanup()
-> delete_folder = __import__(
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(597)_cleanup()
-> pool_module_name, fromlist=['delete_folder']
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(596)_cleanup()
-> delete_folder = __import__(
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(599)_cleanup()
-> try:
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(600)_cleanup()
-> delete_folder(pool_subfolder, allow_non_empty=True)
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/disk.py(105)delete_folder()
-> def delete_folder(folder_path, onerror=None, allow_non_empty=True):
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/disk.py(123)delete_folder()->None
-> break
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(601)_cleanup()
-> resource_tracker.unregister(pool_subfolder, "folder")
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/externals/loky/backend/resource_tracker.py(181)unregister()
-> def unregister(self, name, rtype):
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/externals/loky/backend/resource_tracker.py(184)unregister()->None
-> self._send("UNREGISTER", name, rtype)
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(601)_cleanup()->None
-> resource_tracker.unregister(pool_subfolder, "folder")
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(587)_cleanup()
-> def _cleanup():
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(596)_cleanup()
-> delete_folder = __import__(
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(597)_cleanup()
-> pool_module_name, fromlist=['delete_folder']
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(596)_cleanup()
-> delete_folder = __import__(
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(599)_cleanup()
-> try:
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(600)_cleanup()
-> delete_folder(pool_subfolder, allow_non_empty=True)
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/disk.py(105)delete_folder()
-> def delete_folder(folder_path, onerror=None, allow_non_empty=True):
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/disk.py(123)delete_folder()->None
-> break
(Pdb) > /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(601)_cleanup()
-> resource_tracker.unregister(pool_subfolder, "folder")
(Pdb) --Call--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/externals/loky/backend/resource_tracker.py(181)unregister()
-> def unregister(self, name, rtype):
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/externals/loky/backend/resource_tracker.py(184)unregister()->None
-> self._send("UNREGISTER", name, rtype)
(Pdb) --Return--
> /home/ubuntu/slocal/ActionFormer/.venv/lib/python3.8/site-packages/joblib/_memmapping_reducer.py(601)_cleanup()->None
-> resource_tracker.unregister(pool_subfolder, "folder")
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/concurrent/futures/process.py(97)_python_exit()
-> def _python_exit():
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/concurrent/futures/process.py(99)_python_exit()
-> _global_shutdown = True
(Pdb) > /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/concurrent/futures/process.py(100)_python_exit()
-> items = list(_threads_wakeups.items())
(Pdb) --Call--
> /home/ubuntu/.pyenv/versions/3.8.0/lib/python3.8/weakref.py(429)items()
-> def items(self):
(Pdb) 