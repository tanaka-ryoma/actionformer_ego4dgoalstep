/home/ubuntu/slocal/ActionFormer/.venv/bin/python
running install
running bdist_egg
running egg_info
writing nms_1d_cpu.egg-info/PKG-INFO
writing dependency_links to nms_1d_cpu.egg-info/dependency_links.txt
writing top-level names to nms_1d_cpu.egg-info/top_level.txt
reading manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
writing manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.8/nms_1d_cpu.cpython-38-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for nms_1d_cpu.cpython-38-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/nms_1d_cpu.py to nms_1d_cpu.cpython-38.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
creating 'dist/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
removing '/home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' (and everything under it)
creating /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Extracting nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg to /home/ubuntu/.local/lib/python3.8/site-packages
nms-1d-cpu 0.0.0 is already the active version in easy-install.pth

Installed /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Processing dependencies for nms-1d-cpu==0.0.0
Finished processing dependencies for nms-1d-cpu==0.0.0
{'dataset': {'crop_ratio': [0.9, 1.0],
             'default_fps': 30,
             'downsample_rate': 1,
             'feat_folder': './v2/omnivore_video_swinl',
             'feat_stride': 16,
             'file_ext': '.pt',
             'file_prefix': None,
             'force_upsampling': False,
             'input_dim': 1536,
             'max_seq_len': 1024,
             'num_classes': 454,
             'num_frames': 32,
             'train_json_file': './goalstep_train_withID_subset.json',
             'trunc_thresh': 0.5,
             'val_json_file': './goalstep_val_withID_subset.json'},
 'dataset_name': 'ego4d_goalstep',
 'devices': ['cuda:0'],
 'init_rand_seed': 1234567891,
 'loader': {'batch_size': 8, 'num_workers': 4},
 'model': {'backbone_arch': [2, 2, 7],
           'backbone_type': 'convTransformer',
           'embd_dim': 512,
           'embd_kernel_size': 3,
           'embd_with_ln': True,
           'fpn_dim': 512,
           'fpn_start_level': 0,
           'fpn_type': 'identity',
           'fpn_with_ln': True,
           'head_dim': 512,
           'head_kernel_size': 3,
           'head_num_layers': 3,
           'head_with_ln': True,
           'input_dim': 1536,
           'max_buffer_len_factor': 4.0,
           'max_seq_len': 1024,
           'n_head': 4,
           'n_mha_win_size': 9,
           'num_classes': 454,
           'regression_range': [[0, 4],
                                [2, 8],
                                [4, 16],
                                [8, 32],
                                [16, 64],
                                [32, 128],
                                [64, 256],
                                [128, 10000]],
           'scale_factor': 2,
           'test_cfg': {'duration_thresh': 0.05,
                        'ext_score_file': None,
                        'iou_threshold': 0.1,
                        'max_seg_num': 2000,
                        'min_score': 0.001,
                        'multiclass_nms': True,
                        'nms_method': 'soft',
                        'nms_sigma': 0.9,
                        'pre_nms_thresh': 0.001,
                        'pre_nms_topk': 5000,
                        'voting_thresh': 0.95},
           'train_cfg': {'center_sample': 'radius',
                         'center_sample_radius': 1.5,
                         'clip_grad_l2norm': 1.0,
                         'cls_prior_prob': 0.01,
                         'dropout': 0.0,
                         'droppath': 0.1,
                         'head_empty_cls': [],
                         'init_loss_norm': 100,
                         'label_smoothing': 0.0,
                         'loss_weight': 1.0},
           'use_abs_pe': True,
           'use_rel_pe': False},
 'model_name': 'LocPointTransformer',
 'opt': {'epochs': 40,
         'learning_rate': 0.00011,
         'momentum': 0.9,
         'schedule_gamma': 0.1,
         'schedule_steps': [],
         'schedule_type': 'cosine',
         'type': 'AdamW',
         'warmup': True,
         'warmup_epochs': 10,
         'weight_decay': 0.0},
 'output_folder': './ckpt/',
 'test_cfg': {'duration_thresh': 0.05,
              'ext_score_file': None,
              'iou_threshold': 0.1,
              'max_seg_num': 2000,
              'min_score': 0.001,
              'multiclass_nms': True,
              'nms_method': 'soft',
              'nms_sigma': 0.9,
              'pre_nms_thresh': 0.001,
              'pre_nms_topk': 5000,
              'voting_thresh': 0.95},
 'train_cfg': {'center_sample': 'radius',
               'center_sample_radius': 1.5,
               'clip_grad_l2norm': 1.0,
               'cls_prior_prob': 0.01,
               'dropout': 0.0,
               'droppath': 0.1,
               'head_empty_cls': [],
               'init_loss_norm': 100,
               'label_smoothing': 0.0,
               'loss_weight': 1.0},
 'train_split': ['train'],
 'val_split': ['val']}
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_train_withID_subset.json
dict_db[labels] [ 44 304 217 201  88 430  88  72  88 436  88  72  88  91 411 209  88 424
  88 247  80  91 411  88  80  88  91  88 354  88 209 411 121 105  88 411
   8  88 436]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7f8811edd7c0>
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_val_withID_subset.json
dict_db[labels] [ 47  80 447  49 166   9 338 447 166  47 166  93  47 392  80 166  47 338
 338 281 370 183  47 447 232 325 116  80 166  93 166  47 116  36  80 166
  80 166  80 181  80 119 213  82 346 338  47 388 137 294 383 183 311  80
 166 166 389 330 338 447  70]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7f8811edda30>
PtTransformerClsHead
PtTransformerRegHead
Using model EMA ...

Start training model LocPointTransformer ...
yes
train
dataset_name None
activity_index {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 34: 33, 35: 34, 36: 35, 37: 36, 38: 37, 39: 38, 40: 39, 41: 40, 42: 41, 43: 42, 44: 43, 45: 44, 46: 45, 47: 46, 48: 47, 49: 48, 50: 49, 51: 50, 52: 51, 53: 52, 54: 53, 55: 54, 57: 55, 58: 56, 59: 57, 60: 58, 61: 59, 62: 60, 63: 61, 64: 62, 65: 63, 66: 64, 67: 65, 68: 66, 69: 67, 70: 68, 71: 69, 72: 70, 73: 71, 74: 72, 75: 73, 76: 74, 77: 75, 78: 76, 79: 77, 80: 78, 81: 79, 82: 80, 83: 81, 84: 82, 85: 83, 86: 84, 87: 85, 88: 86, 89: 87, 90: 88, 91: 89, 92: 90, 93: 91, 94: 92, 95: 93, 96: 94, 97: 95, 98: 96, 99: 97, 100: 98, 102: 99, 103: 100, 104: 101, 105: 102, 106: 103, 107: 104, 108: 105, 109: 106, 110: 107, 112: 108, 113: 109, 114: 110, 115: 111, 116: 112, 117: 113, 119: 114, 120: 115, 121: 116, 122: 117, 123: 118, 124: 119, 125: 120, 126: 121, 127: 122, 128: 123, 129: 124, 130: 125, 131: 126, 132: 127, 133: 128, 134: 129, 135: 130, 136: 131, 137: 132, 138: 133, 139: 134, 140: 135, 141: 136, 142: 137, 143: 138, 144: 139, 145: 140, 146: 141, 147: 142, 148: 143, 149: 144, 150: 145, 151: 146, 152: 147, 153: 148, 154: 149, 155: 150, 156: 151, 157: 152, 158: 153, 159: 154, 160: 155, 161: 156, 162: 157, 163: 158, 164: 159, 165: 160, 166: 161, 167: 162, 168: 163, 169: 164, 170: 165, 171: 166, 172: 167, 173: 168, 174: 169, 175: 170, 176: 171, 177: 172, 178: 173, 179: 174, 180: 175, 181: 176, 182: 177, 183: 178, 184: 179, 185: 180, 186: 181, 187: 182, 188: 183, 189: 184, 190: 185, 191: 186, 192: 187, 193: 188, 194: 189, 195: 190, 196: 191, 197: 192, 199: 193, 200: 194, 201: 195, 202: 196, 203: 197, 204: 198, 205: 199, 207: 200, 208: 201, 209: 202, 210: 203, 211: 204, 212: 205, 213: 206, 214: 207, 215: 208, 216: 209, 217: 210, 218: 211, 219: 212, 220: 213, 221: 214, 222: 215, 223: 216, 224: 217, 225: 218, 226: 219, 228: 220, 229: 221, 230: 222, 231: 223, 232: 224, 233: 225, 234: 226, 235: 227, 236: 228, 237: 229, 238: 230, 239: 231, 240: 232, 241: 233, 242: 234, 244: 235, 245: 236, 246: 237, 247: 238, 248: 239, 249: 240, 250: 241, 251: 242, 252: 243, 253: 244, 254: 245, 255: 246, 256: 247, 257: 248, 258: 249, 259: 250, 260: 251, 261: 252, 262: 253, 263: 254, 264: 255, 265: 256, 266: 257, 267: 258, 268: 259, 269: 260, 270: 261, 271: 262, 273: 263, 274: 264, 275: 265, 276: 266, 277: 267, 278: 268, 279: 269, 280: 270, 281: 271, 282: 272, 283: 273, 284: 274, 285: 275, 286: 276, 287: 277, 288: 278, 289: 279, 290: 280, 291: 281, 292: 282, 293: 283, 294: 284, 295: 285, 296: 286, 297: 287, 298: 288, 299: 289, 300: 290, 301: 291, 302: 292, 303: 293, 304: 294, 305: 295, 306: 296, 307: 297, 309: 298, 310: 299, 311: 300, 312: 301, 313: 302, 314: 303, 315: 304, 316: 305, 317: 306, 318: 307, 319: 308, 320: 309, 321: 310, 322: 311, 323: 312, 324: 313, 325: 314, 326: 315, 327: 316, 328: 317, 329: 318, 330: 319, 331: 320, 332: 321, 333: 322, 334: 323, 335: 324, 336: 325, 337: 326, 338: 327, 339: 328, 340: 329, 341: 330, 342: 331, 343: 332, 344: 333, 345: 334, 346: 335, 347: 336, 348: 337, 349: 338, 350: 339, 351: 340, 352: 341, 354: 342, 355: 343, 356: 344, 357: 345, 358: 346, 359: 347, 360: 348, 361: 349, 362: 350, 363: 351, 364: 352, 365: 353, 366: 354, 367: 355, 368: 356, 369: 357, 370: 358, 371: 359, 372: 360, 373: 361, 374: 362, 375: 363, 376: 364, 377: 365, 378: 366, 379: 367, 380: 368, 381: 369, 382: 370, 383: 371, 384: 372, 385: 373, 386: 374, 387: 375, 388: 376, 389: 377, 390: 378, 391: 379, 392: 380, 393: 381, 394: 382, 395: 383, 396: 384, 397: 385, 398: 386, 399: 387, 400: 388, 401: 389, 402: 390, 403: 391, 404: 392, 405: 393, 406: 394, 407: 395, 408: 396, 409: 397, 410: 398, 411: 399, 412: 400, 413: 401, 414: 402, 415: 403, 416: 404, 417: 405, 418: 406, 419: 407, 420: 408, 421: 409, 422: 410, 423: 411, 424: 412, 425: 413, 426: 414, 428: 415, 429: 416, 430: 417, 431: 418, 432: 419, 433: 420, 434: 421, 435: 422, 436: 423, 437: 424, 438: 425, 439: 426, 440: 427, 441: 428, 442: 429, 443: 430, 444: 431, 445: 432, 446: 433, 447: 434, 448: 435, 449: 436, 450: 437, 451: 438, 452: 439, 453: 440}
gound_truth 0         44
1        304
2        217
3        201
4         88
        ... 
13337    254
13338    380
13339    408
13340    415
13341    436
Name: label, Length: 13342, dtype: int64
gound_truth 0         43
1        294
2        210
3        195
4         86
        ... 
13337    245
13338    368
13339    396
13340    403
13341    423
Name: label, Length: 13342, dtype: int64
gound_truth                                    video-id      t-start        t-end  label
0      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1069.34800   1298.59400     43
1      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1298.66082   1327.09850    294
2      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1381.06481   1383.41099    210
3      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1384.24600   1404.91851    195
4      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1410.80762   1430.91046     86
...                                     ...          ...          ...    ...
13337  3e057cdc-bf48-4090-81d6-b66bb18542e7  17552.33613  17559.34967    245
13338  3e057cdc-bf48-4090-81d6-b66bb18542e7  17559.34967  17567.20658    368
13339  3e057cdc-bf48-4090-81d6-b66bb18542e7  17567.20658  17583.35754    396
13340  3e057cdc-bf48-4090-81d6-b66bb18542e7  17583.35754  17599.04962    403
13341  3e057cdc-bf48-4090-81d6-b66bb18542e7  17622.51034  17690.55467    423

[13342 rows x 4 columns]

[Train]: Epoch 0 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167,
        431, 268, 415,  22,  50, 268,  50], device='cuda:0'), tensor([249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([ 88, 298,  16, 298,  73,  71], device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220,
        181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357,
        431, 137, 220, 220, 357, 431, 220], device='cuda:0'), tensor([436, 240], device='cuda:0')]
yes3 {'cls_loss': tensor(3.9542, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(3.4368, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(7.3911, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146, 325, 146, 345],
       device='cuda:0'), tensor([ 61, 253, 313], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([295,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(2.3531, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.9674, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.3205, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443],
       device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([388, 354, 392], device='cuda:0'), tensor([223, 223, 144, 223, 223], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([439], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9645, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6904, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.6549, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0,   7],
       device='cuda:0'), tensor([224, 246, 224, 316, 195,  50, 451, 251,  22], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([ 50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0'), tensor([245, 385,  82, 188, 294,  30, 254], device='cuda:0')]
yes3 {'cls_loss': tensor(2.3775, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(2.0432, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.4207, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,
         21,  21, 224], device='cuda:0'), tensor([338, 338, 354, 215, 311, 388, 133, 133, 303, 345, 146,   5],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8854, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5921, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.4775, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 302, 305, 217, 305, 402, 305, 149, 302,  72, 196,  43, 402, 305,
        128, 236, 128], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([338, 338, 338,  36, 354, 389,  93,  36,  36, 116, 116],
       device='cuda:0'), tensor([ 87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8157, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5480, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.3637, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([279, 121, 415, 345, 309, 279, 309, 299,  32,  93, 121],
       device='cuda:0'), tensor([183,  80, 116, 116, 116, 116, 116], device='cuda:0'), tensor([315,  73, 401, 441, 451, 305, 451, 121, 315, 451], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7244, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.4385, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.1629, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141], device='cuda:0'), tensor([412, 354, 412, 412, 354, 138, 398, 256, 412, 412, 412, 354, 412, 138,
        398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412,
        138, 398, 256, 412, 412, 412, 354, 412, 354, 412, 138, 398, 256, 412,
        412, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412, 138, 398, 256,
        412, 412, 412, 411, 412, 411, 138, 429, 398, 429, 412, 411, 412, 354],
       device='cuda:0'), tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93, 396,  50],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([244, 409, 346], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(2.2200, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.9471, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.1672, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([384, 436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([436], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([155,  22, 159, 159, 120, 415, 430, 257,  31,  49,  24,  49],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0409, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8711, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9120, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 16, 436,  16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([294,  15,  15,  15], device='cuda:0'), tensor([232, 388, 232, 116, 116, 138, 294, 362], device='cuda:0'), tensor([340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121, 441,
        401], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4857, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2987, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.7844, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166, 294], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([134, 301, 294,  71,  79, 294,  82], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 83,  16,  22, 215, 441, 415], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 268, 268, 268], device='cuda:0'), tensor([443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9612, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6787, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.6398, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00010/00055]	Time 1.09 (1.09)	Loss 3.64 (3.64)
		cls_loss 1.96 (1.96)	reg_loss 1.68 (1.68)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([113, 301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113,
        150, 292, 415,  22], device='cuda:0'), tensor([100, 385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223,
        121, 100, 436, 366], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([9], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8441, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5815, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.4256, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121],
       device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([298,  14], device='cuda:0'), tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0791, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3303, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187,  96, 108,  96, 294,  96, 385,  50], device='cuda:0'), tensor([  8, 404,  47, 435, 124, 447, 335,  82, 320], device='cuda:0'), tensor([337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270],
       device='cuda:0'), tensor([121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([ 93, 351,  93, 295, 351, 325, 295, 351, 351], device='cuda:0'), tensor([283,  46, 108, 209, 338, 401], device='cuda:0'), tensor([415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10],
       device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5252, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2709, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.7961, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([334,  22, 121], device='cuda:0'), tensor([184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([294, 294, 430, 127,  44,  63, 234], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282], device='cuda:0'), tensor([148], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9219, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7796, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7016, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([408], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0751, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9231, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9983, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([431, 137, 431,   9], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330], device='cuda:0'), tensor([244], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([220], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7009, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2479, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([305, 292, 305, 399, 363], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([4], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([294, 399, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9205, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6429, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,
         50,  50], device='cuda:0'), tensor([351,  82, 215, 440], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([279, 441], device='cuda:0'), tensor([423,  83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408,
        436], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0074, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2260, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([ 80,  80, 443,  93, 166], device='cuda:0'), tensor([255], device='cuda:0'), tensor([430], device='cuda:0'), tensor([283, 329, 301, 283, 301, 283,  72, 121], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6340, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1456, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([ 44, 304], device='cuda:0'), tensor([134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313, 313,
        447, 138,  93], device='cuda:0'), tensor([ 57,  93, 441], device='cuda:0'), tensor([ 46,  10, 415,   9,   9, 436], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1275, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8889, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0163, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00020/00055]	Time 0.97 (1.03)	Loss 2.02 (2.83)
		cls_loss 1.13 (1.54)	reg_loss 0.89 (1.28)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,
         37, 424,  37, 411, 411], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([158], device='cuda:0'), tensor([436, 175, 436,  10, 436,  10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3559, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0893, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4452, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 9, 15], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([283,  91, 105,  91], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([ 22, 276, 453, 416, 424, 181, 445], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8, 395, 205,
        326, 395,  85, 417, 159], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4901, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1399, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6301, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([ 88, 100,  88,  99,  88, 187,  88,  88], device='cuda:0'), tensor([119, 161, 399, 161, 279, 431, 363, 161, 431, 436,  82,  93,  93, 161,
         48, 122,  83, 120, 385, 159, 286, 199, 447,  93,  71,  93, 315, 315,
        447], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3964, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1336, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5299, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([ 15, 436, 225, 108], device='cuda:0'), tensor([437, 386, 385, 121, 166,  93, 120, 424], device='cuda:0'), tensor([223,  93, 305, 223, 305, 399, 305, 223, 305], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1879, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9204, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1083, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([294, 436, 136, 100], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([332,  93, 436, 215,  83], device='cuda:0'), tensor([183, 354, 330,  80,  80, 338,  80,  47, 354], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([399, 121, 294], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5069, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 301], device='cuda:0'), tensor([  9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314, 407,
         85, 314], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.7013, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2889, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.9902, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 72, 415, 108], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([52], device='cuda:0'), tensor([359, 436, 359, 441, 359, 203, 359, 279], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7851, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5692, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3543, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([271, 121, 316], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([399, 384, 270, 241, 415, 430, 294, 223, 223,  82, 248, 138, 164, 147,
         93,  25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421],
       device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407, 333,
        121], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8611, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.3756, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.2367, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397,
        249, 394], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 11, 441, 249], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0363, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7760, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8123, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([443, 438, 305, 438, 305,  44, 305, 443, 434, 438], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421], device='cuda:0'), tensor([2, 2, 2, 2], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([268,  37, 268, 348, 268], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8875, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0638, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00030/00055]	Time 0.38 (0.82)	Loss 2.06 (2.57)
		cls_loss 1.18 (1.42)	reg_loss 0.89 (1.15)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([204, 143, 302, 180], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([225], device='cuda:0'), tensor([181, 205, 436, 345,  30, 443], device='cuda:0'), tensor([ 80,  51, 238,  47, 404, 388,  36, 302, 209, 121,  23, 121,  82,   1,
         47, 116, 256, 354,  47,  36], device='cuda:0'), tensor([398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0829, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8408, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9237, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387, 385, 215],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9505, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6861, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6366, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([121, 437, 124,   9, 437, 120, 437,  90, 413,  90, 413,  90, 437],
       device='cuda:0'), tensor([447, 436, 246, 436,  82], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([423, 423, 333], device='cuda:0'), tensor([ 58, 333], device='cuda:0'), tensor([ 43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159],
       device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0599, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7399, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7998, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 22, 319, 234, 319, 339, 402], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4134, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9751, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3885, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87, 279,
        437, 150, 294, 437, 108, 219], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([437, 385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399, 437,
         50], device='cuda:0'), tensor([ 87,  91,  63, 305, 363, 305, 187], device='cuda:0'), tensor([295], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0741, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6727, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7469, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([334, 436, 408], device='cuda:0'), tensor([256], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415,
        100], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2061, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8163, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0224, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([451], device='cuda:0'), tensor([392,  47, 392, 436, 392], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([362], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5239, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2817, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420,
        451], device='cuda:0'), tensor([441, 225, 108, 305, 285, 305, 441, 225, 418], device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([ 71, 385,  62, 451,  62, 451, 264, 233], device='cuda:0'), tensor([256], device='cuda:0'), tensor([351,  96, 121, 351, 217, 351, 217, 305,  32, 305, 438, 215,  95],
       device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2351, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8085, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0436, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([174, 256, 174, 256], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121],
       device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6247, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4322, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0570, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 283], device='cuda:0'), tensor([256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([108, 348, 354], device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([201, 195, 442, 121, 442, 451, 279, 442,  93, 345, 437],
       device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3544, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8782, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2326, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00040/00055]	Time 0.32 (0.69)	Loss 2.23 (2.49)
		cls_loss 1.35 (1.40)	reg_loss 0.88 (1.08)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([433, 356], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([295], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1663, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7405, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9068, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 31, 436, 200, 208, 121, 264, 336, 436, 305], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181, 296],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([399, 216], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0000, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6534, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6534, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408,
        415], device='cuda:0'), tensor([100, 262, 100, 430, 384, 262, 339,  31, 445], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([292,  16, 292,  49,  16,  96, 215,  49, 215, 302, 357, 399,  16, 401,
         96, 399, 302, 294, 121,  16, 201, 217], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0'), tensor([ 88, 229], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6177, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9993, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6170, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 354, 256, 100], device='cuda:0'), tensor([366,  10], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([285, 301, 121,  44, 105, 345,  44,  63, 446,  44, 152, 437,  44, 436],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([50], device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1651, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6890, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8541, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285, 405, 294,
         21], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([121,   9,  12, 425,  63, 165], device='cuda:0'), tensor([268], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19, 121, 137], device='cuda:0'), tensor([82], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0738, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6337, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7075, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  18, 215, 345, 215], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([332, 332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([398], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181, 382, 315,
        181, 315, 181, 315], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1169, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6561, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7730, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([37], device='cuda:0'), tensor([385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438, 441],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([405, 258, 430, 411, 108, 451, 399], device='cuda:0'), tensor([249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9564, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5578, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5142, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147], device='cuda:0'), tensor([21], device='cuda:0'), tensor([268, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268,
        146, 411], device='cuda:0'), tensor([ 71, 390, 453,  93, 393, 100, 393, 385, 393, 305, 393, 305],
       device='cuda:0'), tensor([120,  98, 451, 121], device='cuda:0'), tensor([146], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436], device='cuda:0'), tensor([312,  37,  82,  90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90,
        316, 286, 121, 436, 286, 316, 143, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5606, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8227, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3834, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([], device='cuda:0', dtype=torch.int64), tensor([415, 163], device='cuda:0'), tensor([439], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332,
        269], device='cuda:0'), tensor([90], device='cuda:0'), tensor([146,  83, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6979, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3547, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0526, device='cuda:0', grad_fn=<AddBackward0>)}yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([1633, 1536])yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([1090, 1536])yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([947, 1536])yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([3375, 1536])
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([219], device='cuda:0'), tensor([296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325, 183],
       device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([130, 100, 284, 197, 214, 294, 391, 120], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([146, 146, 182, 392, 146, 146], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0167, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5624, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00050/00055]	Time 0.32 (0.62)	Loss 1.56 (2.30)
		cls_loss 1.02 (1.33)	reg_loss 0.55 (0.98)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([436, 383,  50], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4535, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2539, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7075, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  8, 199,  85, 408, 408, 249, 302, 121, 294, 121, 453,  71, 408],
       device='cuda:0'), tensor([ 93, 166], device='cuda:0'), tensor([15], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9], device='cuda:0'), tensor([121, 312, 121,  50,  10], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7831, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4071, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1902, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([137,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([ 30, 173], device='cuda:0'), tensor([408], device='cuda:0'), tensor([242, 415, 121, 242, 242], device='cuda:0'), tensor([313, 181,  82, 181,  82, 181,  82], device='cuda:0'), tensor([65], device='cuda:0'), tensor([319, 319], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6979, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3734, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0712, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([451, 451, 319], device='cuda:0'), tensor([384,  11,  43,  32, 309, 429, 451, 215, 177, 294], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85,
        293,  84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(2.0998, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0397, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.1395, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 0 finished with lr=0.00000541


[Train]: Epoch 1 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 362], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([268, 146, 411, 268,  73, 268, 411, 268, 146, 430, 411, 268, 105, 268,
        280, 268, 411, 268, 280, 268,  72, 329], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([248, 340, 236, 121, 312], device='cuda:0'), tensor([ 49, 122,  37,  37, 217, 329,  37, 282, 121,  37, 447, 385, 407,  95],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.6287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7809, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4096, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([316, 142, 249, 142], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([121, 351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385],
       device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 80,  80, 450], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0867, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6073, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394], device='cuda:0'), tensor([407, 385, 436, 407, 436, 407, 407, 314, 407,  85, 314,  95,  50,   9],
       device='cuda:0'), tensor([398,  82, 256, 315, 256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([215, 225, 424, 225, 215,  91,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0803, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5003, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5805, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([90], device='cuda:0'), tensor([187,  96, 108,  96, 294,  96, 385], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([408, 408, 383, 415, 279, 408, 408, 415, 383, 399, 399, 383],
       device='cuda:0'), tensor([256, 388,  47, 256, 195, 109, 325, 195, 325, 325, 257, 354,  47,  23],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2196, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5741, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7937, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2546, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5732, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8277, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([ 83, 405, 302], device='cuda:0'), tensor([223, 223, 144, 223, 223], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4218, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3560, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([363, 451], device='cuda:0'), tensor([ 63, 142, 224, 279, 136, 121, 224, 451, 309], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([408, 216, 447], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3545, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1638, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([441, 415, 441,  49, 408], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([399, 408,  50, 399], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 129, 100], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3846, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6111, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9957, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([399, 121, 294], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([231, 196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302,
        305, 217, 305, 402], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1805, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5077, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6882, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 402], device='cuda:0'), tensor([187], device='cuda:0'), tensor([423, 423, 333], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([137, 256, 256, 256, 256], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6820, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3072, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9892, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47,  9], device='cuda:0'), tensor([142,  80, 114,  80], device='cuda:0'), tensor([316, 436, 316], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([89], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7970, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3423, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1393, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00010/00055]	Time 0.36 (0.36)	Loss 1.14 (1.14)
		cls_loss 0.80 (0.80)	reg_loss 0.34 (0.34)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([  4, 134,   4, 358], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([244], device='cuda:0'), tensor([244, 409, 346], device='cuda:0'), tensor([80], device='cuda:0'), tensor([439, 436], device='cuda:0'), tensor([247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417, 411, 417, 417,
        417, 314, 417, 417, 417, 436, 417, 150], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8698, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 436], device='cuda:0'), tensor([244], device='cuda:0'), tensor([120, 453,  44,  87, 436, 405, 100, 385, 436,  93, 291, 121, 291, 121,
        115, 436,  10, 357, 296, 223], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0966, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4540, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5505, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 383, 430], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121],
       device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6874, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7118, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3992, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([ 93, 441], device='cuda:0'), tensor([4], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8091, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3277, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1368, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316], device='cuda:0'), tensor([256], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([181], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([196, 286, 231, 385, 286, 385, 437, 166, 286, 238,  31, 437],
       device='cuda:0'), tensor([354, 121, 108], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8174, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2970, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1144, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  37], device='cuda:0'), tensor([431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([441,  32, 315,  90, 305, 451,  73, 121,  44,  73, 315],
       device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121],
       device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([270, 351,  82, 215, 440], device='cuda:0'), tensor([383, 383, 430, 319, 319, 120, 319], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3788, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5485, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9273, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380], device='cuda:0'), tensor([150, 150, 302,  85, 302, 363, 385, 247, 294, 217, 436],
       device='cuda:0'), tensor([394, 255, 394, 217], device='cuda:0'), tensor([220], device='cuda:0'), tensor([319, 121, 316,  15, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6265, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6376, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2641, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,  83, 270, 415,
         49, 301, 119, 430, 336,  93, 301, 387, 290, 301, 283, 210, 225],
       device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([ 50,  85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302,
        357, 399], device='cuda:0'), tensor([357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([  9, 327, 325,  63,  47,  47,  93,  23, 443,  49,  47],
       device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7734, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7063, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4797, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([359, 203, 359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359, 415,
        138,  50, 294], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([166, 385, 378, 388, 302,  80, 116,  80,  80], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([315,  93, 244, 432], device='cuda:0'), tensor([100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285, 213, 430,
        183, 388, 338, 281, 116, 138], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4078, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5583, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9661, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([182, 392,   5, 146, 182], device='cuda:0'), tensor([399], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190,
        357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([354, 447, 401, 399, 121], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1600, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4362, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5962, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00020/00055]	Time 0.31 (0.33)	Loss 1.60 (1.37)
		cls_loss 1.16 (0.98)	reg_loss 0.44 (0.39)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 87,  91,  63, 305, 363, 305, 187], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 411, 412, 411,
        138, 429, 398, 429, 412, 411, 412, 354, 412, 138, 256, 398, 354, 412,
        256, 412, 412, 354, 412, 412, 354, 412, 138, 256, 398, 256, 412, 412,
        354, 412, 354, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412, 138,
        398, 256, 412, 412, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138,
        398, 354, 412, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0838, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8445, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.9283, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([268], device='cuda:0'), tensor([283], device='cuda:0'), tensor([128,  93, 215, 141, 294, 399, 135, 307, 400], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2585, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8881, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 447, 294, 392, 100], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([ 22, 121], device='cuda:0'), tensor([ 83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436,
        399], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3428, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1810, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 232, 388, 232, 388, 232], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([  5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5,
        392,  50, 268, 268, 392, 268, 268, 268,   5, 392, 268, 268, 268, 268,
          5, 268, 268], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([313], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5040, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0881, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430], device='cuda:0'), tensor([345], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436,
        124, 223, 196], device='cuda:0'), tensor([417], device='cuda:0'), tensor([146, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7463, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2840, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0303, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181, 205],
       device='cuda:0'), tensor([451, 176, 176, 176, 176, 176], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7012, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2723, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9735, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105,  31], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([397, 385, 302, 286], device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([451, 121, 305, 424, 305], device='cuda:0'), tensor([15], device='cuda:0'), tensor([382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9506, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3669, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3175, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 447, 402,  50], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436],
       device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 47, 404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47, 116, 256,
        354,  47,  36, 354, 183,  36], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2830, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4956, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7786, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([279, 442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436],
       device='cuda:0'), tensor([345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163],
       device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([201, 121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2298, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7140, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([258, 296, 408, 110, 197], device='cuda:0'), tensor([ 80,  88,  91,  88, 354,  88, 209], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2136, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4807, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6942, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00030/00055]	Time 0.31 (0.33)	Loss 1.69 (1.48)
		cls_loss 1.21 (1.06)	reg_loss 0.48 (0.42)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([256], device='cuda:0'), tensor([131,  22], device='cuda:0'), tensor([ 63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445],
       device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254, 254],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8477, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3242, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1719, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 88, 298,  16, 298,  73,  71], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([294, 196, 215], device='cuda:0'), tensor([351,  63,  80, 351, 121], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1003, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4260, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5263, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([371, 201,  90], device='cuda:0'), tensor([121, 262, 100, 262, 100, 430, 384, 262, 339], device='cuda:0'), tensor([ 93,  93, 385, 121, 430, 430, 437, 386, 437, 386], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2747, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0095, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 85, 292, 385, 155, 131], device='cuda:0'), tensor([142, 142], device='cuda:0'), tensor([417, 159,  31, 121, 114, 326, 224, 224, 305], device='cuda:0'), tensor([438, 213,  80, 121, 423, 294,  63,  22, 127, 325], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([ 93, 267], device='cuda:0'), tensor([294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,  95, 436],
       device='cuda:0'), tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116, 263],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2043, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4776, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6819, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([ 21,  32,  95, 415], device='cuda:0'), tensor([ 93, 191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32,
        215], device='cuda:0'), tensor([285, 108, 441, 247], device='cuda:0'), tensor([120, 453], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1757, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6429, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270],
       device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([402, 181, 181, 181, 181, 181, 181, 296, 181, 219, 424, 181],
       device='cuda:0'), tensor([366,  10], device='cuda:0'), tensor([256], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3423, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5202, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8625, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([416, 424, 181, 445, 236, 181, 236, 181, 107, 181, 352],
       device='cuda:0'), tensor([406,  11, 441], device='cuda:0'), tensor([295, 295, 295, 195, 295], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215, 409],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8672, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3431, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2103, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310, 310], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([294, 249,  80], device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 369, 174],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([ 47, 443,  93,  19, 389,  47, 200,  49,  49, 138, 194, 388],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3125, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5068, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8192, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 313, 181,  82, 181,  82, 181,  82], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([ 36,  88, 404, 116, 392, 116,  47], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147, 224, 217], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,  30,  21, 286,
         21, 286, 105,  95, 273], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0870, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4086, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4955, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([173, 125, 341], device='cuda:0'), tensor([415, 385, 441, 301, 385, 399, 441, 301], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332],
       device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([305, 354, 385, 354, 100, 121, 404,  93, 257, 385, 453],
       device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1195, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00040/00055]	Time 0.32 (0.32)	Loss 2.12 (1.64)
		cls_loss 1.53 (1.18)	reg_loss 0.59 (0.46)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([ 88,  88, 100,  88, 100,  88,  88, 100,  88, 100,  88, 100,  88, 100,
         88, 100,  88, 100,  99,  88], device='cuda:0'), tensor([ 63, 436,  80, 354], device='cuda:0'), tensor([436,  15, 294,  15], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([9], device='cuda:0'), tensor([404, 385], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7634, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2972, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0606, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402, 223], device='cuda:0'), tensor([ 52,  70, 181,  52], device='cuda:0'), tensor([436, 220, 329, 220, 165, 220, 220, 137,  93, 430,  10, 220],
       device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([ 96, 441, 298, 441, 298,  76], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451], device='cuda:0'), tensor([88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8421, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3482, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1902, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 436, 436,  22, 436], device='cuda:0'), tensor([443], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([451, 405, 258, 430, 411, 108], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([436, 438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7683, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2989, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0672, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([393, 100, 393, 385, 393, 305, 393, 305, 393, 305, 159, 393, 100, 393],
       device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([ 11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411,
        286, 411, 286,  90, 312,  37,  82,  90], device='cuda:0'), tensor([286, 345, 437, 286, 329, 294,  87, 380, 385,  87, 279, 437, 150, 294,
        437, 108, 219, 432, 219], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4521, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5995, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0516, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([148], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0'), tensor([ 91,  37, 201, 345, 359,  91, 345,  91,  91, 345,  91, 247],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256, 268, 438,
        138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438, 268, 268,
        256, 430, 438, 268, 256, 138,  70, 398, 441, 302, 249,  93, 399],
       device='cuda:0'), tensor([240], device='cuda:0'), tensor([319, 319, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3200, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5246, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8446, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([413,  90, 413,  90, 437,  90, 437,  90, 413, 437, 394, 213, 437],
       device='cuda:0'), tensor([ 47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195,
        325], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([294, 315, 436, 315, 108], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0647, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4286, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4934, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([184, 296, 411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([ 11, 121, 215,  32, 121, 120, 351,  89, 351,  37, 351,  94, 121, 155,
        121, 351,  37], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([268, 376], device='cuda:0'), tensor([107, 107, 453, 107], device='cuda:0'), tensor([294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0162, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4025, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4188, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 181], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([80], device='cuda:0'), tensor([384, 279, 385, 121,  87, 120, 201, 430, 201], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6539, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2610, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9149, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 10, 218], device='cuda:0'), tensor([399], device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([122,  83, 120, 385, 159, 286, 199, 447,  93,  71,  93, 315, 315, 447,
        315, 431, 315, 315,  93,  48, 447, 365, 431,  83, 447, 447, 315,  67,
        431, 438], device='cuda:0'), tensor([9], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0233, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4057, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4289, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 295, 295], device='cuda:0'), tensor([ 50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9519, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4012, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3532, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00050/00055]	Time 0.32 (0.32)	Loss 1.35 (1.58)
		cls_loss 0.95 (1.13)	reg_loss 0.40 (0.45)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([100], device='cuda:0'), tensor([  5, 268, 268, 432, 268], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50], device='cuda:0'), tensor([385, 107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([300, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7238, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2962, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0200, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]:
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638]) 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 404, 330,  57,  93, 100, 100], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([405, 121, 415, 294], device='cuda:0'), tensor([225], device='cuda:0'), tensor([283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437,
        150], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0702, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4296, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4998, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([204, 350, 204, 143], device='cuda:0'), tensor([ 83, 181, 415,  32, 181, 436, 447, 436], device='cuda:0'), tensor([21], device='cuda:0'), tensor([398, 436, 398,  51, 398,  51], device='cuda:0'), tensor([451, 443, 100, 120, 415,  15,  30, 451], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0970, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4159, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5129, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([436, 120], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405],
       device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2298, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4801, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7099, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 1 finished with lr=0.00001082


[Train]: Epoch 2 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([ 11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121, 384],
       device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([405, 121, 415], device='cuda:0'), tensor([89], device='cuda:0'), tensor([431, 131, 247, 108,  96,  96, 121, 348,  96, 191,  96,  96],
       device='cuda:0'), tensor([436, 326, 436, 208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436,
        213,  19, 436, 384,  19, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2590, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7665, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([426, 426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367,
        426, 252, 367, 426, 252], device='cuda:0'), tensor([385, 224, 246, 224, 246, 224], device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([9], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 80, 121, 237, 388, 311, 354, 159, 354, 423], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254, 254],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2563, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4871, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7434, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 436, 447, 436, 246], device='cuda:0'), tensor([392, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313],
       device='cuda:0'), tensor([415, 238,  12, 415, 453, 415, 385, 210, 415, 279, 453, 385,  32, 399,
        121, 356, 279, 273, 453], device='cuda:0'), tensor([405, 441, 405, 441, 405, 444, 405], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6174, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1131, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93], device='cuda:0'), tensor([441, 402, 441], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([294, 399], device='cuda:0'), tensor([268], device='cuda:0'), tensor([325, 100, 443, 281, 325, 124, 289, 100, 116, 296, 355],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8423, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3472, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1895, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len:
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([446,  44, 152, 437,  44, 436,  44,  37,  37,  37, 207,  70],
       device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116,  47], device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,  50,
        268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6539, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6849, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3388, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  11,  44,  71, 351,  82, 351, 424], device='cuda:0'), tensor([166, 294], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([255, 255, 255], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([236, 121, 312, 121,  50], device='cuda:0'), tensor([268,   5, 430, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7108, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2740, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9848, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 436, 400, 430, 351], device='cuda:0'), tensor([98], device='cuda:0'), tensor([121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421, 150,
        302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3770, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3078, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223,
        402, 223,  50, 223, 402, 313], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([143, 302, 180,  16], device='cuda:0'), tensor([436, 240], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([398, 436, 398,  51], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3780, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5582, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9363, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([217, 269,  30, 436, 447,  95, 436, 440], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 93,  96, 294,  92,  52], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([ 94, 269, 269, 203, 332, 269, 407, 121, 407, 437, 286],
       device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9732, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3914, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3646, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([ 83, 436, 280, 193, 163, 304, 437, 436, 279, 296, 302, 422],
       device='cuda:0'), tensor([357, 398, 412, 357, 412, 357, 398, 357, 412], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9406, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3621, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3027, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([436], device='cuda:0'), tensor([264, 218, 264, 433, 121, 264, 415], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([436, 294, 425,  93, 283, 283, 283, 225], device='cuda:0'), tensor([451], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8364, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1480, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00010/00055]	Time 0.36 (0.36)	Loss 1.15 (1.15)
		cls_loss 0.84 (0.84)	reg_loss 0.31 (0.31)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([21], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([404, 116,  88, 189, 388, 404, 116, 116], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,
         21, 224,  21], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4131, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5526, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9657, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100,
        392, 100, 392], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([31], device='cuda:0'), tensor([423, 423, 333], device='cuda:0'), tensor([173, 125, 341, 411, 319, 399], device='cuda:0'), tensor([219], device='cuda:0'), tensor([408, 436, 394,  16, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7863, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3150, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1013, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([ 98,  98, 397, 113, 415, 183, 354, 254, 116, 415, 121,  88],
       device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4023, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9834, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,   9, 404, 330,  57,  93, 100], device='cuda:0'), tensor([225,   0, 301, 131, 121, 228,  71,  42, 201, 257, 430],
       device='cuda:0'), tensor([220], device='cuda:0'), tensor([155, 247, 436, 230, 142,  11], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([436, 436], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6325, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2394, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8719, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([ 47, 256, 195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181,
        382,  96, 382], device='cuda:0'), tensor([133, 388,  80, 183,  80,  80], device='cuda:0'), tensor([ 49, 440, 440, 436], device='cuda:0'), tensor([181, 181, 205, 436, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0809, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4419, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5229, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 302, 107, 165,  52, 107,  96], device='cuda:0'), tensor([345, 215, 150, 215, 296, 215, 105, 215, 340, 215, 217, 215, 215],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 63, 279, 121, 411, 401, 100], device='cuda:0'), tensor([385, 166,  80,  80, 166], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9930, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3971, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3901, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([131,  22], device='cuda:0'), tensor([253,  71, 253,  71, 253], device='cuda:0'), tensor([436], device='cuda:0'), tensor([430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190,
        357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8011, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3080, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1091, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 22, 197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21, 305,
         21,  30,  21, 286,  21], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([100], device='cuda:0'), tensor([405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285,
        405, 294], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1469, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4741, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6210, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([37], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([407, 385, 436, 407, 436, 407, 407, 314, 407,  85, 314,  95,  50,   9],
       device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([215], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([58], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3583, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2558, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332], device='cuda:0'), tensor([98], device='cuda:0'), tensor([133, 121, 187, 305, 354], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7871, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3391, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1262, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00020/00055]	Time 0.31 (0.34)	Loss 1.13 (1.14)
		cls_loss 0.79 (0.81)	reg_loss 0.34 (0.33)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150,
        397, 249, 394], device='cuda:0'), tensor([408], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([369, 369, 369, 369, 174, 256, 174, 256, 174, 256], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9525, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3665, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3191, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([439, 439, 257,   9], device='cuda:0'), tensor([105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,
         22, 247, 234, 247, 294], device='cuda:0'), tensor([181,  30, 181, 181], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([439], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1156, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4156, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5312, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 319], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([280], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9086, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3661, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2747, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16,  22, 215, 441, 415], device='cuda:0'), tensor([80], device='cuda:0'), tensor([187], device='cuda:0'), tensor([378, 146, 182, 392,   5], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([393, 305, 159, 393, 100, 393,  87, 437, 332, 437,  95,  83, 286, 407,
        437,  21, 168, 100,  21, 437,  21], device='cuda:0'), tensor([187], device='cuda:0'), tensor([209, 338, 401], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2874, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0387, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436], device='cuda:0'), tensor([  4, 134,   4], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([362], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([100,  88, 100,  99,  88, 100,  88,  88, 100,  88, 100,  88],
       device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6013, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2549, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8562, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349,  82],
       device='cuda:0'), tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88, 91], device='cuda:0'), tensor([298,  16, 298,  73,  71, 136], device='cuda:0'), tensor([351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100],
       device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5424, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6323, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1747, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 80, 100,  80,  93, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6338, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2415, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8753, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 302, 256], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([166], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4865, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1794, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6659, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 354, 100], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([431, 294], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([283, 436, 383,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6799, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2812, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9611, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 10, 315], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399,  76, 399], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9989, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4426, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4416, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00030/00055]	Time 0.31 (0.33)	Loss 1.44 (1.24)
		cls_loss 1.00 (0.87)	reg_loss 0.44 (0.36)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 200, 208, 121, 264, 336, 436, 305], device='cuda:0'), tensor([315, 436, 315, 108,   8,   8, 294,   8], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([380, 413, 424,  90, 413,  90, 121, 437, 124,   9], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2497, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4945, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7442, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 441], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 44, 304, 217, 201,  88], device='cuda:0'), tensor([319, 319, 121], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([105, 268, 280, 268, 411, 268, 280, 268,  72, 329, 411,  47,  78, 411,
        138,  78, 411, 138, 138, 138,  73], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0254, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4190, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4444, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 13,   9, 436], device='cuda:0'), tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([ 82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82,
        436, 124, 223, 196], device='cuda:0'), tensor([256], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([295, 436, 295], device='cuda:0'), tensor([394, 411], device='cuda:0'), tensor([286, 351, 197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,
         37,  82,  90,  37, 445, 286], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0161, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4258, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4420, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([183, 138,  47, 213, 281, 392,  47, 362, 385, 194, 194],
       device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 158,  93], device='cuda:0'), tensor([392], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([108], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9241, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3627, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2867, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([338, 361,  93,  36, 338, 338, 338,  36], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([402, 384, 215, 215, 215], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2397, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5096, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7493, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([260], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([268,  80, 268,  80,  80], device='cuda:0'), tensor([116, 116, 138, 294, 362, 362, 146], device='cuda:0'), tensor([93], device='cuda:0'), tensor([4], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3147, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1154, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([330, 249, 443, 105,  16, 302, 124, 443, 377,  93, 443],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([341, 294,  93, 357, 249, 315,  96, 430, 316, 451], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([107, 107, 107, 107], device='cuda:0'), tensor([ 22,  52, 257, 234,  63], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8474, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3204, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1677, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49,
        411], device='cuda:0'), tensor([256, 138,  70, 256, 354, 268, 256, 268, 256, 268, 354, 138,  70, 398,
        438, 268, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256,
        268, 438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438,
        268, 268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7463, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4841, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([93], device='cuda:0'), tensor([300, 437,  90,  44], device='cuda:0'), tensor([ 90, 268,  37, 268], device='cuda:0'), tensor([256], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8891, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,
         37,  22,  22,  37,  49, 122,  37,  37, 217], device='cuda:0'), tensor([332, 191, 315, 305, 315,  73, 401, 441, 451], device='cuda:0'), tensor([257, 415, 385, 441, 301, 385, 399, 441], device='cuda:0'), tensor([ 80, 100, 100,  80, 100,  80,  71, 354], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1683, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4662, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6345, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00040/00055]	Time 0.31 (0.32)	Loss 1.63 (1.34)
		cls_loss 1.17 (0.95)	reg_loss 0.47 (0.39)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([433, 356, 292], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([50], device='cuda:0'), tensor([268], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([327,  52], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5791, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2085, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7876, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([415, 415,  36,  93, 183,  47, 430, 294, 354,  47,  80,  51, 238],
       device='cuda:0'), tensor([120, 319,  46,  10], device='cuda:0'), tensor([392, 436, 392, 404, 385], device='cuda:0'), tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([258, 226, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0176, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4377, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([438,  22, 254, 224, 399], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([219, 424, 181], device='cuda:0'), tensor([295], device='cuda:0'), tensor([181, 451], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([392, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6620, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2444, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9064, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([436, 366,  10, 366], device='cuda:0'), tensor([120,  36,  36,  73, 116,  82, 294, 305,  36, 177,  36],
       device='cuda:0'), tensor([30, 14], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([436, 316,  93, 191, 436,  44, 451, 221, 284, 436], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 71,  71, 215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9847, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3791, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3638, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299,  32,  93],
       device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 32,  95, 415], device='cuda:0'), tensor([113], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([315, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3398, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2055, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  71, 362], device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([ 91, 305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,
         91], device='cuda:0'), tensor([285, 305, 441, 225,  16,  76,  16, 418], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([319, 319, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2479, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4634, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7112, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305], device='cuda:0'), tensor([47], device='cuda:0'), tensor([408], device='cuda:0'), tensor([191], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226,
        279, 226, 279, 197,  10,  93,  10,  87, 436, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9675, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3846, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3521, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437,
        310, 399, 415, 399, 302], device='cuda:0'), tensor([439, 436, 439, 436, 439], device='cuda:0'), tensor([ 82, 181,  82, 181, 436,  82, 313,  82], device='cuda:0'), tensor([205], device='cuda:0'), tensor([305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([100, 453, 388, 257, 370,  80,  80], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2079, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4989, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7068, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 438, 249, 105,  50,  73], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2652, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5130, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7783, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([295], device='cuda:0'), tensor([142, 351, 142, 279, 201, 142,  11, 351, 142, 351, 142, 351],
       device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181], device='cuda:0'), tensor([ 93,  11, 385,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0735, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4444, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5179, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00050/00055]	Time 0.31 (0.32)	Loss 1.52 (1.37)
		cls_loss 1.07 (0.97)	reg_loss 0.44 (0.40)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([103, 249, 103, 436,  48, 365, 161, 121], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([116, 404, 116,  47, 116, 116], device='cuda:0'), tensor([447, 408], device='cuda:0'), tensor([223, 223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0072, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4007, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4079, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([244], device='cuda:0'), tensor([215, 225, 424, 225, 215,  91], device='cuda:0'), tensor([ 63, 436,  80], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([82], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7071, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0035, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 430, 316, 436], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([ 87, 213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16,
        286,  16, 436,  16, 286], device='cuda:0'), tensor([90], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415],
       device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2346, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4837, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7184, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([121, 316, 316, 316], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([ 93, 257, 385, 453, 110, 394, 257, 441,  44,  22, 384, 436],
       device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351], device='cuda:0'), tensor([108, 348, 354, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5556, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9470, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 2 finished with lr=0.00001623


[Train]: Epoch 3 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217,
        351, 217, 305,  32, 305], device='cuda:0'), tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9, 436], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([439,  11], device='cuda:0'), tensor([279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98, 283, 301, 283,
        329, 301], device='cuda:0'), tensor([451, 300, 451], device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6283, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3307, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([338, 256, 385, 354,  47, 354, 256, 116, 116, 116, 116, 325, 116, 147],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([392, 345], device='cuda:0'), tensor([268, 376, 376], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302], device='cuda:0'), tensor([110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269,  71, 424],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3919, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3686, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([9], device='cuda:0'), tensor([224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3965, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3057, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  71, 351,  82, 351, 424, 166,  82, 196, 286], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([294, 249], device='cuda:0'), tensor([2], device='cuda:0'), tensor([255], device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4883, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1808, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6692, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([82], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,
         50], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9817, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3781, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3598, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313,  82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,
         82, 436, 124], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357], device='cuda:0'), tensor([ 10, 220, 436,  71,  93,  10, 220, 220, 436, 357], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([ 19, 389,  47, 200,  49,  49, 138, 194, 388, 100,  30,  47, 370],
       device='cuda:0'), tensor([354, 100, 121, 404,  93, 257, 385, 453, 110, 394, 257],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2562, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5312, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7874, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([280, 451], device='cuda:0'), tensor([244], device='cuda:0'), tensor([294, 298, 436, 294, 294], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354, 138, 285],
       device='cuda:0'), tensor([113, 288, 249, 430, 313], device='cuda:0'), tensor([406], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4982, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1877, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6859, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279, 273, 453,
        196, 397, 279, 100], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([268], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 44, 304, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0060, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3922, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3982, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399, 230, 277, 305, 175, 197, 121], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([384, 299, 384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296],
       device='cuda:0'), tensor([398, 376], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9941, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4058, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3999, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([408,  22,  50], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5,
        392, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392,
        268, 268, 268, 268, 268], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9558, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4290, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3849, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([136, 423, 305], device='cuda:0'), tensor([98], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([399], device='cuda:0'), tensor([100,  71, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4382, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1651, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6033, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00010/00055]	Time 0.37 (0.37)	Loss 0.60 (0.60)
		cls_loss 0.44 (0.44)	reg_loss 0.17 (0.17)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([388, 354, 392], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279], device='cuda:0'), tensor([215,  83, 405, 302], device='cuda:0'), tensor([280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7374, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0046, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([439, 439, 257,   9, 439], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([404,  47, 285, 333, 362,  22, 263,  80, 116, 100, 121, 388, 359, 338,
         30], device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5637, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7980, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([295], device='cuda:0'), tensor([436, 120, 385, 436, 121, 319, 121, 316], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0601, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4261, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4862, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223, 228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294,
        223, 223,  82, 248], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 96, 301,  91, 294, 137, 294, 229, 434, 401], device='cuda:0'), tensor([191], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2809, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5443, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8253, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 68, 183,  80, 116, 116, 116, 116], device='cuda:0'), tensor([438, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256, 268,
        438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438, 268,
        268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302, 249,  93, 399],
       device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([244], device='cuda:0'), tensor([4], device='cuda:0'), tensor([98], device='cuda:0'), tensor([350, 305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([398, 436, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2658, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5629, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8287, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234, 415, 163], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([ 82, 255,  82, 294,  82, 134, 255,  31,  63,  82], device='cuda:0'), tensor([408], device='cuda:0'), tensor([4], device='cuda:0'), tensor([100, 355, 116], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([181, 315, 181, 382,  96, 382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5458, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1996, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7454, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  62, 451, 264, 233, 385, 436, 415, 264, 218, 264],
       device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([239, 120, 295, 295, 295, 295], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371, 420], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([316, 316, 305, 366, 445, 441, 385], device='cuda:0'), tensor([166], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8510, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3263, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1773, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([121,  75,  52], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 88, 100,  99,  88, 100,  88,  88, 100,  88, 100,  88],
       device='cuda:0'), tensor([215, 215,  18, 215, 345, 215], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7098, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2971, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0069, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 256], device='cuda:0'), tensor([256], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1994, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5098, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7092, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([ 12,  14,  71, 316], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([312,  37,  82,  90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90,
        316, 286, 121, 436, 286, 316, 143, 283], device='cuda:0'), tensor([384, 279, 436,  11,  46, 279,  90, 279, 436, 408, 433, 397, 249, 408],
       device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4376, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6245, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0621, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00020/00055]	Time 0.31 (0.34)	Loss 2.06 (1.33)
		cls_loss 1.44 (0.94)	reg_loss 0.62 (0.39)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([441, 301, 433, 294, 385, 385, 217, 385, 121, 441], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([217,  47,  55, 453,  47, 294, 294, 385,   8, 404,  47, 435, 124, 447,
        335,  82], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332, 337], device='cuda:0'), tensor([295], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1950, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4700, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6649, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268], device='cuda:0'), tensor([436, 331, 394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247,
        294, 424, 150, 433, 247], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([174, 256, 174, 256], device='cuda:0'), tensor([58], device='cuda:0'), tensor([121, 123,  80, 436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311,
        354], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0128, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4071, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4199, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93, 215, 141],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([398, 256, 412, 412, 412, 354, 412, 412, 354, 138, 398, 256, 412, 412,
        412, 354, 412, 138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256,
        412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 354, 412, 354, 412,
        138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412, 412, 354,
        412, 138, 398, 256, 412, 412, 412, 411, 412, 411], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31], device='cuda:0'), tensor([345, 294, 437, 294, 437, 286, 280, 437, 286, 345, 437, 286, 329, 294,
         87, 380, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8592, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8143, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.6735, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 215, 100,  37, 257, 430, 451], device='cuda:0'), tensor([116, 124, 436], device='cuda:0'), tensor([ 80, 254,  93, 116, 415,  82, 415, 116, 388, 232, 116, 116],
       device='cuda:0'), tensor([294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100, 385, 436,  93,
        291, 121, 291, 121, 115, 436,  10, 357], device='cuda:0'), tensor([410, 280, 270, 270, 436,  95, 313, 436, 313], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([408], device='cuda:0'), tensor([430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8821, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3925, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2746, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([201], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0'), tensor([268,  44, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411,
        268, 146, 411], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1115, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4587, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5702, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([332, 453, 105, 453, 100,  45, 217, 429,  96, 201, 100, 294,  50, 213,
        122,  30], device='cuda:0'), tensor([100, 294,   4], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([ 88,  73,  88, 298,  16, 298], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3388, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1778, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294],
       device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7317, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3049, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0366, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 316, 433], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394], device='cuda:0'), tensor([280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302, 305, 217, 305,
        402, 305, 149, 302], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([65], device='cuda:0'), tensor([103, 436, 103, 249, 103, 436,  48], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0014, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4138, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4151, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302, 357,
        399,  16, 401,  96, 399], device='cuda:0'), tensor([ 98, 451, 121, 305], device='cuda:0'), tensor([408], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9138, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3575, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2714, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385,
        166,  19, 121, 137, 286], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([148], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([ 44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8526, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3708, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2235, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00030/00055]	Time 0.31 (0.33)	Loss 1.22 (1.30)
		cls_loss 0.85 (0.91)	reg_loss 0.37 (0.39)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50],
       device='cuda:0'), tensor([354, 404, 124, 130, 446, 166, 130, 378, 166, 385, 378, 388],
       device='cuda:0'), tensor([120, 120], device='cuda:0'), tensor([93], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([268,  37, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8471, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3435, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1905, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 441, 247], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([295, 295, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8538, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 440,  82, 440], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279],
       device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([394,  30, 437, 394, 394,  44, 385, 288, 286, 124], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0267, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4436, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4703, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146, 268], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30],
       device='cuda:0'), tensor([ 46, 120, 120,  46, 197, 283,  46, 108, 209], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([ 22,  37,  49, 122,  37,  37, 217, 329,  37, 282, 121,  37, 447, 385,
        407], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9917, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3930, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3848, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([256], device='cuda:0'), tensor([255], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([433, 356, 292, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8031, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3341, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1372, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([47], device='cuda:0'), tensor([228,   9], device='cuda:0'), tensor([451], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([ 93, 120, 424, 166], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415], device='cuda:0'), tensor([256, 388,  47, 256, 195, 109, 325, 195, 325, 325, 257, 354,  47,  23],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9083, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3723, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2806, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105],
       device='cuda:0'), tensor([134, 215, 134, 108], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([396], device='cuda:0'), tensor([215,  44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,
         45,  37, 424,  37, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8329, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3460, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1789, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 305, 451, 121, 315, 451, 441,  32, 315,  90], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([451], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([225], device='cuda:0'), tensor([ 91,  91, 345,  91, 247,  91,  37, 201, 345, 359, 359],
       device='cuda:0'), tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0737, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5130, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([89], device='cuda:0'), tensor([80], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351], device='cuda:0'), tensor([ 44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407,
        280,  21,  40, 269,  44, 424], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3258, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1680, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([436, 230, 142,  11, 441], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,
         44,   5, 138, 138, 298], device='cuda:0'), tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1817, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5383, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7200, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00040/00055]	Time 0.31 (0.33)	Loss 1.72 (1.40)
		cls_loss 1.18 (0.98)	reg_loss 0.54 (0.42)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([426, 426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367,
        426, 252, 367], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([248, 258, 132], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0948, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4463, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5411, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 137, 385,  50, 137], device='cuda:0'), tensor([443], device='cuda:0'), tensor([ 11, 420, 451, 420], device='cuda:0'), tensor([121], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([234, 319, 339, 402], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8296, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3576, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1872, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351,  63,  80, 351, 121], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150,
        283, 286, 283], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6074, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2335, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8409, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 155, 131], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([146], device='cuda:0'), tensor([121,  31,  80], device='cuda:0'), tensor([424, 181], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5160, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1990, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7150, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 264, 294, 329,  93, 137,  71, 137], device='cuda:0'), tensor([385, 205], device='cuda:0'), tensor([312, 121,  50,  10], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([399, 294, 399], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6554, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2587, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9142, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([433, 323, 323, 121, 269], device='cuda:0'), tensor([182, 392, 146, 146,  51], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([351, 231, 351, 150, 215, 385, 100, 127, 399, 215, 204, 215, 204, 215],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([356], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9141, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3809, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2950, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([256], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310], device='cuda:0'), tensor([215, 187,   8, 187,  96,  96, 226,  83], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 158,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6276, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1173, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,  82,   0], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([406,  11], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([401,  62, 283, 156, 229,  72, 229], device='cuda:0'), tensor([256], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5371, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1830, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7200, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399, 216], device='cuda:0'), tensor([208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([215], device='cuda:0'), tensor([436, 240], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2468, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8811, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([362], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116],
       device='cuda:0'), tensor([116, 305, 116, 385], device='cuda:0'), tensor([431, 294], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8981, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3998, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2979, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00050/00055]	Time 0.31 (0.32)	Loss 1.30 (1.38)
		cls_loss 0.90 (0.96)	reg_loss 0.40 (0.42)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([313], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3316, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1637, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32, 201,  11,  78, 175,  71, 121, 436], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37, 436],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82], device='cuda:0'), tensor([319], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7556, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3428, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0983, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392,
        354, 100, 392], device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159], device='cuda:0'), tensor([  7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437, 100],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 15, 121, 312, 334,  15], device='cuda:0'), tensor([219], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1579, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5019, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6598, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([395,  76, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395],
       device='cuda:0'), tensor([159,  15, 436,  15, 436, 121, 451, 436, 451,  12, 241],
       device='cuda:0'), tensor([430, 411, 108, 451, 399, 411, 439, 296, 411], device='cuda:0'), tensor([ 93,  11, 385,  11], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351],
       device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2653, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5055, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7708, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 3 finished with lr=0.00002164


[Train]: Epoch 4 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 430,  11], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0'), tensor([319, 121, 316,  15, 121], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4372, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6189, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0561, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 50, 399], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351],
       device='cuda:0'), tensor([ 93, 120, 424, 166], device='cuda:0'), tensor([260,  44, 447, 294, 392, 100], device='cuda:0'), tensor([146], device='cuda:0'), tensor([187], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6997, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2865, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9862, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([196, 294, 294,   9, 313,  52, 294, 181, 294], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([441, 405, 441, 405, 444, 405, 113, 405], device='cuda:0'), tensor([408], device='cuda:0'), tensor([159,  15, 436,  15, 436, 121, 451, 436, 451,  12, 241],
       device='cuda:0'), tensor([249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([164, 147,  93,  25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421,
        421,  82, 421, 228, 415], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1665, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4730, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6395, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255,  82], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([181, 436,  82, 313,  82, 181,  82, 181,  82, 436], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9033, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4009, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3042, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,
         44, 200], device='cuda:0'), tensor([166, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2397, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4947, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7343, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 445, 236, 181, 236, 181, 107, 181, 352, 279, 340, 121],
       device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([430,  75, 451], device='cuda:0'), tensor([65], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([385, 354, 100, 121, 404,  93, 257, 385, 453, 110], device='cuda:0'), tensor([398, 256, 398, 398, 376, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7609, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3165, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0775, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 302], device='cuda:0'), tensor([191], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,
         22, 247, 234, 247, 294, 424, 150, 433], device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([215, 215, 215, 402, 215, 215, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0977, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4576, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5553, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357, 398], device='cuda:0'), tensor([200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,
         85, 293,  84,  85,  44, 438, 345, 167, 108], device='cuda:0'), tensor([208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,  19, 436,
        384,  19, 182, 121, 430, 436], device='cuda:0'), tensor([ 11,  44, 351, 121, 351, 127, 351, 351, 351, 351, 231],
       device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([ 21, 286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,  96, 155,
        351,  96, 121, 351, 217, 351, 217, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4531, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6318, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0849, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 447, 401, 399, 121, 408], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([215], device='cuda:0'), tensor([451], device='cuda:0'), tensor([268], device='cuda:0'), tensor([323, 323, 121, 269], device='cuda:0'), tensor([244, 432, 244], device='cuda:0')]
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes3 {'cls_loss': tensor(0.5618, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2140, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7757, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 255,  82, 165,  82, 165, 385, 107, 255, 255], device='cuda:0'), tensor([401, 424], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([436], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([ 76,  16, 402, 225, 441, 285, 108], device='cuda:0'), tensor([279,  11,  11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98,
        283, 301, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7885, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3273, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1158, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([424, 371, 371, 420, 420, 424, 371], device='cuda:0'), tensor([451, 451, 451, 451, 451, 155, 451], device='cuda:0'), tensor([316, 433, 316, 100], device='cuda:0'), tensor([100,   7,   7,   7,   7,   7, 436, 247, 247, 100], device='cuda:0'), tensor([ 10, 366,  10, 436, 121, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7194, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3108, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0302, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00010/00055]	Time 0.37 (0.37)	Loss 1.03 (1.03)
		cls_loss 0.72 (0.72)	reg_loss 0.31 (0.31)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50,  50], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([382], device='cuda:0'), tensor([181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0081, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4571, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4652, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 369],
       device='cuda:0'), tensor([ 72, 329, 411,  47,  78, 411, 138,  78, 411, 138, 138, 138,  73, 298,
        138, 138], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([47], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0805, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4621, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5426, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408,  93], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([100], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([295], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4883, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2176, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7059, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 268, 138, 302,  76, 345,  70, 441, 356, 279,  76, 399,  76, 396,
        441, 316, 302, 441], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91],
       device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([181], device='cuda:0'), tensor([ 90, 399, 230, 277, 305, 175], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8740, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3670, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2410, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269], device='cuda:0'), tensor([120, 302, 424,  46,  72, 294], device='cuda:0'), tensor([401], device='cuda:0'), tensor([ 50, 415,  93], device='cuda:0'), tensor([ 37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37,
        217, 329,  37, 282, 121,  37, 447, 385], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([124, 436, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9467, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3819, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3287, device='cuda:0', grad_fn=<AddBackward0>)}
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([3309, 1536])
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 340, 236, 121], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([89], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6582, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9198, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 63, 279, 121, 411, 401, 100, 385], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302], device='cuda:0'), tensor([325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423, 294,  63],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([383, 430, 319, 319, 120, 319,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0695, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4863, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5559, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([ 32, 309, 429, 451, 215, 177, 294, 215, 150,  71,  71],
       device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([239, 120, 295, 295, 295, 295], device='cuda:0'), tensor([439, 436, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7968, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3458, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1426, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 402, 441, 108], device='cuda:0'), tensor([ 76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([256], device='cuda:0'), tensor([148], device='cuda:0'), tensor([284], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5079, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2036, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7115, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 408], device='cuda:0'), tensor([88], device='cuda:0'), tensor([ 93, 437, 294, 345, 294, 437, 294, 437, 286, 280, 437, 286, 345, 437,
        286, 329, 294], device='cuda:0'), tensor([ 31,  31,  31,  31,  31,  31,  31, 201, 121], device='cuda:0'), tensor([244], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0415, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4348, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4763, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00020/00055]	Time 0.32 (0.34)	Loss 1.48 (1.25)
		cls_loss 1.04 (0.88)	reg_loss 0.43 (0.37)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313],
       device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([268, 432, 268], device='cuda:0'), tensor([142, 142], device='cuda:0'), tensor([436, 440,  82, 440], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1047, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5604, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6651, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([ 44, 223, 310, 113, 399], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1419, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4829, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6247, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([437, 305, 437, 121, 441, 437,  50, 305, 437, 315, 437, 315, 120, 305,
        284, 121, 305, 436], device='cuda:0'), tensor([146,  71, 390, 401, 121,  62], device='cuda:0'), tensor([  9, 404, 330,  57,  93, 100, 100], device='cuda:0'), tensor([ 16,  16, 219, 155], device='cuda:0'), tensor([439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9116, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2956, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420],
       device='cuda:0'), tensor([105], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 73, 399,  49, 440, 440], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2704, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9763, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([411, 412, 316, 412, 138, 138, 354, 256, 354, 398, 354, 412, 256, 354,
        412, 138, 398, 256, 354, 398, 412, 138, 398, 256, 412, 354, 412, 138,
        398, 256, 412, 354, 412, 138, 398, 256, 412, 411, 138, 398, 411, 412,
        294, 354], device='cuda:0'), tensor([215], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1633, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5703, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7335, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 121,  80, 100,  80], device='cuda:0'), tensor([ 44, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([ 36, 186, 325, 186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146,
        325, 146], device='cuda:0'), tensor([437,  95,  83, 286, 407, 437,  21, 168, 100,  21, 437,  21, 329, 292,
         21, 437,  21,  42,  21, 237, 443,  21, 437, 407], device='cuda:0'), tensor([385, 325, 397, 325, 354, 370, 213, 183, 354, 404, 124, 130, 446],
       device='cuda:0'), tensor([345, 201, 305, 305, 394, 201, 305, 302, 305, 217, 305, 402, 305, 149,
        302,  72], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6202, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0106, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5148, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2042, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7191, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([256], device='cuda:0'), tensor([295, 356], device='cuda:0'), tensor([244], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37,
        247, 225,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6612, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9347, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([424,  88, 247,  80,  91, 411,  88,  80], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4862, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1826, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6688, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437,
        150, 397, 249, 394], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 11,  78, 175,  71, 121, 436, 402], device='cuda:0'), tensor([215,  83,  16,  22, 215], device='cuda:0'), tensor([232,  36, 120,  36,  36,  73, 116,  82, 294, 305,  36],
       device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9101, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3769, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2870, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00030/00055]	Time 0.32 (0.33)	Loss 1.29 (1.26)
		cls_loss 0.91 (0.89)	reg_loss 0.38 (0.37)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([98], device='cuda:0'), tensor([120,  98, 451, 121, 305], device='cuda:0'), tensor([334, 436, 408], device='cuda:0'), tensor([306, 268, 268, 306, 268, 306, 306, 306], device='cuda:0'), tensor([ 52, 137, 385,  50, 137], device='cuda:0'), tensor([294, 294, 436, 294, 315, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6842, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3433, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0275, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([416, 248, 258, 132], device='cuda:0'), tensor([ 88,  91,  88, 100,  88,  91,  88, 100,  88,  88, 100,  88, 100,  88,
         88, 100,  88], device='cuda:0'), tensor([ 82, 436, 325, 183, 361, 325,  47, 302,  47], device='cuda:0'), tensor([ 93, 283], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([100, 354, 100, 166, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9564, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4011, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3574, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([328, 417, 436, 342], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2177, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8094, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([316, 316, 316, 305, 366, 445], device='cuda:0'), tensor([298,  16, 298,  73,  71, 136], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9394, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3659, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3053, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([ 80, 114,  80, 258], device='cuda:0'), tensor([398,  51, 398, 435, 398], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([167, 431, 268, 415,  22,  50, 268,  50, 412, 415, 356, 251, 138,  50,
        152, 360, 436, 282,  50,  50], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0731, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4353, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5084, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 91, 105,  91,  31, 294,  31, 294,  91, 150], device='cuda:0'), tensor([225,  50], device='cuda:0'), tensor([399], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121],
       device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280,  71,  71, 424, 201], device='cuda:0'), tensor([305, 399, 363, 305, 426, 426, 252, 367, 305], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1356, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4607, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5963, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147, 224, 217], device='cuda:0'), tensor([93], device='cuda:0'), tensor([399], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9919, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4240, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4159, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([234, 415], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220,
        181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357,
        431, 137, 220, 220, 357, 431, 220, 409, 220], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5009, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6463, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1473, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 181,  52, 436,  52, 205, 302,  52, 121], device='cuda:0'), tensor([ 47,  80,  51, 238,  47, 404, 388,  36, 302, 209, 121,  23, 121,  82,
          1,  47, 116, 256], device='cuda:0'), tensor([294,  47, 116,  47, 116, 263, 116, 116,  47, 116], device='cuda:0'), tensor([340,  13, 245,  71, 245,  13, 245, 413, 245, 413], device='cuda:0'), tensor([294,   4,   4], device='cuda:0'), tensor([80], device='cuda:0'), tensor([ 63, 234, 215], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9120, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3744, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2864, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([107, 107,   2,   2], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([90], device='cuda:0'), tensor([93], device='cuda:0'), tensor([436, 103, 436, 103], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([436, 441, 143, 279, 441,  32, 124,  71, 100,  32, 430, 441],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7250, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3115, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0365, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00040/00055]	Time 0.32 (0.33)	Loss 1.04 (1.21)
		cls_loss 0.73 (0.85)	reg_loss 0.31 (0.36)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 214,  11, 226, 351, 197, 351, 197, 351, 121], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([392, 436, 392, 404, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7551, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3754, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1304, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([255], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286], device='cuda:0'), tensor([405, 121, 415, 294], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([294, 196, 215], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([215, 249, 134, 215, 134, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6358, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2763, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9121, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([408], device='cuda:0'), tensor([309, 299,  32,  93, 121, 120, 302, 121, 302, 121], device='cuda:0'), tensor([319, 424, 424,  89], device='cuda:0'), tensor([304, 437, 436, 279, 296, 302, 422, 121,  30], device='cuda:0'), tensor([220], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7713, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3292, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1006, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354, 138], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([392, 146,   5, 378, 146], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([ 44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223,
        402, 223,  50, 223, 402, 313, 223, 402], device='cuda:0'), tensor([279, 136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4930, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6409, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1339, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 189, 189, 313], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([113], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8347, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3403, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1750, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 155, 131, 191,   9, 385,  71, 314], device='cuda:0'), tensor([267,  93, 158,  93], device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([232, 388, 232, 116, 116, 138, 294], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50], device='cuda:0'), tensor([408, 383, 415, 279, 408, 408, 415, 383, 399, 399, 383, 436,   8,   8],
       device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7519, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3234, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0753, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([225], device='cuda:0'), tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([215,  32, 215, 436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312],
       device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 80, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6197, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2681, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8878, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([453, 388, 257, 370,  80,  80, 443,  93], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([240], device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6112, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3425, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9536, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([131, 397, 385, 302], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([377,  93, 443], device='cuda:0'), tensor([80], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6959, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3092, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0051, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([441], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0'), tensor([354, 121, 108], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6786, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9722, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00050/00055]	Time 0.31 (0.33)	Loss 0.97 (1.16)
		cls_loss 0.68 (0.81)	reg_loss 0.29 (0.35)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([14], device='cuda:0'), tensor([436, 383,  50, 291], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330], device='cuda:0'), tensor([ 10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100,
        385, 436,  93, 291], device='cuda:0'), tensor([ 44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286,
        411, 286, 411, 286,  90], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1676, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5065, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6740, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([258, 430, 411, 108, 451, 399, 411, 439, 296, 411], device='cuda:0'), tensor([354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        129, 100, 392, 430, 100], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([408], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([256], device='cuda:0'), tensor([271, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6195, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2928, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9123, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([441, 301,  43, 351, 197,  37], device='cuda:0'), tensor([194, 194,  51,  51, 194, 194, 194, 194, 388, 345, 338, 338, 397, 100,
        388,  80, 370,  51,  68], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408,
        415], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4702, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5617, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([159,  31, 121, 114, 326, 224, 224, 305,  32, 305, 434, 326],
       device='cuda:0'), tensor([121, 430, 197, 440, 121, 316,  32,  63, 121,  32], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0333, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4790, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 4 finished with lr=0.00002705


[Train]: Epoch 5 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8299, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2214, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([244], device='cuda:0'), tensor([280, 319, 319, 100], device='cuda:0'), tensor([15], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4650, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1992, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6642, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([37], device='cuda:0'), tensor([184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315,  90], device='cuda:0'), tensor([294, 100, 279, 451, 346, 249,  93,  71, 329, 300], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([280], device='cuda:0'), tensor([392, 436, 392, 404, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7975, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3491, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1465, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71],
       device='cuda:0'), tensor([302, 424,  46,  72, 294,  63], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([182, 392, 146,   5, 378], device='cuda:0'), tensor([131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7975, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3559, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1534, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([285, 108, 441, 247], device='cuda:0'), tensor([305], device='cuda:0'), tensor([58], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5033, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1736, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6769, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([ 11,  44, 351, 121, 351, 127, 351, 351, 351, 351], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([215, 436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350],
       device='cuda:0'), tensor([242, 415, 436, 242, 415, 121, 242, 242], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0668, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5194, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5862, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 303, 325, 388, 116, 100,  51, 100, 303], device='cuda:0'), tensor([366, 436, 366], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9142, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3745, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2888, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,
         82, 213], device='cuda:0'), tensor([436,  88,  72,  88,  91, 411, 209,  88, 424,  88, 247,  80,  91, 411,
         88], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0'), tensor([216, 447, 408], device='cuda:0'), tensor([  9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4182, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6068, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0250, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436],
       device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8284, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2094, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59], device='cuda:0'), tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87], device='cuda:0'), tensor([296], device='cuda:0'), tensor([187], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([354, 256, 354, 412, 138, 398, 411, 412, 316, 412, 138, 138, 354, 256,
        354, 398, 354, 412, 256, 354, 412, 138, 398, 256, 354, 398, 412, 138,
        398, 256, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138, 398, 256],
       device='cuda:0'), tensor([440, 121, 430, 197, 440, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0064, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5468, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5531, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166,  71, 354, 116], device='cuda:0'), tensor([88, 16, 88, 73], device='cuda:0'), tensor([256], device='cuda:0'), tensor([319, 406, 451], device='cuda:0'), tensor([146, 325, 146, 345, 183,  47, 232, 404, 354, 194, 453, 415, 116, 389],
       device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6560, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2727, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9288, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00010/00055]	Time 0.35 (0.35)	Loss 0.93 (0.93)
		cls_loss 0.66 (0.66)	reg_loss 0.27 (0.27)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([399,  63, 398, 376, 398, 354, 398, 354,  71, 376, 398, 354, 398, 256],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([429, 451, 215, 177, 294, 215, 150,  71,  71, 215], device='cuda:0'), tensor([89], device='cuda:0'), tensor([443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([ 87, 121,   9,  12, 425,  63, 165], device='cuda:0')]
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1983, 1536])
yes3 {'cls_loss': tensor(0.9007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3663, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2670, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([240, 436], device='cuda:0'), tensor([ 80, 177, 398, 385,  80], device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5629, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3788, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9417, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 388, 354, 392], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([408, 302, 383, 279, 383,   3, 383, 425, 304, 177, 408,  91, 408,  71,
        201,  44, 210, 408, 408, 105], device='cuda:0'), tensor([31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9838, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4721, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4559, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 436,  80, 354,  93, 120], device='cuda:0'), tensor([325,  47, 195,  47, 256,  19, 109,  47, 388, 260, 256],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 82, 295], device='cuda:0'), tensor([194, 388, 345, 338, 338, 397, 100, 388,  80, 370,  51,  68, 370, 404,
        404], device='cuda:0'), tensor([337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231],
       device='cuda:0'), tensor([437,  87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9358, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3711, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3069, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([ 51, 398, 435, 398], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6435, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9286, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 325, 354, 404,  47, 116,  47, 256, 388, 109, 116, 183, 325],
       device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([244], device='cuda:0'), tensor([305, 399, 363, 305, 426, 426, 252, 367, 305], device='cuda:0'), tensor([411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411],
       device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436], device='cuda:0'), tensor([382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8722, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3467, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2189, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([316, 433, 316, 100, 257], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371, 420], device='cuda:0'), tensor([441], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6938, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2586, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9524, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91],
       device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([ 63, 279, 121, 411, 401, 100, 385,  49], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([ 93, 351,  93, 351,  93, 295, 351, 325, 295, 351], device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0'), tensor([286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,  96, 155, 351,
         96, 121, 351, 217, 351, 217, 305], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3990, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6776, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0766, device='cuda:0', grad_fn=<AddBackward0>)}
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([5423, 1536])
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0'), tensor([221, 436, 411, 223, 345, 115, 436, 115, 436, 357, 436, 313],
       device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3798, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3033, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93],
       device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([388, 100,  30,  47, 370,  68,  80,  68,  47, 131, 303,  47, 447,  47],
       device='cuda:0'), tensor([415, 441,  49, 408,  22], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([242, 357, 431,  10, 220, 436,  71,  93], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([356], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8194, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3322, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1516, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00020/00055]	Time 0.31 (0.33)	Loss 1.15 (1.04)
		cls_loss 0.82 (0.74)	reg_loss 0.33 (0.30)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9889, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4653, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4542, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49,  22, 270],
       device='cuda:0'), tensor([  9, 437, 120, 437,  90, 413,  90, 413,  90, 437,  90, 437],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408, 415, 408],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7148, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3270, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0417, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234, 319, 339, 402], device='cuda:0'), tensor([ 90, 248], device='cuda:0'), tensor([4], device='cuda:0'), tensor([402, 305, 149, 302,  72, 196,  43, 402, 305, 128, 236, 128, 128],
       device='cuda:0'), tensor([357, 398, 412, 357, 412, 357, 398, 357, 412], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7467, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3062, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0529, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 121,  70, 224,  70,  22,  52, 257, 234], device='cuda:0'), tensor([258, 132], device='cuda:0'), tensor([400, 415, 121], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 93, 399, 441, 385, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,
         70, 398, 396, 268, 268, 121, 268, 158, 138, 214,  44],
       device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9395, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4330, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3726, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([253,  87, 140, 316], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 23, 408, 436, 436, 408, 436], device='cuda:0'), tensor([408, 181, 181, 205, 436, 345], device='cuda:0'), tensor([356, 279,  96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3525, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0915, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82,
        152, 164, 121, 251, 164, 121, 415,  93, 270, 279], device='cuda:0'), tensor([142,  80, 114,  80], device='cuda:0'), tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([294,  75,   9, 294,  62, 294,  62, 294, 294,  96, 392, 345],
       device='cuda:0'), tensor([316, 142, 249, 142, 316], device='cuda:0'), tensor([225], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8623, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3849, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2472, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351,  90, 351,  90,  43, 436, 441], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([436,  80,  80, 121, 237, 388, 311, 354, 159, 354, 423],
       device='cuda:0'), tensor([385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121,
        100, 436, 366, 215,  83, 436], device='cuda:0'), tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269],
       device='cuda:0'), tensor([436], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1063, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4916, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5980, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([265,  46, 384, 265, 319,  11, 230,  46,  93], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([250,  50, 250, 432], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([121, 356, 279, 273, 453, 196, 397, 279, 100, 296, 415, 100, 121,  85,
        453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3653, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1974, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([139, 115, 121], device='cuda:0'), tensor([215], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([9], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1581, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4965, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([155, 100, 100, 436,  87], device='cuda:0'), tensor([268], device='cuda:0'), tensor([146, 100, 355, 116], device='cuda:0'), tensor([451, 258,  71, 411, 399, 188, 430, 425, 411, 207], device='cuda:0'), tensor([93], device='cuda:0'), tensor([369, 369, 369, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314,
        407], device='cuda:0'), tensor([436,  15, 294,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7448, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3284, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0732, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00030/00055]	Time 0.31 (0.32)	Loss 1.07 (1.05)
		cls_loss 0.74 (0.74)	reg_loss 0.33 (0.31)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([437, 300, 437,  90], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([451], device='cuda:0'), tensor([100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392,
        100, 392, 100, 392], device='cuda:0'), tensor([166], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5172, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2510, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7683, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([437, 385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399, 437,
         50], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([415, 163], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8111, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4240, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2350, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127], device='cuda:0'), tensor([127,  44,  63, 234], device='cuda:0'), tensor([138,  73, 298, 138, 138, 361, 298,  80], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([406], device='cuda:0'), tensor([362], device='cuda:0'), tensor([238, 378, 231, 100, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9678, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3973, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3651, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([319, 451, 279, 380, 402, 447, 402], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([187], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([199,  93,  71,  93, 315, 315, 447, 315, 431, 315, 315,  93,  48, 447,
        365, 431,  83, 447, 447, 315,  67, 431, 438, 216], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0168, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4264, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4432, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([21], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115,
        190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([401], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,
         44,   5, 138, 138, 298], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2595, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6059, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8654, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([120,  98, 451, 121], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([215, 345, 215], device='cuda:0'), tensor([256], device='cuda:0'), tensor([215,  83, 405], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4883, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2658, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7541, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([121], device='cuda:0'), tensor([ 50, 137,  50, 291, 438, 396, 438], device='cuda:0'), tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70,  82],
       device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50], device='cuda:0'), tensor([110, 394, 257, 441,  44,  22, 384, 436, 384], device='cuda:0'), tensor([220], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8311, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3586, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1896, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([429], device='cuda:0'), tensor([334, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([302, 107, 165,  52, 107,  96, 338], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([423, 423, 333], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6335, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2709, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9044, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392], device='cuda:0'), tensor([294,  47, 116,  47, 116, 263, 116, 116,  47, 116], device='cuda:0'), tensor([305, 116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([301,  91, 294, 137, 294, 229, 434, 401,  93, 431], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([107, 107, 453, 107, 107, 107], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9572, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4216, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3788, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([116, 116, 116, 404, 138, 100], device='cuda:0'), tensor([319, 319], device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([431, 220, 409, 220, 357, 431, 294, 357, 431, 447, 357, 431, 294],
       device='cuda:0'), tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([142,  11, 441, 451, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9561, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4439, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4001, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00040/00055]	Time 0.31 (0.32)	Loss 1.40 (1.14)
		cls_loss 0.96 (0.79)	reg_loss 0.44 (0.34)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([ 90, 209, 215], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([306, 392], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6567, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2746, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9313, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([268], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([148], device='cuda:0'), tensor([268, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4921, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2046, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6968, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([268], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([224], device='cuda:0'), tensor([268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268,
        268, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268,
        313,   5, 392,  50, 268, 268, 268], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([384, 279, 385, 121,  87, 120, 201, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1410, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6174, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7584, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([305], device='cuda:0'), tensor([93], device='cuda:0'), tensor([98], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([80], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([294, 436, 294, 315, 436, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4814, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1995, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6809, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([189, 189, 313], device='cuda:0'), tensor([ 88,   9, 327, 325,  63,  47,  47,  93,  23, 443,  49],
       device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,
         37, 411, 411, 411,  50], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([ 62, 301,  82, 294, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9880, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4512, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4392, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121],
       device='cuda:0'), tensor([133, 121, 187, 305, 354], device='cuda:0'), tensor([213,  19, 436, 384,  19, 182, 121, 430, 436,  80,  47, 436, 325,  93,
        436, 345, 113], device='cuda:0'), tensor([451, 100, 100, 294, 429], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4642, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5219, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([354, 324, 200, 279], device='cuda:0'), tensor([175, 197, 121, 197, 305,  12, 436, 285, 301, 121,  44],
       device='cuda:0'), tensor([181, 181, 219, 181], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5492, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2341, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7833, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224,  44, 166, 268], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([120, 181, 158, 158], device='cuda:0'), tensor([113], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([385,  11, 121,  11, 197,  44, 385, 441, 385, 441,  93],
       device='cuda:0'), tensor([223, 228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294,
        223, 223,  82, 248], device='cuda:0'), tensor([181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8400, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3676, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2076, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315,  93, 244, 432], device='cuda:0'), tensor([415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50, 159],
       device='cuda:0'), tensor([399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([294, 399, 302], device='cuda:0'), tensor([319], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6746, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2858, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9604, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([447,  37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37,
         37, 217, 329,  37, 282, 121,  37, 447, 385], device='cuda:0'), tensor([439], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([ 83, 286, 407, 437,  21, 168, 100,  21, 437,  21, 329, 292,  21, 437,
         21,  42,  21, 237, 443,  21, 437, 407, 302], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([436, 447, 436, 246, 436,  82], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4776, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6688, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1464, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00050/00055]	Time 0.31 (0.32)	Loss 2.15 (1.34)
		cls_loss 1.48 (0.93)	reg_loss 0.67 (0.41)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([ 99,  88, 187, 100,  88,  88,  88, 100], device='cuda:0'), tensor([319,  30,  50, 201, 451, 201, 280, 302, 402], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345, 167], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([224, 224, 305,  32, 305, 434, 326, 224, 286, 224, 326],
       device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3848, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6168, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0017, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 294, 264, 294, 329,  93], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0'), tensor([441, 113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9803, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4368, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4172, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 316, 316, 316, 294], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([399], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424,
        150, 433, 247, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4166, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3592, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 223, 310, 113, 399], device='cuda:0'), tensor([181, 181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([437, 283, 280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425,
        150, 437, 150, 397, 249, 394], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([437, 286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87,
        279, 437, 150, 294, 437, 108, 219], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2514, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5720, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8235, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 5 finished with lr=0.00003246


[Train]: Epoch 6 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181,  30, 181, 181,   9, 155, 121], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([158], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294],
       device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,  82,
        313], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6910, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3766, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0676, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([191], device='cuda:0'), tensor([436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([351, 399, 351, 245, 351, 142, 351, 142, 279, 201, 142],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([441, 294, 264, 294, 329,  93], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5784, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2526, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8310, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([209, 225], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([424, 371, 371, 420, 420, 424, 371], device='cuda:0'), tensor([88], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223, 223,  82, 248,
        138, 164, 147,  93,  25, 336, 241, 184, 296, 411], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7312, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3270, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0581, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([357, 412, 357, 398, 357, 412, 357, 357, 398, 412], device='cuda:0'), tensor([268], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([408], device='cuda:0'), tensor([100,  96,  71], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2198, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7113, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([4], device='cuda:0'), tensor([197, 452,  15, 436, 225], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([223, 223, 144, 223, 223], device='cuda:0'), tensor([294, 217, 436,  93], device='cuda:0'), tensor([116, 138,   8, 116, 138, 232, 388], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4081, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1827, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5908, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 436, 439], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([451, 264, 233, 385, 436, 415, 264, 218, 264, 433, 121, 264, 415],
       device='cuda:0'), tensor([325, 397, 325, 354, 370, 213, 183, 354, 404, 124, 130, 446, 166],
       device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325, 183],
       device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0032, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4717, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4749, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([326, 224, 224, 305,  32, 305, 434, 326, 224, 286, 224],
       device='cuda:0'), tensor([90], device='cuda:0'), tensor([323, 121, 269, 323], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([116, 404, 116,  47, 116, 116], device='cuda:0'), tensor([  9,  88,  91,  88, 100,  88,  91,  88, 100,  88,  88, 100,  88, 100,
         88,  88, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6617, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3322, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9939, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50], device='cuda:0'), tensor([264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223,
        215, 385,  90, 223], device='cuda:0'), tensor([215], device='cuda:0'), tensor([305, 120, 305, 187, 305], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6558, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2948, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9506, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,
          5, 167, 431, 268, 415,  22,  50, 268], device='cuda:0'), tensor([181], device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([183,  80,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8837, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3854, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2690, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([148], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100, 385,
        436,  93, 291, 121, 291, 121], device='cuda:0'), tensor([315,  93, 244, 432], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([181,  32, 238, 408, 408, 181, 181, 205, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9018, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4297, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3315, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 258, 430, 411, 108, 451, 399, 411], device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([436, 120], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([407, 437,  21, 168, 100,  21, 437,  21, 329, 292,  21, 437,  21,  42,
         21, 237, 443,  21, 437, 407, 302], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9389, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4287, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00010/00055]	Time 0.36 (0.36)	Loss 1.43 (1.43)
		cls_loss 0.94 (0.94)	reg_loss 0.49 (0.49)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 306], device='cuda:0'), tensor([ 44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([400, 430, 351, 430, 430, 351, 430, 351,  93, 351, 325],
       device='cuda:0'), tensor([345, 399,  90, 399, 230, 277, 305, 175], device='cuda:0'), tensor([354, 159, 354, 423,  83, 121, 436], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6651, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3036, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9687, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([295, 294], device='cuda:0'), tensor([ 15,  15, 305, 181], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181, 382, 315,
        181, 315, 181, 315], device='cuda:0'), tensor([451,  32, 121,  37,  43, 121, 124,  44, 197, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7894, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3313, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1207, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([437, 120, 437,  90, 413,  90, 413,  90, 437,  90, 437,  90, 413, 437],
       device='cuda:0'), tensor([182, 453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80, 116,
         19], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8233, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2197, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([173, 125, 341], device='cuda:0'), tensor([436, 403, 403,  63, 319,  30], device='cuda:0'), tensor([82], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6181, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2252, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8433, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407, 280,  21,  40,
        269,  44, 424, 407,  21], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313, 313,
        447, 138,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0364, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4675, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5039, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([339,  31, 445, 340, 277, 279, 236,  31, 415], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([107, 107, 107, 453], device='cuda:0'), tensor([215,  90, 209], device='cuda:0'), tensor([436, 247], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4280, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3663, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([165, 220, 220, 137,  93, 430,  10, 220, 242, 357, 431],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([105, 436,  83, 181, 415,  32, 181, 436, 447, 436], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([354, 215, 311, 388, 133, 133, 303, 345, 146,   5, 183, 388],
       device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9413, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4104, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3517, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([408], device='cuda:0'), tensor([133, 121, 187, 305, 354,  96], device='cuda:0'), tensor([181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,
         90,  37, 445, 286,  90, 316,  22], device='cuda:0'), tensor([32, 95], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6983, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3044, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0027, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([451], device='cuda:0'), tensor([408], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 91, 305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,
         91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6342, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3329, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9671, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([437, 436, 279, 296, 302, 422, 121,  30,  30], device='cuda:0'), tensor([256], device='cuda:0'), tensor([279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437,
        310, 399, 415, 399], device='cuda:0'), tensor([404, 447, 217,  80, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8113, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3478, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1590, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00020/00055]	Time 0.31 (0.34)	Loss 1.16 (1.29)
		cls_loss 0.81 (0.88)	reg_loss 0.35 (0.42)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]:
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309]) torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([1300, 1536])
feats2  4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([248, 302, 248,  71, 224], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([121, 108, 392, 385, 281, 392, 258], device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([248, 340, 236, 121, 312], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9771, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4406, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4178, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223, 219,
        387, 184,  76, 247, 279, 223,  50, 310, 279,  70], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([ 44, 319], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([146], device='cuda:0'), tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8074, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3526, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1600, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([408, 399, 408,  50], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([295, 436, 295], device='cuda:0'), tensor([294, 298, 436, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4025, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1781, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5806, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([22, 50], device='cuda:0'), tensor([436, 325,  93, 436, 345, 113, 105, 183, 121, 385, 166,  19, 121, 137,
        286, 434,  55], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([47], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5746, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2817, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8563, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316,  93, 191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436],
       device='cuda:0'), tensor([  9,  52, 294,  52,  93,  52, 436,  52,  44, 302,  52, 131],
       device='cuda:0'), tensor([313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453, 197, 436, 340,
        121, 351, 318, 351], device='cuda:0'), tensor([394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424,
        150, 433, 247, 218], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1233, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4762, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5995, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314,
        407], device='cuda:0'), tensor([ 96,  46,  72, 415, 108], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([415, 429], device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8414, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4300, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2714, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([124,   7, 163,  50], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([451], device='cuda:0'), tensor([  5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,
          5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5,
        392,  50, 268, 268, 268, 268, 268], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8231, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4435, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2666, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]:
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735]) 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([253,  87, 140, 316, 424,  83], device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0'), tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223,
        196, 221, 196], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425,  63, 165], device='cuda:0'), tensor([ 72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,  83, 270,
        415,  49, 301, 119, 430, 336,  93, 301, 387, 290, 301, 283, 210],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268,  85], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0382, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5119, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5501, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294,   4,   4], device='cuda:0'), tensor([423, 136, 423], device='cuda:0'), tensor([249, 134, 215, 134, 108], device='cuda:0'), tensor([ 16, 298,  73,  71, 136,  73, 424, 298], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302, 296], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 93, 215, 225, 424], device='cuda:0'), tensor([429, 451, 215, 177, 294, 215, 150,  71,  71, 215,  71],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8564, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3649, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2213, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([280], device='cuda:0'), tensor([424, 181, 305, 280, 415, 415, 238,  12, 415, 453, 415, 385, 210, 415,
        279, 453, 385,  32, 399, 121, 356, 279], device='cuda:0'), tensor([401,  81, 100, 121,  29, 453, 249, 356,  11,  44, 351],
       device='cuda:0'), tensor([ 68,  80,  68,  47, 131, 303,  47, 447,  47, 100, 453, 388, 257, 370],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([408, 155, 294,  63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420,
        405, 168], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([354,  88, 209, 411, 121, 105,  88, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4643, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4702, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00030/00055]	Time 0.31 (0.33)	Loss 1.47 (1.35)
		cls_loss 1.01 (0.92)	reg_loss 0.46 (0.43)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([441, 249, 441], device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([362], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7496, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3450, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0946, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407, 333,
        121], device='cuda:0'), tensor([90], device='cuda:0'), tensor([306, 306, 268, 306, 268, 268, 306, 268, 306, 306], device='cuda:0'), tensor([116, 116, 116, 116, 116, 404], device='cuda:0'), tensor([ 82, 295], device='cuda:0'), tensor([ 90, 351,  90,  43, 436, 441], device='cuda:0'), tensor([437, 386, 385, 121, 166,  93, 120, 424], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5898, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9100, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166,  71, 354, 116], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9202, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4256, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3458, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([383,  50, 291], device='cuda:0'), tensor([215, 345, 215, 150, 215, 296, 215, 105, 215, 340, 215, 217, 215, 215],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([305, 292, 305, 399, 363], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5023, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2066, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7089, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([356], device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([398, 441, 302, 249,  93, 399, 441, 385, 302, 354, 438],
       device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([204, 204, 204, 350, 204, 143], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6700, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3142, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9842, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190,
        357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([256], device='cuda:0'), tensor([131,  22, 296], device='cuda:0'), tensor([394, 411], device='cuda:0'), tensor([105,  95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351,
        217, 351, 217, 305,  32], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7188, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2917, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0106, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([436], device='cuda:0'), tensor([354], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7165, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3585, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0750, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 47, 392, 436, 392, 404, 385], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([98], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([182, 392,   5, 146, 182, 392], device='cuda:0'), tensor([ 12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437,
        294, 345, 294, 437], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7940, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1496, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 166, 166, 276, 437,  50, 437,  82,  50], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([451, 121, 305, 424, 305, 450], device='cuda:0'), tensor([ 50,  85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302,
        357, 399], device='cuda:0'), tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([399], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6987, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2718, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9705, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 398,  51, 398,  51, 398, 435], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        129, 100, 392, 430, 100, 257], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16, 219], device='cuda:0'), tensor([286, 199, 447,  93,  71,  93, 315, 315, 447, 315, 431, 315, 315,  93,
         48, 447, 365, 431,  83, 447, 447, 315,  67, 431, 438, 216],
       device='cuda:0'), tensor([100,  80, 100,  80, 166, 181,  71, 354], device='cuda:0'), tensor([392, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4676, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4545, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00040/00055]	Time 0.31 (0.32)	Loss 1.45 (1.38)
		cls_loss 0.99 (0.94)	reg_loss 0.47 (0.44)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269, 279, 269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269],
       device='cuda:0'), tensor([296], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351],
       device='cuda:0'), tensor([ 50, 309, 279, 121, 309], device='cuda:0'), tensor([225, 441, 285, 108, 441], device='cuda:0'), tensor([256], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6881, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2992, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9873, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([ 96, 338, 351, 436, 351], device='cuda:0'), tensor([394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314, 184,
        147,  95, 231], device='cuda:0'), tensor([93], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([264, 292, 399, 142,  80, 142], device='cuda:0'), tensor([255], device='cuda:0'), tensor([430,  11, 452, 284], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7144, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2788, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9932, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([137,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([283, 283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280],
       device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436, 334, 436], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([443], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8121, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3529, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1651, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([166, 294], device='cuda:0'), tensor([332, 156, 156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,
         11, 420], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201], device='cuda:0'), tensor([436,  80, 385,  22,  22, 257, 133, 399, 302], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8951, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3058, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([436, 436, 408, 279, 408, 436, 408, 436, 408, 436], device='cuda:0'), tensor([437,  90,  44, 195], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 93, 158,  93], device='cuda:0'), tensor([ 93, 315, 244], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5152, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2645, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7797, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([220, 181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137,
        357, 431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294, 357,
        431, 447, 357, 431], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351, 197, 351, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9037, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3983, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3019, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 47, 362, 325, 294, 294, 116, 404, 146, 325, 146, 345, 183,  47],
       device='cuda:0'), tensor([240], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([316, 430, 313, 411, 316, 411,  82, 411, 207, 284,  90, 197, 215,  63,
        385,  82], device='cuda:0'), tensor([417], device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7379, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3550, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0928, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([244], device='cuda:0'), tensor([301,  82, 294, 298, 441, 298, 441, 298, 441, 298], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([338, 256, 385, 354,  47, 354, 256, 116, 116, 116, 116, 325, 116],
       device='cuda:0'), tensor([436, 316, 433], device='cuda:0'), tensor([327,  52,  14, 436], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5688, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2562, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8250, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9187, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4374, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3561, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([436,  10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2535, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7832, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00050/00055]	Time 0.31 (0.32)	Loss 0.78 (1.26)
		cls_loss 0.53 (0.85)	reg_loss 0.25 (0.40)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,
         37, 411, 411, 411,  50], device='cuda:0'), tensor([436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,
         84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([451], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9861, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4648, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4510, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([14, 61], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([105, 268], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([441, 279, 441], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([ 10, 366,  10, 436, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4621, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2154, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6776, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([412,  87, 398, 116, 412, 412,  87], device='cuda:0'), tensor([398, 256, 398, 398, 376, 398,   9, 398,  82], device='cuda:0'), tensor([ 50,  50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432],
       device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([121, 124, 332, 248, 298, 249,  93,  96, 441, 121, 441,  96, 121, 441],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8799, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3985, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2784, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([303, 325, 388, 116, 100,  51, 100, 303, 294, 289], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415,
        100], device='cuda:0'), tensor([ 32, 430, 441, 257, 415, 385, 441, 301, 385, 399], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([250,  50, 250, 432], device='cuda:0'), tensor([256], device='cuda:0'), tensor([406, 451, 406, 140], device='cuda:0'), tensor([401, 121,  62, 294,  75], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8984, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3765, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2749, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 6 finished with lr=0.00003787


[Train]: Epoch 7 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([50], device='cuda:0'), tensor([ 47, 392, 436, 392,  47, 392], device='cuda:0'), tensor([412, 357, 357, 398, 412, 357, 357, 398, 357, 412], device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21,
        279], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0'), tensor([436, 366,  10, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7155, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4629, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1785, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([304, 437, 436, 279, 296, 302, 422, 121,  30], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5854, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3098, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8952, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([219, 448, 387, 127], device='cuda:0'), tensor([340, 236, 121, 312], device='cuda:0'), tensor([80], device='cuda:0'), tensor([ 87, 120, 201, 430, 201, 316, 316, 316, 305], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 158,  93], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7920, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3548, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1468, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([436,  82,   0], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5703, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2770, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8473, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 432, 268, 268], device='cuda:0'), tensor([402, 225, 441, 285, 108, 441], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([429, 451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329],
       device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([  9, 163, 398], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6900, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2999, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9899, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98, 283, 301,
        283, 329], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([159, 177, 294], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([300, 451, 451], device='cuda:0'), tensor([295, 356], device='cuda:0'), tensor([181,   9, 155, 121,  43,  17], device='cuda:0'), tensor([100,  88,  99,  88, 187, 100,  88,  88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7062, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3958, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1019, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5577, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2628, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8205, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([], device='cuda:0', dtype=torch.int64), tensor([379, 430, 309,  50], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([436, 240], device='cuda:0'), tensor([431, 294], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([ 80, 404, 116,  88, 189, 388, 404, 116, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5292, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7709, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([441, 451, 441, 451,  93], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7905, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4635, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2540, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 430, 313, 165, 205, 156, 121, 156,  63], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0'), tensor([408], device='cuda:0'), tensor([294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417, 388,
        417, 411, 417, 417, 417, 314, 417, 417, 417, 436, 417],
       device='cuda:0'), tensor([200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,
         85, 293,  84,  85,  44, 438, 345, 167, 108, 436], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3369, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5971, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9340, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 121, 224], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([440, 440, 436, 137, 357, 220], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([338,  36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([398, 376], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5423, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2568, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7991, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00010/00055]	Time 0.37 (0.37)	Loss 0.80 (0.80)
		cls_loss 0.54 (0.54)	reg_loss 0.26 (0.26)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 253, 279, 253, 253, 142, 230, 121, 171,  61], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([110, 394, 257, 441,  44,  22, 384, 436], device='cuda:0'), tensor([249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 82,   0,  10,   0, 409], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6826, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3451, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0277, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([323, 121, 269, 323], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387, 385, 215],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([258, 132], device='cuda:0'), tensor([356,  11,  44, 351, 121, 351, 127, 351, 351, 351, 351],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6927, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3097, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0024, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408], device='cuda:0'), tensor([436], device='cuda:0'), tensor([436, 383,  50, 291], device='cuda:0'), tensor([351, 196, 351, 429, 351, 429, 351, 231, 196, 280, 280, 280, 305, 345,
        201, 305, 305], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 369],
       device='cuda:0'), tensor([451, 451, 436,  15, 294], device='cuda:0'), tensor([90], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7464, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3641, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1106, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215,
        409], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([100, 210,  68, 121, 404, 257, 385,  80, 116,  19, 182],
       device='cuda:0'), tensor([ 93, 351,  93, 351,  93, 295, 351, 325, 295, 351], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([247,  80,  91, 411,  88,  80,  88,  91,  88], device='cuda:0'), tensor([ 87, 121,   9,  12, 425,  63, 165], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8675, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4668, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3343, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121],
       device='cuda:0'), tensor([221], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([ 93, 394,  30, 437, 394, 394,  44, 385, 288, 286], device='cuda:0'), tensor([268, 411], device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159, 280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7475, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3534, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1009, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([268], device='cuda:0'), tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116, 263,
        116], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([ 80, 116, 404, 116], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7255, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3932, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1187, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 181], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268, 146, 411, 268,
        146, 411, 268,  73, 268], device='cuda:0'), tensor([424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,  37,
         22,  22,  37,  49, 122,  37,  37, 217, 329,  37], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([  6, 158], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0097, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4756, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4853, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 51, 116,  19, 116,  93, 447,  68,  47, 443,  93,  19, 389,  47, 200],
       device='cuda:0'), tensor([316, 301], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([ 47, 404], device='cuda:0'), tensor([402, 452, 437, 300], device='cuda:0'), tensor([260,  44, 447, 294, 392, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5797, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2752, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8549, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([  8, 399, 385, 436, 436, 408, 279, 408, 436, 408, 436, 408],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([298], device='cuda:0'), tensor([90, 11], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,
         44,   5, 138, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9375, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4590, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3965, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([181, 205, 436, 345], device='cuda:0'), tensor([269, 279, 269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269],
       device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([89], device='cuda:0'), tensor([399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([294], device='cuda:0'), tensor([439, 436, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6257, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2874, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9132, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00020/00055]	Time 0.31 (0.34)	Loss 0.91 (0.86)
		cls_loss 0.63 (0.58)	reg_loss 0.29 (0.27)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 437, 436, 283,  82], device='cuda:0'), tensor([249], device='cuda:0'), tensor([  8,  32, 385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437],
       device='cuda:0'), tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6920, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3287, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0207, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([14], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([295, 295, 295, 295, 195], device='cuda:0'), tensor([264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329],
       device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9917, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5056, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4973, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7,   7, 436, 247, 247, 100, 181,   9], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([108,   8,   8, 294,   8, 436, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6897, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0611, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 394, 255, 394], device='cuda:0'), tensor([439], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([  8, 385,  47, 109, 195,  47, 256,  80, 109, 325,  47],
       device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214, 316], device='cuda:0'), tensor([393,  87, 437, 332, 437,  95,  83, 286, 407, 437,  21, 168, 100,  21,
        437,  21, 329, 292,  21, 437], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7144, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3062, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0206, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([159, 354, 423,  83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257,
        436], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([201,  90, 371, 430, 371, 424, 371], device='cuda:0'), tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9096, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3811, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351, 197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,
         82,  90,  37, 445, 286,  90], device='cuda:0'), tensor([256], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([302, 408, 399], device='cuda:0'), tensor([268], device='cuda:0'), tensor([424, 166, 385, 166], device='cuda:0'), tensor([245,  67,  96,  22, 276, 453, 416, 424, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6052, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2362, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8413, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([451, 304], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184,   8, 408, 436],
       device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([437,  93, 437, 294, 345, 294, 437, 294, 437, 286, 280, 437, 286, 345,
        437, 286, 329], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7721, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3977, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1698, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([384, 215, 215, 215, 402, 215], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([226, 201, 230, 201, 351,  90, 351,  90,  43, 436, 441],
       device='cuda:0'), tensor([ 71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223, 219,
        387, 184,  76, 247, 279, 223,  50, 310, 279,  70], device='cuda:0'), tensor([383, 441,  63, 441], device='cuda:0'), tensor([191], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([303, 363, 281, 183, 361, 404, 285, 213, 430, 183, 388, 338, 281, 116,
        138, 311], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0064, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4380, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4444, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([93], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5420, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 354,  47,  36, 354, 183,  36, 256, 256, 325, 354, 404,  47, 116,
         47, 256], device='cuda:0'), tensor([441, 268, 138, 302,  76, 345,  70, 441, 356, 279,  76, 399,  76, 396,
        441, 316, 302, 441], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([232, 116, 116, 138, 294, 362], device='cuda:0'), tensor([338, 401], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0609, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4986, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5595, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00030/00055]	Time 0.31 (0.33)	Loss 1.56 (1.09)
		cls_loss 1.06 (0.74)	reg_loss 0.50 (0.35)
max_len 1024
feat_lens
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([6078, 1536])torch.Size([1536, 1300])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([4389, 1536])
feats2 torch.Size([1536, 4389])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([3375, 1536]) [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 121, 242, 242], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100],
       device='cuda:0'), tensor([333], device='cuda:0'), tensor([ 52,   9,  52, 294,  52,  93,  52, 436,  52,  44, 302,  52, 131],
       device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([114,  80, 258, 376], device='cuda:0'), tensor([332, 100, 245, 451, 100, 100, 443, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8205, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3454, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1659, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([385,   8, 404,  47, 435, 124, 447, 335,  82, 320], device='cuda:0'), tensor([385, 183, 361, 203, 385, 325, 397, 325, 354, 370, 213, 183, 354, 404,
        124], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([255, 255, 255, 255], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7373, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0489, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 436], device='cuda:0'), tensor([284], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([4], device='cuda:0'), tensor([301, 436], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3310, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1613, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4923, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([298,  76, 298, 441, 280,  96], device='cuda:0'), tensor([408], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 96, 301,  91, 294, 137, 294], device='cuda:0'), tensor([  9, 279,  93, 394, 183, 435, 311, 232,  36, 120,  36,  36,  73, 116],
       device='cuda:0'), tensor([127, 325, 430, 127, 224, 438, 213,  80, 121, 423, 294,  63,  22],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8203, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3570, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1773, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([142, 142], device='cuda:0'), tensor([392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 129, 100, 392], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 73, 105, 283, 280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150,
        394, 150, 437, 425, 150, 437, 150, 397], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8391, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4262, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2652, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 93,  10, 155,  10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87,
        436, 405, 100], device='cuda:0'), tensor([108,  70, 447,  44, 383, 294, 224, 201, 121, 447, 438, 121, 215],
       device='cuda:0'), tensor([220, 292,  49, 415,  85, 357], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([315,  73, 401, 441, 451, 305, 451, 121, 315, 451], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9006, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4876, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3882, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 383, 430], device='cuda:0'), tensor([182, 392, 146], device='cuda:0'), tensor([ 37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,
         50, 157,  90, 157,  37], device='cuda:0'), tensor([315,  82, 431, 385, 431, 315, 213, 216, 436,  82, 103, 385, 385, 103,
          8, 365, 103, 302, 103], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,
         50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50],
       device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1451, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5481, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6932, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([417], device='cuda:0'), tensor([163], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([189, 313], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([430, 319, 319, 120, 319,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5215, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2135, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7349, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([88], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([ 30, 173], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,
         82], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([15], device='cuda:0'), tensor([385, 155, 131, 119], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5746, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2931, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8677, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,
         10, 315], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([440, 121, 430, 197, 440, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3365, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9356, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00040/00055]	Time 0.31 (0.33)	Loss 0.94 (1.05)
		cls_loss 0.60 (0.71)	reg_loss 0.34 (0.34)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417, 159,  31, 121, 114, 326, 224, 224, 305,  32], device='cuda:0'), tensor([100], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([  5, 268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,
          5, 392, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8673, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4757, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3430, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0,   7],
       device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0'), tensor([ 93, 221, 221, 137,   0,  22,  52, 385], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9],
       device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([142, 182, 359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9284, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4183, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3467, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121], device='cuda:0'), tensor([146], device='cuda:0'), tensor([447,  93, 294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,
         95, 436], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([405, 168, 405,  82, 213, 285, 405, 294,  21, 302], device='cuda:0'), tensor([256], device='cuda:0'), tensor([436, 359, 436, 359, 441, 359, 203, 359], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7507, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3327, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0835, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305], device='cuda:0'), tensor([315, 244], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([282, 270, 385, 393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9,
        181, 382], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([ 11,  11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6802, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2891, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9693, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([ 10, 220, 436,  71,  93,  10, 220, 220, 436, 357], device='cuda:0'), tensor([392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([286, 424,  91, 451,  91, 225,  75,  91,  75,  91], device='cuda:0'), tensor([385, 122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135,
        135,  93, 214, 351,  96, 155, 351], device='cuda:0'), tensor([219, 181], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([247, 108,  96,  96, 121, 348,  96, 191,  96,  96, 215, 313,  96],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0872, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4744, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5615, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([215], device='cuda:0'), tensor([408], device='cuda:0'), tensor([385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438, 441],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([406], device='cuda:0'), tensor([244], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4341, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1723, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6063, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11,  96, 105, 226,  71, 338], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([436,  14, 436,  14], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([248, 138, 164, 147,  93,  25, 336, 241, 184, 296, 411,  50, 254, 415,
        147, 421, 421,  82, 421, 228], device='cuda:0'), tensor([262, 100, 262, 100, 430, 384, 262, 339,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8222, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1502, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 46,  72, 294,  63], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4640, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2157, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6796, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([294, 249], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([ 93, 244, 432], device='cuda:0'), tensor([ 70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([225], device='cuda:0'), tensor([398, 436, 398,  51, 398,  51, 398, 435], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6311, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2858, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9169, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 121, 415], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([399, 363, 305, 426, 426, 252, 367, 305, 426, 252, 367, 426, 252],
       device='cuda:0'), tensor([385, 133, 388,  80, 183,  80,  80], device='cuda:0'), tensor([9], device='cuda:0'), tensor([436, 402, 181, 181, 181, 181, 181, 181, 296, 181, 219, 424, 181],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8173, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4072, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2246, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00050/00055]	Time 0.31 (0.32)	Loss 1.22 (1.09)
		cls_loss 0.82 (0.73)	reg_loss 0.41 (0.36)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 234, 215], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([451,  49, 424, 218, 436], device='cuda:0'), tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,
         44, 200], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9079, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3857, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2936, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([436], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([399, 230, 277, 305, 175, 197, 121, 197], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,
         50, 310], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9019, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2953, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([201], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([256], device='cuda:0'), tensor([4], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4208, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1795, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6003, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121], device='cuda:0'), tensor([2, 2, 2, 2, 2], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([405, 113, 405,  93, 405,  93, 405,  93], device='cuda:0'), tensor([411,  50, 415,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8553, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3870, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2423, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 7 finished with lr=0.00004328


[Train]: Epoch 8 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([260,  44, 447], device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([305], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 93, 283], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3573, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1789, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5362, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([181,  30, 181, 181,   9], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1561, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([209, 311, 385, 205], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([100], device='cuda:0'), tensor([279, 269, 269, 433, 323, 323], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5628, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2824, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8452, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268], device='cuda:0'), tensor([121,  50,  10], device='cuda:0'), tensor([406], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5284, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2484, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7768, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([435, 124, 447, 335,  82, 320, 320], device='cuda:0'), tensor([439], device='cuda:0'), tensor([333,  58], device='cuda:0'), tensor([392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([257, 385, 453, 110, 394, 257, 441,  44,  22, 384, 436],
       device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([451, 142, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6315, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2710, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9025, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([415, 436, 242, 415, 121, 242, 242], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([120, 424, 166, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4629, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2573, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7202, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([315, 437, 305, 437, 121, 441, 437,  50, 305, 437, 315, 437, 315, 120,
        305, 284], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([215, 436, 400, 430, 351, 430, 430, 351], device='cuda:0'), tensor([ 22, 436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8293, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4226, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2519, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([431, 436, 220, 242, 220, 242, 137, 220], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349],
       device='cuda:0'), tensor([181, 219, 424, 181], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([436, 383,  50], device='cuda:0'), tensor([268, 146, 411, 268,  73, 268, 411, 268, 146, 430, 411, 268, 105, 268,
        280, 268, 411, 268, 280, 268], device='cuda:0'), tensor([441, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398, 396, 268,
        268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256, 441, 268,
        268, 138, 302,  76, 345], device='cuda:0'), tensor([215, 215, 215, 402, 215, 215, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1585, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6055, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7640, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        354, 256, 100, 392], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([247], device='cuda:0'), tensor([201,  90, 371, 430, 371, 424, 371], device='cuda:0'), tensor([398, 256], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([47], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6349, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3896, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0245, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 71, 390, 453,  93, 393, 100, 393, 385, 393, 305, 393, 305],
       device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([146,  71, 390], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5671, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8608, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([ 95, 436, 440,  82], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([417], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2970, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8977, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00010/00055]	Time 0.38 (0.38)	Loss 0.90 (0.90)
		cls_loss 0.60 (0.60)	reg_loss 0.30 (0.30)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([90, 11], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([119, 131, 121, 131], device='cuda:0'), tensor([ 85, 302, 363, 385, 247, 294, 217, 436,  93], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6394, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3366, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9760, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37,
        436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([116, 116, 116,  47, 354], device='cuda:0'), tensor([ 89, 319, 406, 451], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([436, 394, 121, 123,  80, 436, 436,  80, 436, 436,  80,  80, 121, 237,
        388, 311, 354], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326, 395,  85], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2711, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5047, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7758, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7,   7,   7, 436, 247, 247, 100, 181], device='cuda:0'), tensor([295], device='cuda:0'), tensor([225], device='cuda:0'), tensor([100, 121,  29, 453, 249, 356,  11,  44, 351, 121, 351],
       device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299,  32,  93],
       device='cuda:0'), tensor([116, 116, 116, 116, 404, 138], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([301, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5189, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8040, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93],
       device='cuda:0'), tensor([ 31, 415,  63, 279, 121, 411, 401], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 80,  80, 450], device='cuda:0'), tensor([338, 338, 338,  36, 354, 389,  93,  36,  36, 116, 116],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311,
        417, 388, 417, 411, 417, 417, 417, 314, 417], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0280, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5504, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([351, 197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,
         82,  90,  37, 445, 286,  90], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([351, 294,  62,  10], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([441, 298, 441,  96, 441, 298, 441], device='cuda:0'), tensor([436,  44,  37,  37,  37, 207,  70, 270,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8035, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3914, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1949, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([80], device='cuda:0'), tensor([175, 120,  98, 451], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4274, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1884, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6158, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([217, 305, 402, 305, 149, 302,  72, 196,  43, 402, 305, 128, 236, 128],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([398], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([451, 451, 451, 451, 451, 155, 451], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37,  37, 257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7646, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3533, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1179, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([31], device='cuda:0'), tensor([430,  75], device='cuda:0'), tensor([82], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([316, 142, 249], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2731, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2181, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4913, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268,  37, 268, 348], device='cuda:0'), tensor([100], device='cuda:0'), tensor([409,  44, 319], device='cuda:0'), tensor([256, 412, 412, 138, 398, 354, 412, 256, 138, 398, 354, 256, 354, 412,
        138, 398, 411, 412, 316, 412, 138, 138, 354, 256, 354, 398, 354, 412,
        256, 354, 412, 138, 398, 256, 354, 398, 412, 138, 398, 256, 412],
       device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([392, 146,   5, 378, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9935, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5497, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5432, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384],
       device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301, 119], device='cuda:0'), tensor([256], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4390, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3382, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00020/00055]	Time 0.32 (0.35)	Loss 1.34 (1.12)
		cls_loss 0.90 (0.75)	reg_loss 0.44 (0.37)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50,
        157,  90, 157,  37], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([121], device='cuda:0'), tensor([ 47, 392, 436, 392,  47, 392], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313], device='cuda:0'), tensor([445, 236, 181, 236, 181, 107, 181, 352, 279, 340, 121, 424],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7802, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1919, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32, 385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121],
       device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([136, 423, 305], device='cuda:0'), tensor([392, 294, 121, 289], device='cuda:0'), tensor([295], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5647, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2991, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8638, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([137,  50, 291, 438, 396, 438, 291, 438, 291], device='cuda:0'), tensor([408], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([93], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([399], device='cuda:0'), tensor([268, 268, 306, 268, 306, 306, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3983, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1805, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5788, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([9], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([385, 436, 436, 408, 279, 408, 436, 408, 436, 408, 436],
       device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([ 80,  80, 443,  93, 166], device='cuda:0'), tensor([124, 142, 166, 294], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([354, 430,  11, 452], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5569, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2972, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8541, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50],
       device='cuda:0'), tensor([302, 436, 302,  93, 302,  96, 294, 415, 385], device='cuda:0'), tensor([315], device='cuda:0'), tensor([215], device='cuda:0'), tensor([181], device='cuda:0'), tensor([230,  46,  93, 215, 249, 134, 215, 134, 108], device='cuda:0'), tensor([354, 394, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5773, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3053, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8826, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302, 405], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([357, 296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9,
        298, 279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279, 197],
       device='cuda:0'), tensor([412, 398, 116, 357, 412, 357, 412, 357, 398], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([220, 220, 137,  93, 430,  10, 220, 242, 357, 431], device='cuda:0'), tensor([248, 302, 248,  71, 224], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0064, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5101, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5166, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 436, 294, 315, 436, 315], device='cuda:0'), tensor([256], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6204, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9976, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 382], device='cuda:0'), tensor([250,  50, 250, 432], device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([ 88, 100,  88, 100,  88,  88, 100,  88, 100,  88, 100,  88, 100,  88,
        100,  88, 100,  99,  88, 100], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0456, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5852, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6307, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([166], device='cuda:0'), tensor([225, 108, 305, 285, 305, 441, 225,  16,  76, 418], device='cuda:0'), tensor([181, 219, 181], device='cuda:0'), tensor([295, 295, 295, 295, 195, 295], device='cuda:0'), tensor([103, 385, 385, 103,   8, 365, 103, 302, 103, 436, 103, 436],
       device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5365, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2159, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7524, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([], device='cuda:0', dtype=torch.int64), tensor([249, 155, 131, 191], device='cuda:0'), tensor([89], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([392, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268,
        268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447,
        268, 313,   5, 392,  50, 268, 268], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116, 195], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7138, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4185, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1324, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00030/00055]	Time 0.31 (0.34)	Loss 1.13 (1.12)
		cls_loss 0.71 (0.74)	reg_loss 0.42 (0.38)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  32, 453,  31, 300, 436,  31, 436, 200, 208, 121, 264, 336, 436],
       device='cuda:0'), tensor([363, 305, 187, 305, 187, 305, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([302, 408, 399], device='cuda:0'), tensor([100,  96,  71,  30,  71], device='cuda:0'), tensor([14], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([296, 108, 258,  71, 159, 280,  71,  71, 424, 201], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8350, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4026, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2376, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7357, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4029, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1386, device='cuda:0', grad_fn=<AddBackward0>)}
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([905, 1536])
feats2 torch.Size([1536, 905])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([546, 1536])
feats2 torch.Size([1536, 546])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([1271, 1536])
feats2 torch.Size([1536, 1271])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([1814, 1536])
feats2 torch.Size([1536, 1814])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([1972, 1536])
feats2 torch.Size([1536, 1972])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([2444, 1536])
feats2 torch.Size([1536, 2444])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([559, 1536])
feats2 torch.Size([1536, 559])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1408, 1536])
feats2 torch.Size([1536, 1408])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([2007, 1536])
feats2 torch.Size([1536, 2007])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([8136, 1536])
feats2 torch.Size([1536, 8136])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([2221, 1536])
feats2 torch.Size([1536, 2221])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([446, 1536])
feats2 torch.Size([1536, 446])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([2199, 1536])
feats2 torch.Size([1536, 2199])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([1097, 1536])
feats2 torch.Size([1536, 1097])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([826, 1536])
feats2 torch.Size([1536, 826])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([1644, 1536])
feats2 torch.Size([1536, 1644])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([1716, 1536])
feats2 torch.Size([1536, 1716])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([1071, 1536])
feats2 torch.Size([1536, 1071])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([1085, 1536])
feats2 torch.Size([1536, 1085])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([333, 354, 100, 298], device='cuda:0'), tensor([4], device='cuda:0'), tensor([4], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([249, 443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([294], device='cuda:0'), tensor([384,  19, 182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113,
        105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4749, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6972, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([15], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([451], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([148], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1300, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4621, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 264, 294, 329,  93], device='cuda:0'), tensor([388, 232, 388, 232, 116, 116, 138, 294], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332, 269, 407,
        121], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([408], device='cuda:0'), tensor([121], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2810, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9466, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 319, 319], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([187], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286, 294], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([215,  76,  37, 399, 113,  37,  37, 150,  37, 280,  37, 433],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8393, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4324, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2717, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([113], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329],
       device='cuda:0'), tensor([305, 116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([441, 301, 433, 294, 385, 385, 217, 385, 121, 441], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4826, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2836, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7662, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([451, 176, 176], device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([ 52, 257, 234,  63, 399, 121], device='cuda:0'), tensor([ 86, 384,  27, 105, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5255, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2404, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7659, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225, 424, 225, 215,  91,  63, 113], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([295], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([399, 216], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([181,  82, 181, 436,  82, 313,  82, 181,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5718, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3021, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8739, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,
         21, 224,  21], device='cuda:0'), tensor([ 32,  95, 415], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([425,  22, 258, 296, 408, 110, 197], device='cuda:0'), tensor([424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([327], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9150, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4514, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3664, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00040/00055]	Time 0.32 (0.33)	Loss 1.37 (1.18)
		cls_loss 0.92 (0.78)	reg_loss 0.45 (0.40)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50], device='cuda:0'), tensor([244], device='cuda:0'), tensor([384,  11,  43,  32, 309, 429, 451, 215, 177, 294], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,  50, 268,
         50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9022, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4255, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3278, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([ 63, 234, 215,  50,  50], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82], device='cuda:0'), tensor([408], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([405, 444, 405, 113, 405,  93], device='cuda:0'), tensor([ 36,  88, 404, 116, 392, 116,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3117, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0500, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408,  22,  50], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37], device='cuda:0'), tensor([63], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([338, 354, 215, 311, 388, 133, 133, 303, 345, 146,   5],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4000, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1764, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 127, 337, 345, 332, 337, 337, 214, 316], device='cuda:0'), tensor([451], device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437, 310,
        399, 415, 399, 302,  87, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8150, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3910, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2060, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 325, 397, 325, 354, 370, 213, 183, 354, 404, 124, 130, 446, 166],
       device='cuda:0'), tensor([245,  13, 245, 413, 245, 413, 319, 394], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([240], device='cuda:0'), tensor([134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313, 313,
        447, 138,  93], device='cuda:0'), tensor([249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8533, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3996, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2530, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 158,   6], device='cuda:0'), tensor([303, 325, 388, 116, 100,  51, 100, 303, 294, 289], device='cuda:0'), tensor([131, 397, 385, 302], device='cuda:0'), tensor([ 73, 105, 283, 280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150,
        394, 150, 437, 425, 150, 437, 150, 397], device='cuda:0'), tensor([442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([238, 378, 231, 100, 436], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0324, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4842, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5167, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([ 80, 354], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([423, 423, 333], device='cuda:0'), tensor([  8, 187,  96,  96, 226,  83, 439], device='cuda:0'), tensor([ 47, 256,  19, 109,  47, 388, 260, 256,  47, 256, 388],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3019, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8888, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 166,  82, 196, 286, 231, 385, 286, 385, 437, 166],
       device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([215], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([155, 219], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([338, 256, 385, 354,  47, 354, 256, 116, 116, 116, 116, 325, 116],
       device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6901, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3299, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0200, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 50, 309, 279, 121, 309], device='cuda:0'), tensor([  9, 218,  22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270,
        386,   9, 386, 184], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6828, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0245, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8686, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4176, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2863, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00050/00055]	Time 0.31 (0.33)	Loss 1.29 (1.20)
		cls_loss 0.87 (0.80)	reg_loss 0.42 (0.40)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([107, 107], device='cuda:0'), tensor([451, 443, 100, 120, 415,  15,  30], device='cuda:0'), tensor([ 44, 304, 217, 201,  88], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304],
       device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([ 63, 253, 177, 253,  87], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5883, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2607, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8490, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220], device='cuda:0'), tensor([ 93, 127, 294, 394, 411], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([249, 153, 121, 213, 270,  93, 270, 328,  59, 436, 224,  71, 385,  62],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4471, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6881, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7022, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3443, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0464, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 436, 436], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([ 50,  90,  50,  90,  50,  90,  50, 121, 159, 121, 384, 279],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4732, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2285, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7017, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 8 finished with lr=0.00004869


[Train]: Epoch 9 started
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([196, 294, 294,   9, 313,  52, 294, 181, 294], device='cuda:0'), tensor([ 19, 389,  47, 200,  49,  49, 138, 194, 388, 100,  30,  47, 370],
       device='cuda:0'), tensor([ 80, 399,  47, 399, 108, 425,  22, 258, 296, 408, 110],
       device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5,
        392, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392,
        268, 268, 268, 268, 268], device='cuda:0'), tensor([440,  82, 440, 441], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0724, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5742, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6465, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([268, 138,  70, 256, 354, 438, 268, 268, 256, 430, 438, 268, 256, 138,
         70, 398, 441, 302, 249,  93, 399, 441, 385, 302], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6189, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0862, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215], device='cuda:0'), tensor([240], device='cuda:0'), tensor([294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417, 388,
        417, 411, 417, 417, 417, 314, 417, 417, 417, 436, 417],
       device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6748, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3574, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0322, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([220, 292], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([399, 216], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0'), tensor([ 98, 451, 121, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3444, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5583, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 439, 436, 439], device='cuda:0'), tensor([208, 121, 264, 336, 436, 305, 215], device='cuda:0'), tensor([90], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([201], device='cuda:0'), tensor([215, 441, 415, 441,  49], device='cuda:0'), tensor([270, 385, 393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181,
        382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5098, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7389, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 319, 319], device='cuda:0'), tensor([430, 121, 249, 371, 201], device='cuda:0'), tensor([225,  50, 301], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([182, 453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80, 116],
       device='cuda:0'), tensor([148], device='cuda:0'), tensor([436, 441, 436, 441, 143, 279, 441,  32, 124,  71, 100],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5277, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8384, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0'), tensor([305, 354,  96, 187,  96], device='cuda:0'), tensor([ 82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82,
        436, 124, 223, 196], device='cuda:0'), tensor([394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209, 302, 123],
       device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([65], device='cuda:0'), tensor([305, 451,  73, 121,  44,  73, 315, 437, 305, 437], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7619, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3900, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1518, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([315, 436, 315, 108,   8,   8, 294,   8], device='cuda:0'), tensor([384, 270, 241, 415, 430, 294, 223, 223,  82, 248, 138, 164, 147,  93,
         25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421],
       device='cuda:0'), tensor([155, 131, 119], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([315], device='cuda:0'), tensor([304, 280], device='cuda:0'), tensor([121, 312, 334,  15, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6997, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3624, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0621, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 295], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 18,  44,  12,  14,  71, 316], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([107, 107,   2,   2], device='cuda:0'), tensor([ 63, 436,  80, 354], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5939, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2959, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8899, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([186, 325, 186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146, 325,
        146], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([441, 359, 203, 359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([120, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2572, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279], device='cuda:0'), tensor([47], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([215,  83, 405], device='cuda:0'), tensor([100,  88, 100,  99,  88, 100,  88,  88, 100,  88, 100,  88],
       device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8225, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5035, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3261, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00010/00055]	Time 0.38 (0.38)	Loss 1.33 (1.33)
		cls_loss 0.82 (0.82)	reg_loss 0.50 (0.50)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 298], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([392,  51, 392, 100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404,
        285], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6521, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3119, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9640, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([  9,  12, 425,  63, 165], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([256], device='cuda:0'), tensor([113], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([116, 404, 116,  47, 116, 116], device='cuda:0'), tensor([200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,
         85, 293,  84,  85,  44, 438, 345, 167, 108, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3478, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9756, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 436, 383], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([411], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4785, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3283, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8068, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224], device='cuda:0'), tensor([408], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([284], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([100], device='cuda:0'), tensor([338, 401], device='cuda:0'), tensor([ 80, 100, 100,  80, 100,  80, 166,  71, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2754, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1172, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3926, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([ 45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37, 247, 225,
         91,  91], device='cuda:0'), tensor([ 14, 436,  14, 436,  14], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5294, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3033, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8327, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 253, 279, 253, 253, 142, 230, 121, 171,  61], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([405, 294,  21, 302,  95], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286,
        411, 286, 411, 286,  90, 312,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0062, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5335, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5396, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([394, 257, 441,  44,  22, 384, 436, 384, 438], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([140, 451, 300], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5415, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2732, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8148, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([88], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,  83, 270, 415,
         49, 301, 119, 430, 336,  93, 301, 387, 290, 301, 283, 210],
       device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64)]
yes3 {'cls_loss': tensor(0.6929, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3193, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0122, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,   9, 436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21,
        128, 436,  21], device='cuda:0'), tensor([333, 354, 100, 298], device='cuda:0'), tensor([ 10, 315], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([156, 156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11,
        420], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([430, 384, 262, 339,  31, 445, 340, 277, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8292, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3548, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1840, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224,  44, 166, 268], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([398,  51, 398, 435, 398], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6767, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3592, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0359, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00020/00055]	Time 0.31 (0.35)	Loss 1.04 (1.18)
		cls_loss 0.68 (0.75)	reg_loss 0.36 (0.43)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 304, 217, 201,  88], device='cuda:0'), tensor([305], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([226, 351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,  30,  21,
        286,  21, 286, 105,  95, 273], device='cuda:0'), tensor([137, 256, 256, 256], device='cuda:0'), tensor([245, 413, 245, 413, 319, 394, 453, 100,  93], device='cuda:0'), tensor([412, 357, 398, 357, 412, 357, 357, 398, 412], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6479, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3575, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0054, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351,  63,  80, 351], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([268], device='cuda:0'), tensor([316, 316, 305, 366, 445, 441], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([302, 218, 305], device='cuda:0'), tensor([255], device='cuda:0'), tensor([215, 436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5434, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2695, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8129, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423], device='cuda:0'), tensor([436,  10, 357, 296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,
         10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279],
       device='cuda:0'), tensor([110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269,  71],
       device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8,
        395, 205, 326, 395,  85, 417], device='cuda:0'), tensor([396], device='cuda:0'), tensor([166], device='cuda:0'), tensor([142,  11, 441, 451, 441, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9886, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4609, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4495, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([181], device='cuda:0'), tensor([415, 430,  70,  44, 430, 394, 279,  82], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351, 197, 351, 121], device='cuda:0'), tensor([146,  83], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4640, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2675, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7315, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([ 87, 213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16,
        286,  16, 436], device='cuda:0'), tensor([340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121, 441],
       device='cuda:0'), tensor([279, 453, 385,  32, 399, 121, 356, 279, 273, 453, 196, 397, 279, 100,
        296], device='cuda:0'), tensor([316, 441, 441, 225, 108, 305, 285], device='cuda:0'), tensor([], device='cuda:0', dtype=torch.int64), tensor([ 80, 338,  80,  47, 354, 443,  88, 121, 354, 183, 124],
       device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8041, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4335, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2376, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  13, 221,  44], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([31], device='cuda:0'), tensor([369, 369, 369, 369, 174, 256, 174, 256, 174, 256], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3786, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1867, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5653, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([249, 399], device='cuda:0'), tensor([121, 184, 436, 224, 213, 436, 224, 436, 213,  19, 436, 384,  19, 182,
        121, 430, 436,  80], device='cuda:0'), tensor([408], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([ 50, 262,  31,  50, 365, 215, 305, 298, 292,  73, 399,  49],
       device='cuda:0'), tensor([166, 385, 437, 385, 399, 385, 399, 437,  50, 166, 166],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6238, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9960, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415, 184],
       device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([163], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([98], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5440, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3033, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8473, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([ 72, 436, 366], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407], device='cuda:0'), tensor([399, 249, 153, 121, 213, 270,  93, 270, 328,  59, 436, 224,  71, 385],
       device='cuda:0'), tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([258, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6183, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2844, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9027, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195], device='cuda:0'), tensor([270,  63], device='cuda:0'), tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93, 437], device='cuda:0'), tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([433, 323, 323, 121, 269], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6894, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4272, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1166, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00030/00055]	Time 0.32 (0.34)	Loss 1.12 (1.16)
		cls_loss 0.69 (0.73)	reg_loss 0.43 (0.43)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 146], device='cuda:0'), tensor([89], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([356], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4783, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2207, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6990, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  52, 436,  52,  44, 302,  52, 131,  40, 121], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 32, 309, 429, 451, 215, 177, 294, 215, 150,  71,  71],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([283,  93], device='cuda:0'), tensor([225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4839, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2512, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7351, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([9], device='cuda:0'), tensor([316,  12, 121, 120, 249,  31, 345,  96,  46,  72, 415],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,
         37,  22,  22,  37,  49, 122,  37,  37, 217, 329], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([  9,  83,  93, 104, 294,  83, 279, 107, 181, 107], device='cuda:0'), tensor([305], device='cuda:0'), tensor([215, 215, 215, 402, 215, 215, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7002, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3403, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0406, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15], device='cuda:0'), tensor([ 93, 100,  93, 100, 305, 305,  71, 390, 453], device='cuda:0'), tensor([4], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([100, 355, 116, 146], device='cuda:0'), tensor([146], device='cuda:0'), tensor([392,   5, 146, 182, 392, 146], device='cuda:0'), tensor([271, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1456, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5114, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 436,  44,  37,  37,  37, 207,  70, 270,  44], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0'), tensor([114,  80, 258], device='cuda:0'), tensor([ 47, 404, 285,  47, 404, 415, 194, 194, 415, 109, 325, 183,  47, 404],
       device='cuda:0'), tensor([392,  47, 392, 436, 392], device='cuda:0'), tensor([356,  11,  44, 351, 121, 351, 127, 351, 351, 351], device='cuda:0'), tensor([408, 268,  44, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146,
        411], device='cuda:0')]
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1480, 1536])
feats2 torch.Size([1536, 1480])
yes2
feats torch.Size([1791, 1536])
feats2 torch.Size([1536, 1791])
yes2
feats torch.Size([1304, 1536])
feats2 torch.Size([1536, 1304])
yes2
feats torch.Size([1293, 1536])
feats2 torch.Size([1536, 1293])
yes2
feats torch.Size([4802, 1536])
feats2 torch.Size([1536, 4802])
yes2
feats torch.Size([2231, 1536])
feats2 torch.Size([1536, 2231])
yes2
feats torch.Size([2902, 1536])
feats2 torch.Size([1536, 2902])
yes2
feats torch.Size([700, 1536])
feats2 torch.Size([1536, 700])
yes2
feats torch.Size([3260, 1536])
feats2 torch.Size([1536, 3260])
yes2
feats torch.Size([10678, 1536])
feats2 torch.Size([1536, 10678])
yes2
feats torch.Size([1330, 1536])
feats2 torch.Size([1536, 1330])
yes2
feats torch.Size([882, 1536])
feats2 torch.Size([1536, 882])
yes2
feats torch.Size([2676, 1536])
feats2 torch.Size([1536, 2676])
yes2
feats torch.Size([562, 1536])
feats2 torch.Size([1536, 562])
yes2
feats torch.Size([4968, 1536])
feats2 torch.Size([1536, 4968])
yes2
feats torch.Size([5981, 1536])
feats2 torch.Size([1536, 5981])
yes2
feats torch.Size([303, 1536])
feats2 torch.Size([1536, 303])
yes2
feats torch.Size([947, 1536])
feats2 torch.Size([1536, 947])
yes2
feats torch.Size([565, 1536])
feats2 torch.Size([1536, 565])
yes2
feats torch.Size([7458, 1536])
feats2 torch.Size([1536, 7458])
yes2
feats torch.Size([230, 1536])
feats2 torch.Size([1536, 230])
yes2
feats torch.Size([1780, 1536])
feats2 torch.Size([1536, 1780])
yes2
feats torch.Size([9968, 1536])
feats2 torch.Size([1536, 9968])
yes2
feats torch.Size([2428, 1536])
feats2 torch.Size([1536, 2428])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([506, 1536])
feats2 torch.Size([1536, 506])
yes2
feats torch.Size([10142, 1536])
feats2 torch.Size([1536, 10142])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1118, 1536])
feats2 torch.Size([1536, 1118])
yes2
feats torch.Size([278, 1536])
feats2 torch.Size([1536, 278])
yes2
feats torch.Size([706, 1536])
feats2 torch.Size([1536, 706])
yes2
feats torch.Size([1406, 1536])
feats2 torch.Size([1536, 1406])
yes2
feats torch.Size([3489, 1536])
feats2 torch.Size([1536, 3489])
yes2
feats torch.Size([612, 1536])
feats2 torch.Size([1536, 612])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([3990, 1536])
feats2 torch.Size([1536, 3990])
yes2
feats torch.Size([200, 1536])
feats2 torch.Size([1536, 200])
yes2
feats torch.Size([6894, 1536])
feats2 torch.Size([1536, 6894])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([7213, 1536])
feats2 torch.Size([1536, 7213])
yes2
feats torch.Size([442, 1536])
feats2 torch.Size([1536, 442])
yes2
feats torch.Size([3460, 1536])
feats2 torch.Size([1536, 3460])
yes2
feats torch.Size([10326, 1536])
feats2 torch.Size([1536, 10326])
yes2
feats torch.Size([6302, 1536])
feats2 torch.Size([1536, 6302])
yes2
feats torch.Size([2769, 1536])
feats2 torch.Size([1536, 2769])
yes2
feats torch.Size([122, 1536])
feats2 torch.Size([1536, 122])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([2308, 1536])
feats2 torch.Size([1536, 2308])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([4577, 1536])
feats2 torch.Size([1536, 4577])
yes2
feats torch.Size([2619, 1536])
feats2 torch.Size([1536, 2619])
yes2
feats torch.Size([8244, 1536])
feats2 torch.Size([1536, 8244])
yes2
feats torch.Size([243, 1536])
feats2 torch.Size([1536, 243])
yes2
feats torch.Size([195, 1536])
feats2 torch.Size([1536, 195])
yes2
feats torch.Size([764, 1536])
feats2 torch.Size([1536, 764])
yes2
feats torch.Size([5196, 1536])
feats2 torch.Size([1536, 5196])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([5583, 1536])
feats2 torch.Size([1536, 5583])
yes2
feats torch.Size([5842, 1536])
feats2 torch.Size([1536, 5842])
yes2
feats torch.Size([3169, 1536])
feats2 torch.Size([1536, 3169])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([4338, 1536])
feats2 torch.Size([1536, 4338])
yes2
feats torch.Size([3554, 1536])
feats2 torch.Size([1536, 3554])
yes2
feats torch.Size([1123, 1536])
feats2 torch.Size([1536, 1123])
yes2
feats torch.Size([2598, 1536])
feats2 torch.Size([1536, 2598])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([323, 1536])
feats2 torch.Size([1536, 323])
yes2
feats torch.Size([11867, 1536])
feats2 torch.Size([1536, 11867])
yes2
feats torch.Size([4356, 1536])
feats2 torch.Size([1536, 4356])
yes2
feats torch.Size([2480, 1536])
feats2 torch.Size([1536, 2480])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([6602, 1536])
feats2 torch.Size([1536, 6602])
yes2
feats torch.Size([1735, 1536])
feats2 torch.Size([1536, 1735])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([2275, 1536])
feats2 torch.Size([1536, 2275])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([402, 1536])
feats2 torch.Size([1536, 402])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1668, 1536])
feats2 torch.Size([1536, 1668])
yes2
feats torch.Size([7120, 1536])
feats2 torch.Size([1536, 7120])
yes2
feats torch.Size([4924, 1536])
feats2 torch.Size([1536, 4924])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([3906, 1536])
feats2 torch.Size([1536, 3906])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1474, 1536])
feats2 torch.Size([1536, 1474])
yes2
feats torch.Size([4515, 1536])
feats2 torch.Size([1536, 4515])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([584, 1536])
feats2 torch.Size([1536, 584])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([968, 1536])
feats2 torch.Size([1536, 968])
yes2
feats torch.Size([307, 1536])
feats2 torch.Size([1536, 307])
yes2
feats torch.Size([7235, 1536])
feats2 torch.Size([1536, 7235])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([3509, 1536])
feats2 torch.Size([1536, 3509])
yes2
feats torch.Size([1972, 1536])
yes3 {'cls_loss': tensor(0.9725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5199, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4924, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399],
       device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291], device='cuda:0'), tensor([425, 411, 207, 108,  70, 447,  44, 383, 294], device='cuda:0'), tensor([191], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        129, 100, 392, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8891, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4602, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3493, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([ 80, 100,  80,  93, 121, 124], device='cuda:0'), tensor([436, 103, 385, 103], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([ 23, 408, 436, 436, 408, 436], device='cuda:0'), tensor([58], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7418, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3743, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1161, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 432, 268], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5445, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3299, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8744, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255,
        275,   9, 436], device='cuda:0'), tensor([50], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([ 50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6217, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3578, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9795, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116, 263,
        116], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([294, 294, 385,   8, 404,  47, 435, 124, 447, 335,  82, 320],
       device='cuda:0'), tensor([294], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([187], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4836, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2772, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7608, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00040/00055]	Time 0.31 (0.33)	Loss 0.76 (1.06)
		cls_loss 0.48 (0.67)	reg_loss 0.28 (0.39)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([93], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([441, 431,   9, 431, 441, 431, 385, 431, 441, 220,  49, 441, 431, 436,
        220, 441, 220, 181, 441, 431,  50, 431], device='cuda:0'), tensor([  4, 358], device='cuda:0'), tensor([ 51,   8, 385,  47, 109, 195,  47, 256,  80, 109, 325],
       device='cuda:0'), tensor([9], device='cuda:0'), tensor([402, 181, 181, 181, 181, 181, 181, 296, 181, 219, 424, 181],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6908, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3854, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0762, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([443, 438, 305, 438, 305,  44, 305, 443, 434, 438], device='cuda:0'), tensor([4], device='cuda:0'), tensor([411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233],
       device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215, 409],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')] torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2335, 1536])
feats2 torch.Size([1536, 2335])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([1148, 1536])
feats2 torch.Size([1536, 1148])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([1531, 1536])
feats2 torch.Size([1536, 1531])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([455, 1536])
feats2 torch.Size([1536, 455])
yes2
feats torch.Size([651, 1536])
feats2 torch.Size([1536, 651])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([819, 1536])
feats2 torch.Size([1536, 819])
yes2
feats torch.Size([697, 1536])
feats2 torch.Size([1536, 697])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([5256, 1536])
feats2 torch.Size([1536, 5256])
yes2
feats torch.Size([2621, 1536])
feats2 torch.Size([1536, 2621])
yes2
feats torch.Size([889, 1536])
feats2 torch.Size([1536, 889])
yes2
feats torch.Size([1234, 1536])
feats2 torch.Size([1536, 1234])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1093, 1536])
feats2 torch.Size([1536, 1093])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([1686, 1536])
feats2 torch.Size([1536, 1686])
yes2
feats torch.Size([3869, 1536])
feats2 torch.Size([1536, 3869])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([66, 1536])
feats2 torch.Size([1536, 66])
yes2
feats torch.Size([3878, 1536])
feats2 torch.Size([1536, 3878])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([1132, 1536])
feats2 torch.Size([1536, 1132])
yes2
feats torch.Size([1889, 1536])
feats2 torch.Size([1536, 1889])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([1332, 1536])
feats2 torch.Size([1536, 1332])
yes2
feats torch.Size([3923, 1536])
feats2 torch.Size([1536, 3923])
yes2
feats torch.Size([4820, 1536])
feats2 torch.Size([1536, 4820])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([3413, 1536])
feats2 torch.Size([1536, 3413])
yes2
feats torch.Size([1422, 1536])
feats2 torch.Size([1536, 1422])
yes2
feats torch.Size([420, 1536])
feats2 torch.Size([1536, 420])
yes2
feats torch.Size([1341, 1536])
feats2 torch.Size([1536, 1341])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([3594, 1536])
feats2 torch.Size([1536, 3594])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([5423, 1536])
feats2 torch.Size([1536, 5423])
yes2
feats torch.Size([8431, 1536])
feats2 torch.Size([1536, 8431])
yes2
feats torch.Size([2956, 1536])
feats2 torch.Size([1536, 2956])
yes2
feats torch.Size([228, 1536])
feats2 torch.Size([1536, 228])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([3704, 1536])
feats2 torch.Size([1536, 3704])
yes2
feats torch.Size([997, 1536])
feats2 torch.Size([1536, 997])
yes2
feats torch.Size([2667, 1536])
feats2 torch.Size([1536, 2667])
yes2
feats torch.Size([6213, 1536])
feats2 torch.Size([1536, 6213])
yes2
feats torch.Size([825, 1536])
feats2 torch.Size([1536, 825])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([9919, 1536])
feats2 torch.Size([1536, 9919])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([2743, 1536])
feats2 torch.Size([1536, 2743])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([286, 1536])
feats2 torch.Size([1536, 286])
yes2
feats torch.Size([1832, 1536])
feats2 torch.Size([1536, 1832])
yes2
feats torch.Size([3042, 1536])
feats2 torch.Size([1536, 3042])
yes2
feats torch.Size([471, 1536])
feats2 torch.Size([1536, 471])
yes2
feats torch.Size([336, 1536])
feats2 torch.Size([1536, 336])
yes2
feats torch.Size([1056, 1536])
feats2 torch.Size([1536, 1056])
yes2
feats torch.Size([2813, 1536])
feats2 torch.Size([1536, 2813])
yes2
feats torch.Size([1978, 1536])
feats2 torch.Size([1536, 1978])
yes2
feats torch.Size([9762, 1536])
feats2 torch.Size([1536, 9762])
yes2
feats torch.Size([4355, 1536])
feats2 torch.Size([1536, 4355])
yes2
feats torch.Size([2350, 1536])
feats2 torch.Size([1536, 2350])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([1032, 1536])
feats2 torch.Size([1536, 1032])
yes2
feats torch.Size([2088, 1536])
feats2 torch.Size([1536, 2088])
yes2
feats torch.Size([1090, 1536])
feats2 torch.Size([1536, 1090])
yes2
feats torch.Size([1866, 1536])
feats2 torch.Size([1536, 1866])
yes2
feats torch.Size([5151, 1536])
feats2 torch.Size([1536, 5151])
yes2
feats torch.Size([2323, 1536])
feats2 torch.Size([1536, 2323])
yes2
feats torch.Size([249, 1536])
feats2 torch.Size([1536, 249])
yes2
feats torch.Size([4172, 1536])
feats2 torch.Size([1536, 4172])
yes2
feats torch.Size([257, 1536])
feats2 torch.Size([1536, 257])
yes2
feats torch.Size([4305, 1536])
feats2 torch.Size([1536, 4305])
yes2
feats torch.Size([1964, 1536])
feats2 torch.Size([1536, 1964])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([542, 1536])
feats2 torch.Size([1536, 542])
yes2
feats torch.Size([218, 1536])
feats2 torch.Size([1536, 218])
yes2
feats torch.Size([482, 1536])
feats2 torch.Size([1536, 482])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([4286, 1536])
feats2 torch.Size([1536, 4286])
yes2
feats torch.Size([267, 1536])
feats2 torch.Size([1536, 267])
yes2
feats torch.Size([855, 1536])
feats2 torch.Size([1536, 855])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1203, 1536])
feats2 torch.Size([1536, 1203])
yes2
feats torch.Size([1633, 1536])
feats2 torch.Size([1536, 1633])
yes2
feats torch.Size([284, 1536])
feats2 torch.Size([1536, 284])
yes2
feats torch.Size([1597, 1536])
feats2 torch.Size([1536, 1597])
yes2
feats torch.Size([1246, 1536])
feats2 torch.Size([1536, 1246])
yes2
feats torch.Size([995, 1536])
feats2 torch.Size([1536, 995])
yes2
feats torch.Size([847, 1536])
feats2 torch.Size([1536, 847])
yes2
feats torch.Size([252, 1536])
feats2 torch.Size([1536, 252])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([1772, 1536])
feats2 torch.Size([1536, 1772])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([33169, 1536])
feats2 torch.Size([1536, 33169])
yes2
feats torch.Size([687, 1536])
feats2 torch.Size([1536, 687])
yes2
feats torch.Size([368, 1536])
feats2 torch.Size([1536, 368])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1525, 1536])
feats2 torch.Size([1536, 1525])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([722, 1536])
feats2 torch.Size([1536, 722])
yes2
feats torch.Size([772, 1536])
feats2 torch.Size([1536, 772])
yes2
feats torch.Size([4834, 1536])
feats2 torch.Size([1536, 4834])
yes2
feats torch.Size([967, 1536])
feats2 torch.Size([1536, 967])
yes2
feats torch.Size([210, 1536])
feats2 torch.Size([1536, 210])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([1645, 1536])
feats2 torch.Size([1536, 1645])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([1496, 1536])
feats2 torch.Size([1536, 1496])
yes2
feats torch.Size([4954, 1536])
feats2 torch.Size([1536, 4954])
yes2
feats torch.Size([552, 1536])
feats2 torch.Size([1536, 552])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([430, 1536])
feats2 torch.Size([1536, 430])
yes2
feats torch.Size([1169, 1536])
feats2 torch.Size([1536, 1169])
yes2
feats torch.Size([1812, 1536])
feats2 torch.Size([1536, 1812])
yes2
feats torch.Size([5581, 1536])
feats2 torch.Size([1536, 5581])
yes2
feats torch.Size([83, 1536])
feats2 torch.Size([1536, 83])
yes2
feats torch.Size([2636, 1536])
feats2 torch.Size([1536, 2636])
yes2
feats torch.Size([1683, 1536])
feats2 torch.Size([1536, 1683])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([2967, 1536])
feats2 torch.Size([1536, 2967])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([2682, 1536])
feats2 torch.Size([1536, 2682])
yes2
feats torch.Size([2125, 1536])
feats2 torch.Size([1536, 2125])
yes2
feats torch.Size([1875, 1536])
feats2 torch.Size([1536, 1875])
yes2
feats torch.Size([2254, 1536])
feats2 torch.Size([1536, 2254])
yes2
feats torch.Size([3643, 1536])
feats2 torch.Size([1536, 3643])
yes2
feats torch.Size([1281, 1536])
feats2 torch.Size([1536, 1281])
yes2
feats torch.Size([331, 1536])
feats2 torch.Size([1536, 331])
yes2
feats torch.Size([8546, 1536])
feats2 torch.Size([1536, 8546])
yes2
feats torch.Size([919, 1536])
feats2 torch.Size([1536, 919])
yes2
feats torch.Size([879, 1536])
feats2 torch.Size([1536, 879])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([745, 1536])
feats2 torch.Size([1536, 745])
yes2
feats torch.Size([952, 1536])
feats2 torch.Size([1536, 952])
yes2
feats torch.Size([523, 1536])
feats2 torch.Size([1536, 523])
yes2
feats torch.Size([800, 1536])
feats2 torch.Size([1536, 800])
yes2
feats torch.Size([289, 1536])
feats2 torch.Size([1536, 289])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([10988, 1536])
feats2 torch.Size([1536, 10988])
yes2
feats torch.Size([6445, 1536])
feats2 torch.Size([1536, 6445])
yes2
feats torch.Size([28, 1536])
feats2 torch.Size([1536, 28])
yes2
feats torch.Size([3003, 1536])
feats2 torch.Size([1536, 3003])
yes2
feats torch.Size([6267, 1536])
feats2 torch.Size([1536, 6267])
yes2
feats torch.Size([6078, 1536])
feats2 torch.Size([1536, 6078])
yes2
feats torch.Size([1352, 1536])
feats2 torch.Size([1536, 1352])
yes2
feats torch.Size([1821, 1536])
feats2 torch.Size([1536, 1821])
yes2
feats torch.Size([496, 1536])
feats2 torch.Size([1536, 496])
yes2
feats torch.Size([233, 1536])
feats2 torch.Size([1536, 233])
yes2
feats torch.Size([3756, 1536])
feats2 torch.Size([1536, 3756])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3584, 1536])
feats2 torch.Size([1536, 3584])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([3400, 1536])
feats2 torch.Size([1536, 3400])
yes2
feats torch.Size([7255, 1536])
feats2 torch.Size([1536, 7255])
yes2
feats torch.Size([5204, 1536])
feats2 torch.Size([1536, 5204])
yes2
feats torch.Size([5793, 1536])
feats2 torch.Size([1536, 5793])
yes2
feats torch.Size([1435, 1536])
feats2 torch.Size([1536, 1435])
yes2
feats torch.Size([4857, 1536])
feats2 torch.Size([1536, 4857])
yes2
feats torch.Size([2431, 1536])
feats2 torch.Size([1536, 2431])
yes2
feats torch.Size([1652, 1536])
feats2 torch.Size([1536, 1652])
yes2
feats torch.Size([225, 1536])
feats2 torch.Size([1536, 225])
yes2
feats torch.Size([1182, 1536])
feats2 torch.Size([1536, 1182])
yes2
feats torch.Size([6467, 1536])
feats2 torch.Size([1536, 6467])
yes2
feats torch.Size([8671, 1536])
feats2 torch.Size([1536, 8671])
yes2
feats torch.Size([626, 1536])
feats2 torch.Size([1536, 626])
yes2
feats torch.Size([192, 1536])
feats2 torch.Size([1536, 192])
yes2
feats torch.Size([2631, 1536])
feats2 torch.Size([1536, 2631])
yes2
feats torch.Size([2705, 1536])
feats2 torch.Size([1536, 2705])
yes2
feats torch.Size([1208, 1536])
feats2 torch.Size([1536, 1208])
yes2
feats torch.Size([229, 1536])
feats2 torch.Size([1536, 229])
yes2
feats torch.Size([2924, 1536])
feats2 torch.Size([1536, 2924])
yes2
feats torch.Size([3660, 1536])
feats2 torch.Size([1536, 3660])
yes2
feats torch.Size([4910, 1536])
feats2 torch.Size([1536, 4910])
yes2
feats torch.Size([1977, 1536])
feats2 torch.Size([1536, 1977])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([2825, 1536])
feats2 torch.Size([1536, 2825])
yes2
feats torch.Size([8605, 1536])
feats2 torch.Size([1536, 8605])
yes2
feats torch.Size([2617, 1536])
feats2 torch.Size([1536, 2617])
yes2
feats torch.Size([2473, 1536])
feats2 torch.Size([1536, 2473])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1369, 1536])
feats2 torch.Size([1536, 1369])
yes2
feats torch.Size([3086, 1536])
feats2 torch.Size([1536, 3086])
yes2
feats torch.Size([1073, 1536])
feats2 torch.Size([1536, 1073])
yes2
feats torch.Size([950, 1536])
feats2 torch.Size([1536, 950])
yes2
feats torch.Size([638, 1536])
feats2 torch.Size([1536, 638])
yes2
feats torch.Size([791, 1536])
feats2 torch.Size([1536, 791])
yes2
feats torch.Size([1937, 1536])
feats2 torch.Size([1536, 1937])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([4022, 1536])
feats2 torch.Size([1536, 4022])
yes2
feats torch.Size([5412, 1536])
feats2 torch.Size([1536, 5412])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([811, 1536])
feats2 torch.Size([1536, 811])
yes2
feats torch.Size([5280, 1536])
feats2 torch.Size([1536, 5280])
yes2
feats torch.Size([6999, 1536])
feats2 torch.Size([1536, 6999])
yes2
feats torch.Size([2850, 1536])
feats2 torch.Size([1536, 2850])
yes2
feats torch.Size([13532, 1536])
feats2 torch.Size([1536, 13532])
yes2
feats torch.Size([2990, 1536])
feats2 torch.Size([1536, 2990])
yes2
feats torch.Size([2245, 1536])
feats2 torch.Size([1536, 2245])
yes2
feats torch.Size([1974, 1536])
feats2 torch.Size([1536, 1974])
yes2
feats torch.Size([2653, 1536])
feats2 torch.Size([1536, 2653])
yes2
feats torch.Size([1275, 1536])
feats2 torch.Size([1536, 1275])
yes2
feats torch.Size([363, 1536])
feats2 torch.Size([1536, 363])
yes2
feats torch.Size([3967, 1536])
feats2 torch.Size([1536, 3967])
yes2
feats torch.Size([2541, 1536])
feats2 torch.Size([1536, 2541])
yes2
feats torch.Size([1205, 1536])
feats2 torch.Size([1536, 1205])
yes2
feats torch.Size([2502, 1536])
feats2 torch.Size([1536, 2502])
yes2
feats torch.Size([10689, 1536])
feats2 torch.Size([1536, 10689])
yes2
feats torch.Size([10793, 1536])
feats2 torch.Size([1536, 10793])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1437, 1536])
feats2 torch.Size([1536, 1437])
yes2
feats torch.Size([5253, 1536])
feats2 torch.Size([1536, 5253])
yes2
feats torch.Size([8742, 1536])
feats2 torch.Size([1536, 8742])
yes2
feats torch.Size([1685, 1536])
feats2 torch.Size([1536, 1685])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([7176, 1536])
feats2 torch.Size([1536, 7176])
yes2
feats torch.Size([6047, 1536])
feats2 torch.Size([1536, 6047])
yes2
feats torch.Size([406, 1536])
feats2 torch.Size([1536, 406])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([1936, 1536])
feats2 torch.Size([1536, 1936])
yes2
feats torch.Size([642, 1536])
feats2 torch.Size([1536, 642])
yes2
feats torch.Size([10994, 1536])
feats2 torch.Size([1536, 10994])
yes2
feats torch.Size([5448, 1536])
feats2 torch.Size([1536, 5448])
yes2
feats torch.Size([6696, 1536])
feats2 torch.Size([1536, 6696])
yes2
feats torch.Size([399, 1536])
feats2 torch.Size([1536, 399])
yes2
feats torch.Size([2024, 1536])
feats2 torch.Size([1536, 2024])
yes2
feats torch.Size([4625, 1536])
feats2 torch.Size([1536, 4625])
yes2
feats torch.Size([2461, 1536])
feats2 torch.Size([1536, 2461])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([7835, 1536])
feats2 torch.Size([1536, 7835])
yes2
feats torch.Size([75, 1536])
feats2 torch.Size([1536, 75])
yes2
feats torch.Size([434, 1536])
feats2 torch.Size([1536, 434])
yes2
feats torch.Size([393, 1536])
feats2 torch.Size([1536, 393])
yes2
feats torch.Size([59, 1536])
feats2 torch.Size([1536, 59])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([3986, 1536])
feats2 torch.Size([1536, 3986])
yes2
feats torch.Size([3948, 1536])
feats2 torch.Size([1536, 3948])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([2348, 1536])
feats2 torch.Size([1536, 2348])
yes2
feats torch.Size([11903, 1536])
feats2 torch.Size([1536, 11903])
yes2
feats torch.Size([1533, 1536])
feats2 torch.Size([1536, 1533])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1954, 1536])
feats2 torch.Size([1536, 1954])
yes2
feats torch.Size([530, 1536])
feats2 torch.Size([1536, 530])
yes2
feats torch.Size([3140, 1536])
feats2 torch.Size([1536, 3140])
yes2
feats torch.Size([10068, 1536])
feats2 torch.Size([1536, 10068])
yes2
feats torch.Size([106, 1536])
feats2 torch.Size([1536, 106])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([3375, 1536])
feats2 torch.Size([1536, 3375])
yes2
feats torch.Size([433, 1536])
feats2 torch.Size([1536, 433])
yes2
feats torch.Size([8231, 1536])
feats2 torch.Size([1536, 8231])
yes2
feats torch.Size([1717, 1536])
feats2 torch.Size([1536, 1717])
yes2
feats torch.Size([580, 1536])
feats2 torch.Size([1536, 580])
yes2
feats torch.Size([1101, 1536])
feats2 torch.Size([1536, 1101])
yes2
feats torch.Size([3350, 1536])
feats2 torch.Size([1536, 3350])
yes2
feats torch.Size([426, 1536])
feats2 torch.Size([1536, 426])
yes2
feats torch.Size([2823, 1536])
feats2 torch.Size([1536, 2823])
yes2
feats torch.Size([1041, 1536])
feats2 torch.Size([1536, 1041])
yes2
feats torch.Size([1985, 1536])
feats2 torch.Size([1536, 1985])
yes2
feats torch.Size([2445, 1536])
feats2 torch.Size([1536, 2445])
yes2
feats torch.Size([485, 1536])
feats2 torch.Size([1536, 485])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([1318, 1536])
feats2 torch.Size([1536, 1318])
yes2
feats torch.Size([39, 1536])
feats2 torch.Size([1536, 39])
yes2
feats torch.Size([814, 1536])
feats2 torch.Size([1536, 814])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([1009, 1536])
feats2 torch.Size([1536, 1009])
yes2
feats torch.Size([2207, 1536])
feats2 torch.Size([1536, 2207])
yes2
feats torch.Size([802, 1536])
feats2 torch.Size([1536, 802])
yes2
feats torch.Size([1451, 1536])
feats2 torch.Size([1536, 1451])
yes2
feats torch.Size([5157, 1536])
feats2 torch.Size([1536, 5157])
yes2
feats torch.Size([2766, 1536])
feats2 torch.Size([1536, 2766])
yes2
feats torch.Size([1327, 1536])
feats2 torch.Size([1536, 1327])
yes2
feats torch.Size([3374, 1536])
feats2 torch.Size([1536, 3374])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([451, 1536])
feats2 torch.Size([1536, 451])
yes2
feats torch.Size([2476, 1536])
feats2 torch.Size([1536, 2476])
yes2
feats torch.Size([1279, 1536])
feats2 torch.Size([1536, 1279])
yes2
feats torch.Size([7935, 1536])
feats2 torch.Size([1536, 7935])
yes2
feats torch.Size([31822, 1536])
feats2 torch.Size([1536, 31822])
yes2
feats torch.Size([412, 1536])
feats2 torch.Size([1536, 412])
yes2
feats torch.Size([1175, 1536])
feats2 torch.Size([1536, 1175])
yes2
feats torch.Size([380, 1536])
feats2 torch.Size([1536, 380])
yes2
feats torch.Size([212, 1536])
feats2 torch.Size([1536, 212])
yes2
feats torch.Size([6185, 1536])
feats2 torch.Size([1536, 6185])
yes2
feats torch.Size([1166, 1536])
feats2 torch.Size([1536, 1166])
yes2
feats torch.Size([3461, 1536])
feats2 torch.Size([1536, 3461])
yes2
feats torch.Size([10032, 1536])
feats2 torch.Size([1536, 10032])
yes2
feats torch.Size([973, 1536])
feats2 torch.Size([1536, 973])
yes2
feats torch.Size([1427, 1536])
feats2 torch.Size([1536, 1427])
yes2
feats torch.Size([1605, 1536])
feats2 torch.Size([1536, 1605])
yes2
feats torch.Size([1845, 1536])
feats2 torch.Size([1536, 1845])
yes2
feats torch.Size([1017, 1536])
feats2 torch.Size([1536, 1017])
yes2
feats torch.Size([2150, 1536])
feats2 torch.Size([1536, 2150])
yes2
feats torch.Size([1402, 1536])
feats2 torch.Size([1536, 1402])
yes2
feats torch.Size([3258, 1536])
feats2 torch.Size([1536, 3258])
yes2
feats torch.Size([6678, 1536])
feats2 torch.Size([1536, 6678])
yes2
feats torch.Size([240, 1536])
feats2 torch.Size([1536, 240])
yes2
feats torch.Size([956, 1536])
feats2 torch.Size([1536, 956])
yes2
feats torch.Size([1983, 1536])
feats2 torch.Size([1536, 1983])
yes2
feats torch.Size([1786, 1536])
feats2 torch.Size([1536, 1786])
yes2
feats torch.Size([1129, 1536])
feats2 torch.Size([1536, 1129])
yes2
feats torch.Size([5863, 1536])
feats2 torch.Size([1536, 5863])
yes2
feats torch.Size([4255, 1536])
feats2 torch.Size([1536, 4255])
yes2
feats torch.Size([73, 1536])
feats2 torch.Size([1536, 73])
yes2
feats torch.Size([5951, 1536])
feats2 torch.Size([1536, 5951])
yes2
feats torch.Size([486, 1536])
feats2 torch.Size([1536, 486])
yes2
feats torch.Size([2170, 1536])
feats2 torch.Size([1536, 2170])
yes2
feats torch.Size([564, 1536])
feats2 torch.Size([1536, 564])
yes2
feats torch.Size([6241, 1536])
feats2 torch.Size([1536, 6241])
yes2
feats torch.Size([538, 1536])
feats2 torch.Size([1536, 538])
yes2
feats torch.Size([1797, 1536])
feats2 torch.Size([1536, 1797])
yes2
feats torch.Size([1176, 1536])
feats2 torch.Size([1536, 1176])
yes2
feats torch.Size([911, 1536])
feats2 torch.Size([1536, 911])
yes2
feats torch.Size([1991, 1536])
feats2 torch.Size([1536, 1991])
yes2
feats torch.Size([1300, 1536])
feats2 torch.Size([1536, 1300])
yes2
feats torch.Size([996, 1536])
feats2 torch.Size([1536, 996])
yes2
feats torch.Size([1958, 1536])
feats2 torch.Size([1536, 1958])
yes2
feats torch.Size([4548, 1536])
feats2 torch.Size([1536, 4548])
yes2
feats torch.Size([3762, 1536])
feats2 torch.Size([1536, 3762])
yes2
feats torch.Size([4921, 1536])
feats2 torch.Size([1536, 4921])
yes2
feats torch.Size([1269, 1536])
feats2 torch.Size([1536, 1269])
yes2
feats torch.Size([1747, 1536])
feats2 torch.Size([1536, 1747])
yes2
feats torch.Size([9485, 1536])
feats2 torch.Size([1536, 9485])
yes2
feats torch.Size([2620, 1536])
feats2 torch.Size([1536, 2620])
yes2
feats torch.Size([3309, 1536])
feats2 torch.Size([1536, 3309])
yes2
feats torch.Size([4906, 1536])
feats2 torch.Size([1536, 4906])
yes2
feats torch.Size([1993, 1536])
feats2 torch.Size([1536, 1993])
yes2
feats torch.Size([631, 1536])
feats2 torch.Size([1536, 631])
yes2
feats torch.Size([1025, 1536])
feats2 torch.Size([1536, 1025])
yes2
feats torch.Size([826, 1536])
yes3 {'cls_loss': tensor(0.5896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3468, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9364, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([345,  93, 215, 225], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([215, 215, 215,  18, 215, 345, 215], device='cuda:0'), tensor([424, 166, 385, 166], device='cuda:0'), tensor([105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5208, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2246, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7454, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([245, 265,  46, 384, 265, 319,  11, 230,  46,  93], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([ 44, 223, 310, 113, 399], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310,  50], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0862, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5337, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6199, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([90], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([93], device='cuda:0'), tensor([256], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3078, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2474, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5552, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([286, 121, 187], device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399], device='cuda:0'), tensor([ 78, 175,  71, 121, 436, 402, 452], device='cuda:0'), tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([93], device='cuda:0'), tensor([219, 181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([  3, 383, 425, 304, 177, 408,  91, 408,  71, 201,  44, 210, 408, 408,
        105, 408, 408, 408, 408, 408, 218, 408], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7798, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3846, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1644, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 398, 376], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137,  71, 137,  71, 137, 294],
       device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121], device='cuda:0'), tensor([436, 447, 436, 246, 436,  82], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([451], device='cuda:0'), tensor([283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7801, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3768, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1569, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 436], device='cuda:0'), tensor([268,   5, 430, 268], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([82], device='cuda:0'), tensor([165,  44, 436,  93, 137,  10, 436,  44, 108], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221], device='cuda:0'), tensor([258, 132], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,
         44,   5, 138, 138, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7784, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4213, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1997, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47,  9], device='cuda:0'), tensor([141, 141, 141, 141, 409], device='cuda:0'), tensor([236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([183, 435, 311, 232,  36, 120,  36,  36,  73, 116], device='cuda:0'), tensor([424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6655, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3244, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9899, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 91, 302, 451, 286, 424,  91, 451,  91], device='cuda:0'), tensor([248, 340, 236, 121, 312], device='cuda:0'), tensor([399, 408,  50, 399,  50], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([301, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4498, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2051, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6549, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00050/00055]	Time 0.31 (0.33)	Loss 0.65 (0.98)
		cls_loss 0.45 (0.62)	reg_loss 0.21 (0.35)
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([399], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([354], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4620, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2572, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7192, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 309,  50], device='cuda:0'), tensor([448, 387, 127, 155], device='cuda:0'), tensor([345, 201, 305, 305, 394, 201, 305, 302, 305, 217, 305, 402, 305, 149,
        302,  72], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6963, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3269, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0231, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 451, 191, 108], device='cuda:0'), tensor([108, 348, 354], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([  9, 155, 121,  43,  17, 147, 344, 379], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6876, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3018, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9894, device='cuda:0', grad_fn=<AddBackward0>)}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5766, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3460, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9226, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 9 finished with lr=0.00005410

dataset_name None

Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7f8811d642e0>
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 580
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 500
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 224
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 394
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 811
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00010/00444]	Time 0.48 (0.48)
loss {'cls_loss': tensor(0.1177, device='cuda:0'), 'reg_loss': tensor(0.1070, device='cuda:0'), 'final_loss': tensor(0.2247, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 946
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00020/00444]	Time 0.40 (0.44)
loss {'cls_loss': tensor(0.3653, device='cuda:0'), 'reg_loss': tensor(0.1780, device='cuda:0'), 'final_loss': tensor(0.5434, device='cuda:0')}
max_len 229
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 465
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 899
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 392
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 730
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00030/00444]	Time 0.26 (0.38)
loss {'cls_loss': tensor(0.4442, device='cuda:0'), 'reg_loss': tensor(0.2155, device='cuda:0'), 'final_loss': tensor(0.6597, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 207
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00040/00444]	Time 0.23 (0.34)
loss {'cls_loss': tensor(0.5545, device='cuda:0'), 'reg_loss': tensor(0.2669, device='cuda:0'), 'final_loss': tensor(0.8214, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 457
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 230
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00050/00444]	Time 0.22 (0.32)
loss {'cls_loss': tensor(0.4855, device='cuda:0'), 'reg_loss': tensor(0.1960, device='cuda:0'), 'final_loss': tensor(0.6815, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 774
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00060/00444]	Time 0.23 (0.30)
loss {'cls_loss': tensor(0.2445, device='cuda:0'), 'reg_loss': tensor(0.1672, device='cuda:0'), 'final_loss': tensor(0.4118, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 59
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 280
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00070/00444]	Time 0.19 (0.29)
loss {'cls_loss': tensor(0.2455, device='cuda:0'), 'reg_loss': tensor(0.1256, device='cuda:0'), 'final_loss': tensor(0.3710, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 80
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00080/00444]	Time 0.24 (0.28)
loss {'cls_loss': tensor(0.5724, device='cuda:0'), 'reg_loss': tensor(0.2589, device='cuda:0'), 'final_loss': tensor(0.8313, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 309
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 572
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00090/00444]	Time 0.23 (0.27)
loss {'cls_loss': tensor(0.2874, device='cuda:0'), 'reg_loss': tensor(0.0955, device='cuda:0'), 'final_loss': tensor(0.3829, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 283
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 101
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00100/00444]	Time 0.22 (0.27)
loss {'cls_loss': tensor(0.8461, device='cuda:0'), 'reg_loss': tensor(0.5022, device='cuda:0'), 'final_loss': tensor(1.3483, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 902
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00110/00444]	Time 0.23 (0.27)
loss {'cls_loss': tensor(0.9496, device='cuda:0'), 'reg_loss': tensor(0.9253, device='cuda:0'), 'final_loss': tensor(1.8749, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 199
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00120/00444]	Time 0.23 (0.26)
loss {'cls_loss': tensor(0.6792, device='cuda:0'), 'reg_loss': tensor(0.3192, device='cuda:0'), 'final_loss': tensor(0.9984, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 342
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 121
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 265
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 176
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00130/00444]	Time 0.20 (0.26)
loss {'cls_loss': tensor(0.0792, device='cuda:0'), 'reg_loss': tensor(0.0676, device='cuda:0'), 'final_loss': tensor(0.1469, device='cuda:0')}
max_len 508
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 204
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00140/00444]	Time 0.22 (0.26)
loss {'cls_loss': tensor(0.2136, device='cuda:0'), 'reg_loss': tensor(0.1406, device='cuda:0'), 'final_loss': tensor(0.3542, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 421
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00150/00444]	Time 0.22 (0.25)
loss {'cls_loss': tensor(0.3685, device='cuda:0'), 'reg_loss': tensor(0.2023, device='cuda:0'), 'final_loss': tensor(0.5707, device='cuda:0')}
max_len 366
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 556
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 57
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 256
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 612
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00160/00444]	Time 0.19 (0.25)
loss {'cls_loss': tensor(0.3659, device='cuda:0'), 'reg_loss': tensor(0.1395, device='cuda:0'), 'final_loss': tensor(0.5053, device='cuda:0')}
max_len 989
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 220
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 854
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 694
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 916
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00170/00444]	Time 0.22 (0.25)
loss {'cls_loss': tensor(1.2287, device='cuda:0'), 'reg_loss': tensor(0.6039, device='cuda:0'), 'final_loss': tensor(1.8325, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 72
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 371
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 25
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 579
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00180/00444]	Time 0.20 (0.25)
loss {'cls_loss': tensor(0.8115, device='cuda:0'), 'reg_loss': tensor(0.5036, device='cuda:0'), 'final_loss': tensor(1.3150, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00190/00444]	Time 0.23 (0.24)
loss {'cls_loss': tensor(0.3303, device='cuda:0'), 'reg_loss': tensor(0.1920, device='cuda:0'), 'final_loss': tensor(0.5223, device='cuda:0')}
max_len 309
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 953
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 467
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 727
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 448
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00200/00444]	Time 0.22 (0.24)
loss {'cls_loss': tensor(0.2406, device='cuda:0'), 'reg_loss': tensor(0.0929, device='cuda:0'), 'final_loss': tensor(0.3334, device='cuda:0')}
max_len 872
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 742
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00210/00444]	Time 0.22 (0.24)
loss {'cls_loss': tensor(0.7254, device='cuda:0'), 'reg_loss': tensor(0.2967, device='cuda:0'), 'final_loss': tensor(1.0220, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 302
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00220/00444]	Time 0.22 (0.24)
loss {'cls_loss': tensor(0.0840, device='cuda:0'), 'reg_loss': tensor(0.0647, device='cuda:0'), 'final_loss': tensor(0.1486, device='cuda:0')}
max_len 516
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 206
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 25
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 630
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00230/00444]	Time 0.21 (0.24)
loss {'cls_loss': tensor(0.1230, device='cuda:0'), 'reg_loss': tensor(0.0262, device='cuda:0'), 'final_loss': tensor(0.1491, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 241
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 73
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00240/00444]	Time 0.21 (0.24)
loss {'cls_loss': tensor(0.1975, device='cuda:0'), 'reg_loss': tensor(0.0720, device='cuda:0'), 'final_loss': tensor(0.2695, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 968
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 564
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 870
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00250/00444]	Time 0.22 (0.24)
loss {'cls_loss': tensor(0.0967, device='cuda:0'), 'reg_loss': tensor(0.0480, device='cuda:0'), 'final_loss': tensor(0.1447, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 603
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 98
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00260/00444]	Time 0.24 (0.24)
loss {'cls_loss': tensor(0.5714, device='cuda:0'), 'reg_loss': tensor(0.5551, device='cuda:0'), 'final_loss': tensor(1.1266, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 776
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 485
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 414
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 182
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 272
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00270/00444]	Time 0.22 (0.24)
loss {'cls_loss': tensor(0.4460, device='cuda:0'), 'reg_loss': tensor(0.1813, device='cuda:0'), 'final_loss': tensor(0.6273, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 212
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 392
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 916
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 880
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 916
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00280/00444]	Time 0.21 (0.24)
loss {'cls_loss': tensor(0.6928, device='cuda:0'), 'reg_loss': tensor(0.2822, device='cuda:0'), 'final_loss': tensor(0.9751, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 395
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 284
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00290/00444]	Time 0.21 (0.24)
loss {'cls_loss': tensor(0.4681, device='cuda:0'), 'reg_loss': tensor(0.1545, device='cuda:0'), 'final_loss': tensor(0.6226, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 861
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 304
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00300/00444]	Time 0.23 (0.23)
loss {'cls_loss': tensor(1.5127, device='cuda:0'), 'reg_loss': tensor(0.7586, device='cuda:0'), 'final_loss': tensor(2.2714, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 619
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 740
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 306
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00310/00444]	Time 0.22 (0.23)
loss {'cls_loss': tensor(0.9218, device='cuda:0'), 'reg_loss': tensor(0.4761, device='cuda:0'), 'final_loss': tensor(1.3979, device='cuda:0')}
max_len 418
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 811
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 458
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00320/00444]	Time 0.22 (0.23)
loss {'cls_loss': tensor(0.3981, device='cuda:0'), 'reg_loss': tensor(0.1261, device='cuda:0'), 'final_loss': tensor(0.5242, device='cuda:0')}
max_len 934
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 383
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 54
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00330/00444]	Time 0.24 (0.23)
loss {'cls_loss': tensor(1.0819, device='cuda:0'), 'reg_loss': tensor(0.5346, device='cuda:0'), 'final_loss': tensor(1.6165, device='cuda:0')}
max_len 960
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 988
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 36
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 793
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 512
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 440
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00340/00444]	Time 0.21 (0.23)
loss {'cls_loss': tensor(0.3128, device='cuda:0'), 'reg_loss': tensor(0.2009, device='cuda:0'), 'final_loss': tensor(0.5137, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 196
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 922
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 752
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 531
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00350/00444]	Time 0.21 (0.23)
loss {'cls_loss': tensor(0.3228, device='cuda:0'), 'reg_loss': tensor(0.1180, device='cuda:0'), 'final_loss': tensor(0.4408, device='cuda:0')}
max_len 613
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 802
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 394
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00360/00444]	Time 0.23 (0.23)
loss {'cls_loss': tensor(0.3327, device='cuda:0'), 'reg_loss': tensor(0.2377, device='cuda:0'), 'final_loss': tensor(0.5704, device='cuda:0')}
max_len 412
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 229
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 441
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 527
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00370/00444]	Time 0.24 (0.23)
loss {'cls_loss': tensor(0.1792, device='cuda:0'), 'reg_loss': tensor(0.0880, device='cuda:0'), 'final_loss': tensor(0.2673, device='cuda:0')}
max_len 205
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 381
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00380/00444]	Time 0.22 (0.23)
loss {'cls_loss': tensor(0.0760, device='cuda:0'), 'reg_loss': tensor(0.0360, device='cuda:0'), 'final_loss': tensor(0.1120, device='cuda:0')}
max_len 453
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 203
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 294
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 927
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00390/00444]	Time 0.22 (0.23)
loss {'cls_loss': tensor(0.5134, device='cuda:0'), 'reg_loss': tensor(0.1944, device='cuda:0'), 'final_loss': tensor(0.7078, device='cuda:0')}
max_len 637
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 853
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 238
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 672
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 771
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 399
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 519
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 773
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00400/00444]	Time 0.22 (0.23)
loss {'cls_loss': tensor(1.2840, device='cuda:0'), 'reg_loss': tensor(0.5413, device='cuda:0'), 'final_loss': tensor(1.8253, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 211
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 330
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 743
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00410/00444]	Time 0.23 (0.23)
loss {'cls_loss': tensor(0.3177, device='cuda:0'), 'reg_loss': tensor(0.1856, device='cuda:0'), 'final_loss': tensor(0.5033, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 181
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 371
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 637
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 546
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00420/00444]	Time 0.21 (0.23)
loss {'cls_loss': tensor(0.4393, device='cuda:0'), 'reg_loss': tensor(0.2535, device='cuda:0'), 'final_loss': tensor(0.6928, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 826
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00430/00444]	Time 0.23 (0.23)
loss {'cls_loss': tensor(1.1397, device='cuda:0'), 'reg_loss': tensor(0.6078, device='cuda:0'), 'final_loss': tensor(1.7475, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00440/00444]	Time 0.23 (0.23)
loss {'cls_loss': tensor(0.2039, device='cuda:0'), 'reg_loss': tensor(0.0540, device='cuda:0'), 'final_loss': tensor(0.2578, device='cuda:0')}
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
max_len 1024
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
t-start,end [255.04858 238.35088 387.4043    4.12548 402.33246 181.72981 522.74164
 297.42273 484.47195 222.41211 500.10883 173.07    376.5587  308.59973
 441.9286  398.3702  260.90387 465.409   314.14755 245.77678] [264.02325  254.93309  405.81528   14.399198 443.41418  201.50757
 540.5545   316.3324   502.7908   242.62564  518.4767   183.67001
 396.0945   379.91595  501.8702   418.03506  279.77924  525.8829
 333.9087   254.7011  ]
label [436  88  88  88  88  88  88  88  88  88  88  88  88 268 268  88  88 100
  88  88]
label_len 888000
gt [ 88 430  88  72  88 436  88  72  88  91 411 209  88 424  88 247   9 430
 120 253]
gt_len 3198
score [0.21282357 0.19898516 0.1858089  0.17973721 0.17768997 0.17319928
 0.16948201 0.16496746 0.1573895  0.15495798 0.15213768 0.1499871
 0.14629623 0.14430249 0.1425479  0.1410455  0.13960244 0.13716245
 0.13394031 0.13315517]
gt_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f880d2d9580>
pre_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f880d2d9880>
pred_label [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440]
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '41' were provdied.
Warning: No predictions of label '53' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '172' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '193' were provdied.
Warning: No predictions of label '199' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '274' were provdied.
Warning: No predictions of label '278' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '373' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '448' were provdied.
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '41' were provdied.
Warning: No predictions of label '53' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '172' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '193' were provdied.
Warning: No predictions of label '199' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '274' were provdied.
Warning: No predictions of label '278' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '373' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '448' were provdied.
ap[0] [1.07340936e-01 0.00000000e+00 0.00000000e+00 0.00000000e+00
 7.14285714e-02 0.00000000e+00 5.00000000e-01 1.35611696e-02
 2.52100840e-02 5.19862176e-02 3.67977919e-02 7.05599127e-02
 4.27350427e-03 0.00000000e+00 0.00000000e+00 3.03136818e-02
 4.72319117e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000000e-01 2.70467714e-02 1.31302252e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 6.36119450e-03 6.78936382e-03
 2.78539508e-02 0.00000000e+00 0.00000000e+00 1.22887613e-02
 1.19735486e-02 0.00000000e+00 0.00000000e+00 9.09090909e-02
 0.00000000e+00 0.00000000e+00 2.97563334e-02 3.16915683e-02
 0.00000000e+00 5.95238095e-02 3.04196022e-02 0.00000000e+00
 0.00000000e+00 3.31883213e-03 0.00000000e+00 1.87097870e-02
 0.00000000e+00 6.66666667e-01 0.00000000e+00 9.09090909e-02
 2.00000000e-01 1.26957071e-01 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.33122020e-02 5.07600596e-01 3.12694250e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.48364998e-02 1.61692960e-02 1.38888889e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 3.17332474e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 8.46032582e-02 0.00000000e+00
 2.18390549e-02 4.04893425e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.05070847e-03 2.47718162e-02 2.00000000e-01
 6.97477117e-02 8.05029317e-02 0.00000000e+00 2.21220146e-02
 0.00000000e+00 2.05882353e-02 1.57478522e-02 0.00000000e+00
 1.33333333e-02 0.00000000e+00 1.99193315e-02 0.00000000e+00
 0.00000000e+00 2.50000000e-01 5.66564377e-03 0.00000000e+00
 3.60980246e-02 1.36496503e-02 3.12500000e-02 0.00000000e+00
 0.00000000e+00 5.55277917e-05 0.00000000e+00 3.83141762e-03
 8.01390864e-02 0.00000000e+00 0.00000000e+00 1.75357714e-02
 2.49511329e-03 0.00000000e+00 0.00000000e+00 6.35404148e-02
 0.00000000e+00 0.00000000e+00 6.50773196e-03 0.00000000e+00
 3.75000000e-01 0.00000000e+00 4.32900433e-04 0.00000000e+00
 0.00000000e+00 5.31914894e-03 0.00000000e+00 0.00000000e+00
 7.14285714e-03 5.37054507e-02 1.00000000e+00 0.00000000e+00
 2.59961615e-01 1.11787312e-01 0.00000000e+00 7.37704918e-03
 0.00000000e+00 4.30247910e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.67224080e-03 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.14500215e-04 2.85714286e-02
 0.00000000e+00 0.00000000e+00 5.08846886e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.28472222e-01
 8.82352941e-02 1.25830959e-03 0.00000000e+00 4.54545455e-02
 0.00000000e+00 0.00000000e+00 1.00000000e+00 0.00000000e+00
 0.00000000e+00 3.67093442e-03 1.84706398e-02 0.00000000e+00
 5.26315789e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.48172068e-02 2.22648634e-02 3.44999118e-02 3.20512821e-04
 0.00000000e+00 0.00000000e+00 1.66666667e-02 0.00000000e+00
 1.25000000e-01 0.00000000e+00 1.38888889e-02 0.00000000e+00
 0.00000000e+00 3.03030303e-02 0.00000000e+00 0.00000000e+00
 1.45254247e-01 0.00000000e+00 0.00000000e+00 1.24870809e-03
 5.00000000e-01 0.00000000e+00 8.04843305e-03 0.00000000e+00
 0.00000000e+00 1.00000000e-01 5.88235294e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.22505409e-02 1.98412698e-03 1.30208333e-02 4.76190476e-02
 2.93670536e-03 1.64017182e-02 8.91525172e-03 2.78571429e-01
 1.26066527e-02 2.44977711e-02 1.65296351e-03 1.42138252e-01
 0.00000000e+00 1.13636364e-02 9.09090909e-02 1.44736842e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.46140351e-02 2.29166667e-01 8.33333333e-02 3.37046870e-01
 5.00000000e-01 5.49595502e-02 0.00000000e+00 3.97153598e-01
 1.62348119e-02 0.00000000e+00 5.60186083e-03 2.85098320e-02
 6.74019976e-03 5.00000000e-01 2.50000000e-01 0.00000000e+00
 2.06943219e-01 0.00000000e+00 1.70959960e-01 9.70973162e-02
 6.70435744e-04 3.64103301e-03 1.83781505e-01 4.54545455e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 2.08333333e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 2.08435499e-01
 1.57086870e-02 3.50903854e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.43745144e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 1.55464951e-02 3.09835190e-02 0.00000000e+00
 0.00000000e+00 2.11975466e-02 5.00000000e-03 1.58420139e-02
 5.66080735e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 7.52288139e-04 1.82848897e-03 0.00000000e+00
 1.26945569e-02 7.11735952e-02 4.82253086e-05 0.00000000e+00
 2.45127931e-02 0.00000000e+00 0.00000000e+00 2.48496596e-05
 1.19117970e-02 0.00000000e+00 1.14942529e-03 1.93068259e-02
 5.27489716e-01 0.00000000e+00 1.23376623e-02 0.00000000e+00
 1.25000000e-01 0.00000000e+00 8.97153576e-02 0.00000000e+00
 1.13925243e-02 1.40545817e-02 0.00000000e+00 0.00000000e+00
 2.59689717e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.50000000e-01 5.17656085e-03 7.91720709e-03
 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.76470588e-01
 0.00000000e+00 0.00000000e+00 1.40449438e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 4.54998742e-02
 0.00000000e+00 1.46624901e-01 2.50000000e-01 0.00000000e+00
 0.00000000e+00 0.00000000e+00 3.78708427e-04 0.00000000e+00
 0.00000000e+00 2.00000000e-01 6.81818182e-02 4.29578755e-03
 7.60262352e-03 0.00000000e+00 3.92479820e-02 1.66666667e-01
 7.14285714e-03 1.11537145e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.26315279e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.00000000e-01 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 5.56385362e-02
 2.77557719e-03 1.72090890e-02 0.00000000e+00 0.00000000e+00
 1.56569582e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.91932906e-01 1.66666667e-02 1.16200932e-02 0.00000000e+00
 1.65895532e-02 4.16666667e-02 6.49450281e-02 2.33030051e-02
 0.00000000e+00 8.18794001e-03 1.32485427e-04 0.00000000e+00
 1.12663238e-03 2.54132231e-02 3.33333333e-02 8.96831671e-02
 2.34153223e-02 0.00000000e+00 2.50000000e-01 4.82211170e-03
 1.54550796e-02 1.28081972e-03 5.20833333e-03 7.72594235e-03
 1.66666667e-01 4.16666667e-02 1.48809524e-03 0.00000000e+00
 5.55555556e-02 2.08333333e-02 0.00000000e+00 1.53584155e-01
 1.50755601e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 3.06386720e-02 9.34741532e-02 3.33990148e-01
 3.63108206e-04 0.00000000e+00 0.00000000e+00 9.86419385e-03
 9.38930303e-04 5.48097142e-03 2.94816848e-01 0.00000000e+00
 5.13505317e-02 0.00000000e+00 1.43203592e-01 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.58758218e-04 0.00000000e+00
 2.07196970e-01 2.85714286e-01 1.00787240e-01 0.00000000e+00
 2.21141088e-05]
[RESULTS] Action detection results on goalstep_train_withID_subset.

|tIoU = 0.30: mAP = 4.25 (%) Recall@1x = 5.74 (%) Recall@5x = 8.51 (%) 
|tIoU = 0.40: mAP = 3.49 (%) Recall@1x = 4.66 (%) Recall@5x = 7.39 (%) 
|tIoU = 0.50: mAP = 2.79 (%) Recall@1x = 3.73 (%) Recall@5x = 6.12 (%) 
|tIoU = 0.60: mAP = 2.19 (%) Recall@1x = 2.96 (%) Recall@5x = 4.75 (%) 
|tIoU = 0.70: mAP = 1.26 (%) Recall@1x = 1.82 (%) Recall@5x = 2.85 (%) 
Average mAP: 2.79 (%)
All done! Total time: 146.21 sec
dataset_name None

Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7f8811d642e0>
max_len 9474
feat_lens [10240, 5120, 2560, 1280, 640, 320, 160, 80]
self.buffer_points BufferList()
feat_len: 10240
buffer_pts.shape[0]: 4096
