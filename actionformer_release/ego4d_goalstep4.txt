/home/ubuntu/slocal/ActionFormer/.venv/bin/python
running install
running bdist_egg
running egg_info
writing nms_1d_cpu.egg-info/PKG-INFO
writing dependency_links to nms_1d_cpu.egg-info/dependency_links.txt
writing top-level names to nms_1d_cpu.egg-info/top_level.txt
reading manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
writing manifest file 'nms_1d_cpu.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.8/nms_1d_cpu.cpython-38-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for nms_1d_cpu.cpython-38-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/nms_1d_cpu.py to nms_1d_cpu.cpython-38.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying nms_1d_cpu.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
creating 'dist/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
removing '/home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg' (and everything under it)
creating /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Extracting nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg to /home/ubuntu/.local/lib/python3.8/site-packages
nms-1d-cpu 0.0.0 is already the active version in easy-install.pth

Installed /home/ubuntu/.local/lib/python3.8/site-packages/nms_1d_cpu-0.0.0-py3.8-linux-x86_64.egg
Processing dependencies for nms-1d-cpu==0.0.0
Finished processing dependencies for nms-1d-cpu==0.0.0
{'dataset': {'crop_ratio': [0.9, 1.0],
             'default_fps': 30,
             'downsample_rate': 1,
             'feat_folder': './v2/omnivore_video_swinl',
             'feat_stride': 16,
             'file_ext': '.pt',
             'file_prefix': None,
             'force_upsampling': False,
             'input_dim': 1536,
             'max_seq_len': 1024,
             'num_classes': 454,
             'num_frames': 32,
             'train_json_file': './goalstep_train_withID_subset.json',
             'trunc_thresh': 0.3,
             'val_json_file': './goalstep_val_withID_subset.json'},
 'dataset_name': 'ego4d_goalstep',
 'devices': ['cuda:0'],
 'init_rand_seed': 1234567891,
 'loader': {'batch_size': 8, 'num_workers': 4},
 'model': {'backbone_arch': [2, 2, 7],
           'backbone_type': 'convTransformer',
           'embd_dim': 512,
           'embd_kernel_size': 3,
           'embd_with_ln': True,
           'fpn_dim': 512,
           'fpn_start_level': 0,
           'fpn_type': 'identity',
           'fpn_with_ln': True,
           'head_dim': 512,
           'head_kernel_size': 3,
           'head_num_layers': 3,
           'head_with_ln': True,
           'input_dim': 1536,
           'max_buffer_len_factor': 4.0,
           'max_seq_len': 1024,
           'n_head': 4,
           'n_mha_win_size': 9,
           'num_classes': 454,
           'regression_range': [[0, 4],
                                [2, 8],
                                [4, 16],
                                [8, 32],
                                [16, 64],
                                [32, 128],
                                [64, 256],
                                [128, 10000]],
           'scale_factor': 2,
           'test_cfg': {'duration_thresh': 0.05,
                        'ext_score_file': None,
                        'iou_threshold': 0.1,
                        'max_seg_num': 2000,
                        'min_score': 0.001,
                        'multiclass_nms': True,
                        'nms_method': 'soft',
                        'nms_sigma': 0.9,
                        'pre_nms_thresh': 0.001,
                        'pre_nms_topk': 5000,
                        'voting_thresh': 0.95},
           'train_cfg': {'center_sample': 'radius',
                         'center_sample_radius': 1.5,
                         'clip_grad_l2norm': 1.0,
                         'cls_prior_prob': 0.01,
                         'dropout': 0.1,
                         'droppath': 0.1,
                         'head_empty_cls': [],
                         'init_loss_norm': 100,
                         'label_smoothing': 0.0,
                         'loss_weight': 1.0},
           'use_abs_pe': True,
           'use_rel_pe': False},
 'model_name': 'LocPointTransformer',
 'opt': {'epochs': 20,
         'learning_rate': 0.0001,
         'momentum': 0.9,
         'schedule_gamma': 0.1,
         'schedule_steps': [],
         'schedule_type': 'cosine',
         'type': 'AdamW',
         'warmup': True,
         'warmup_epochs': 5,
         'weight_decay': 0.05},
 'output_folder': './ckpt/',
 'test_cfg': {'duration_thresh': 0.05,
              'ext_score_file': None,
              'iou_threshold': 0.1,
              'max_seg_num': 2000,
              'min_score': 0.001,
              'multiclass_nms': True,
              'nms_method': 'soft',
              'nms_sigma': 0.9,
              'pre_nms_thresh': 0.001,
              'pre_nms_topk': 5000,
              'voting_thresh': 0.95},
 'train_cfg': {'center_sample': 'radius',
               'center_sample_radius': 1.5,
               'clip_grad_l2norm': 1.0,
               'cls_prior_prob': 0.01,
               'dropout': 0.1,
               'droppath': 0.1,
               'head_empty_cls': [],
               'init_loss_norm': 100,
               'label_smoothing': 0.0,
               'loss_weight': 1.0},
 'train_split': ['train'],
 'val_split': ['val']}
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_train_withID_subset.json
dict_db[labels] [ 44 304 217 201  88 430  88  72  88 436  88  72  88  91 411 209  88 424
  88 247  80  91 411  88  80  88  91  88 354  88 209 411 121 105  88 411
   8  88 436]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7f8413654610>
feat_folder ./v2/omnivore_video_swinl
json_file ./goalstep_val_withID_subset.json
dict_db[labels] [ 47  80 447  49 166   9 338 447 166  47 166  93  47 392  80 166  47 338
 338 281 370 183  47 447 232 325 116  80 166  93 166  47 116  36  80 166
  80 166  80 181  80 119 213  82 346 338  47 388 137 294 383 183 311  80
 166 166 389 330 338 447  70]
<libs.datasets.ego4d_goalstep.Ego4d_goalstepDataset object at 0x7f8413654820>
PtTransformerClsHead
PtTransformerRegHead
Using model EMA ...

Start training model LocPointTransformer ...
yes
train
dataset_name None
activity_index {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 34: 33, 35: 34, 36: 35, 37: 36, 38: 37, 39: 38, 40: 39, 41: 40, 42: 41, 43: 42, 44: 43, 45: 44, 46: 45, 47: 46, 48: 47, 49: 48, 50: 49, 51: 50, 52: 51, 53: 52, 54: 53, 55: 54, 57: 55, 58: 56, 59: 57, 60: 58, 61: 59, 62: 60, 63: 61, 64: 62, 65: 63, 66: 64, 67: 65, 68: 66, 69: 67, 70: 68, 71: 69, 72: 70, 73: 71, 74: 72, 75: 73, 76: 74, 77: 75, 78: 76, 79: 77, 80: 78, 81: 79, 82: 80, 83: 81, 84: 82, 85: 83, 86: 84, 87: 85, 88: 86, 89: 87, 90: 88, 91: 89, 92: 90, 93: 91, 94: 92, 95: 93, 96: 94, 97: 95, 98: 96, 99: 97, 100: 98, 102: 99, 103: 100, 104: 101, 105: 102, 106: 103, 107: 104, 108: 105, 109: 106, 110: 107, 112: 108, 113: 109, 114: 110, 115: 111, 116: 112, 117: 113, 119: 114, 120: 115, 121: 116, 122: 117, 123: 118, 124: 119, 125: 120, 126: 121, 127: 122, 128: 123, 129: 124, 130: 125, 131: 126, 132: 127, 133: 128, 134: 129, 135: 130, 136: 131, 137: 132, 138: 133, 139: 134, 140: 135, 141: 136, 142: 137, 143: 138, 144: 139, 145: 140, 146: 141, 147: 142, 148: 143, 149: 144, 150: 145, 151: 146, 152: 147, 153: 148, 154: 149, 155: 150, 156: 151, 157: 152, 158: 153, 159: 154, 160: 155, 161: 156, 162: 157, 163: 158, 164: 159, 165: 160, 166: 161, 167: 162, 168: 163, 169: 164, 170: 165, 171: 166, 172: 167, 173: 168, 174: 169, 175: 170, 176: 171, 177: 172, 178: 173, 179: 174, 180: 175, 181: 176, 182: 177, 183: 178, 184: 179, 185: 180, 186: 181, 187: 182, 188: 183, 189: 184, 190: 185, 191: 186, 192: 187, 193: 188, 194: 189, 195: 190, 196: 191, 197: 192, 199: 193, 200: 194, 201: 195, 202: 196, 203: 197, 204: 198, 205: 199, 207: 200, 208: 201, 209: 202, 210: 203, 211: 204, 212: 205, 213: 206, 214: 207, 215: 208, 216: 209, 217: 210, 218: 211, 219: 212, 220: 213, 221: 214, 222: 215, 223: 216, 224: 217, 225: 218, 226: 219, 228: 220, 229: 221, 230: 222, 231: 223, 232: 224, 233: 225, 234: 226, 235: 227, 236: 228, 237: 229, 238: 230, 239: 231, 240: 232, 241: 233, 242: 234, 244: 235, 245: 236, 246: 237, 247: 238, 248: 239, 249: 240, 250: 241, 251: 242, 252: 243, 253: 244, 254: 245, 255: 246, 256: 247, 257: 248, 258: 249, 259: 250, 260: 251, 261: 252, 262: 253, 263: 254, 264: 255, 265: 256, 266: 257, 267: 258, 268: 259, 269: 260, 270: 261, 271: 262, 273: 263, 274: 264, 275: 265, 276: 266, 277: 267, 278: 268, 279: 269, 280: 270, 281: 271, 282: 272, 283: 273, 284: 274, 285: 275, 286: 276, 287: 277, 288: 278, 289: 279, 290: 280, 291: 281, 292: 282, 293: 283, 294: 284, 295: 285, 296: 286, 297: 287, 298: 288, 299: 289, 300: 290, 301: 291, 302: 292, 303: 293, 304: 294, 305: 295, 306: 296, 307: 297, 309: 298, 310: 299, 311: 300, 312: 301, 313: 302, 314: 303, 315: 304, 316: 305, 317: 306, 318: 307, 319: 308, 320: 309, 321: 310, 322: 311, 323: 312, 324: 313, 325: 314, 326: 315, 327: 316, 328: 317, 329: 318, 330: 319, 331: 320, 332: 321, 333: 322, 334: 323, 335: 324, 336: 325, 337: 326, 338: 327, 339: 328, 340: 329, 341: 330, 342: 331, 343: 332, 344: 333, 345: 334, 346: 335, 347: 336, 348: 337, 349: 338, 350: 339, 351: 340, 352: 341, 354: 342, 355: 343, 356: 344, 357: 345, 358: 346, 359: 347, 360: 348, 361: 349, 362: 350, 363: 351, 364: 352, 365: 353, 366: 354, 367: 355, 368: 356, 369: 357, 370: 358, 371: 359, 372: 360, 373: 361, 374: 362, 375: 363, 376: 364, 377: 365, 378: 366, 379: 367, 380: 368, 381: 369, 382: 370, 383: 371, 384: 372, 385: 373, 386: 374, 387: 375, 388: 376, 389: 377, 390: 378, 391: 379, 392: 380, 393: 381, 394: 382, 395: 383, 396: 384, 397: 385, 398: 386, 399: 387, 400: 388, 401: 389, 402: 390, 403: 391, 404: 392, 405: 393, 406: 394, 407: 395, 408: 396, 409: 397, 410: 398, 411: 399, 412: 400, 413: 401, 414: 402, 415: 403, 416: 404, 417: 405, 418: 406, 419: 407, 420: 408, 421: 409, 422: 410, 423: 411, 424: 412, 425: 413, 426: 414, 428: 415, 429: 416, 430: 417, 431: 418, 432: 419, 433: 420, 434: 421, 435: 422, 436: 423, 437: 424, 438: 425, 439: 426, 440: 427, 441: 428, 442: 429, 443: 430, 444: 431, 445: 432, 446: 433, 447: 434, 448: 435, 449: 436, 450: 437, 451: 438, 452: 439, 453: 440}
gound_truth 0         44
1        304
2        217
3        201
4         88
        ... 
13337    254
13338    380
13339    408
13340    415
13341    436
Name: label, Length: 13342, dtype: int64
gound_truth 0         43
1        294
2        210
3        195
4         86
        ... 
13337    245
13338    368
13339    396
13340    403
13341    423
Name: label, Length: 13342, dtype: int64
gound_truth                                    video-id      t-start        t-end  label
0      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1069.34800   1298.59400     43
1      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1298.66082   1327.09850    294
2      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1381.06481   1383.41099    210
3      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1384.24600   1404.91851    195
4      39d087b0-afc2-47d8-ba91-b70dd8fab90e   1410.80762   1430.91046     86
...                                     ...          ...          ...    ...
13337  3e057cdc-bf48-4090-81d6-b66bb18542e7  17552.33613  17559.34967    245
13338  3e057cdc-bf48-4090-81d6-b66bb18542e7  17559.34967  17567.20658    368
13339  3e057cdc-bf48-4090-81d6-b66bb18542e7  17567.20658  17583.35754    396
13340  3e057cdc-bf48-4090-81d6-b66bb18542e7  17583.35754  17599.04962    403
13341  3e057cdc-bf48-4090-81d6-b66bb18542e7  17622.51034  17690.55467    423

[13342 rows x 4 columns]

[Train]: Epoch 0 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167,
        431, 268, 415,  22,  50, 268,  50], device='cuda:0'), tensor([249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([ 88, 298,  16, 298,  73,  71], device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([431, 431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181,
        220, 181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137,
        357, 431, 137, 220, 220, 357, 431, 220], device='cuda:0'), tensor([436, 240], device='cuda:0')]
yes3 {'cls_loss': tensor(4.0553, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(3.5302, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(7.5855, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146, 325, 146, 345],
       device='cuda:0'), tensor([ 14,  61, 253, 313], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([295,  82, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(2.3721, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.9869, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.3590, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443],
       device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([223, 223, 144, 223, 223, 310], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([108], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0014, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.7344, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.7358, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0,   7],
       device='cuda:0'), tensor([224, 246, 224, 316, 195,  50, 451, 251,  22], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([ 50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0'), tensor([245, 385,  82, 188, 294,  30, 254, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(2.3598, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(2.0279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.3878, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,
         21,  21, 224], device='cuda:0'), tensor([338, 338, 354, 215, 311, 388, 133, 133, 303, 345, 146,   5],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8875, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5909, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.4784, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 302, 305, 217, 305, 402, 305, 149, 302,  72, 196,  43, 402, 305,
        128, 236, 128], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([338, 338, 338,  36, 354, 389,  93,  36,  36, 116, 116],
       device='cuda:0'), tensor([253,  87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8119, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5446, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.3565, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([279, 121, 415, 345, 309, 279, 309, 299,  32,  93, 121],
       device='cuda:0'), tensor([183,  80, 116, 116, 116, 116, 116], device='cuda:0'), tensor([315,  73, 401, 441, 451, 305, 451, 121, 315, 451], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6958, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.4091, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.1049, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([412, 354, 412, 412, 354, 138, 398, 256, 412, 412, 412, 354, 412, 138,
        398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412,
        138, 398, 256, 412, 412, 412, 354, 412, 354, 412, 138, 398, 256, 412,
        412, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412, 138, 398, 256,
        412, 412, 412, 411, 412, 411, 138, 429, 398, 429, 412, 411, 412, 354],
       device='cuda:0'), tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93, 396,  50],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([244, 409, 346], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(2.2080, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.9343, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.1422, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([384, 436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([269, 301, 436], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([155,  22, 159, 159, 120, 415, 430, 257,  31,  49,  24,  49],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0471, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8708, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9179, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 16, 436,  16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([ 15, 294,  15,  15,  15,  15], device='cuda:0'), tensor([232, 388, 232, 116, 116, 138, 294, 362], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.3281, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.8629, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166, 294], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([134, 301, 294,  71,  79, 294,  82], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 83,  16,  22, 215, 441, 415], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268], device='cuda:0'), tensor([443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9630, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6601, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.6230, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00010/00055]	Time 1.48 (1.48)	Loss 3.62 (3.62)
		cls_loss 1.96 (1.96)	reg_loss 1.66 (1.66)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([113, 301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113,
        150, 292, 415,  22, 247], device='cuda:0'), tensor([100, 385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223,
        121, 100, 436, 366], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([9], device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7925, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5153, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.3078, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([215], device='cuda:0'), tensor([121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,
         50, 223, 402, 313, 223, 402, 115], device='cuda:0'), tensor([453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80, 116,  19,
        182], device='cuda:0'), tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268,
        268, 294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,
         44,   5, 138, 138, 298], device='cuda:0'), tensor([ 36,  36,  73, 116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116],
       device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9075, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.6242, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.5317, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187,  96, 108,  96, 294,  96, 385,  50], device='cuda:0'), tensor([  8, 404,  47, 435, 124, 447, 335,  82, 320, 320], device='cuda:0'), tensor([337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270],
       device='cuda:0'), tensor([269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([ 93, 351,  93, 295, 351, 325, 295, 351, 351, 295], device='cuda:0'), tensor([283,  46, 108, 209, 338, 401], device='cuda:0'), tensor([431, 415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10],
       device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4887, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2207, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.7094, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([334,  22, 121], device='cuda:0'), tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([436, 294, 294, 430, 127,  44,  63, 234], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9152, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7567, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6719, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([408], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([408], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8893, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7575, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6468, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 215, 249, 134, 215, 134, 108], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([436, 121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([244], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7619, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3583, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([305, 292, 305, 399, 363], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([4], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([294, 399, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8617, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6551, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5168, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0'), tensor([436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,
         50,  50], device='cuda:0'), tensor([351,  82, 215, 440], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([279, 441], device='cuda:0'), tensor([423,  83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408,
        436, 399], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9220, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0863, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([316, 433, 316, 100, 257], device='cuda:0'), tensor([ 47, 260,  17, 116, 388,  93,  19, 109,  80, 303, 116],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([113, 430], device='cuda:0'), tensor([283, 329, 301, 283, 301, 283,  72, 121, 385, 283, 122, 121, 385],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9481, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7282, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6763, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([ 44, 304], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([ 57,  93, 441], device='cuda:0'), tensor([ 46,  10, 415,   9,   9, 436], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0633, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7975, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8608, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00020/00055]	Time 1.34 (1.41)	Loss 1.86 (2.74)
		cls_loss 1.06 (1.51)	reg_loss 0.80 (1.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,
         37, 424,  37, 411, 411], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([  7,   7,   7,   7, 436, 247, 247, 100, 181,   9], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([158], device='cuda:0'), tensor([436, 175, 436,  10, 436,  10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2759, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9681, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.2440, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 9, 15], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([283,  91, 105,  91], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([ 96,  22, 276, 453, 416, 424, 181, 445], device='cuda:0'), tensor([326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8, 395, 205,
        326, 395,  85, 417, 159,  31], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0183, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4461, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([100,  88,  88,  88, 100,  88, 100], device='cuda:0'), tensor([365, 161, 121, 436, 103], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9884, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7414, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([142,  80, 142,  80, 114,  80], device='cuda:0'), tensor([452,  15, 436, 225, 108], device='cuda:0'), tensor([437, 386, 385, 121, 166,  93, 120, 424], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223, 305], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2137, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8784, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0921, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([294, 436, 136, 100], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([332,  93, 436, 215,  83], device='cuda:0'), tensor([183, 354, 330,  80,  80, 338,  80,  47, 354], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8352, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6005, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4357, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 301,  80], device='cuda:0'), tensor([249], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4069, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9717, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3787, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([108], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([441, 359, 203, 359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359,
        415], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0090, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6928, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7018, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([271, 121, 316, 316], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([399, 384, 270, 241, 415, 430, 294, 223, 223,  82, 248, 138, 164, 147,
         93,  25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421],
       device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407, 333,
        121,  21], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([90, 11], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8630, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.2324, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.0954, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397,
        249, 394], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 11, 441, 249, 441], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0699, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7175, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7873, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([2, 2, 2], device='cuda:0'), tensor([124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([105, 268], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0442, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6894, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7335, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00030/00055]	Time 0.74 (1.19)	Loss 1.73 (2.41)
		cls_loss 1.04 (1.36)	reg_loss 0.69 (1.05)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([204, 350, 204, 143], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([225], device='cuda:0'), tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([183, 325, 354,  47, 294, 302, 116, 256, 116, 116, 302, 116, 388, 338,
        362], device='cuda:0'), tensor([398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1208, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7679, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8887, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387, 385, 215],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9432, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5879, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5311, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([121, 437, 124,   9, 437, 120, 437,  90, 413,  90, 413,  90, 437,  90],
       device='cuda:0'), tensor([447, 436, 246, 436,  82], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([ 58, 333,  58], device='cuda:0'), tensor([ 43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1089, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6869, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7958, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 22, 319, 234, 319, 339, 402], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([401, 409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,
         82, 302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.5164, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8882, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.4047, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([294, 437, 286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,
         87, 279, 437, 150, 294, 437, 108], device='cuda:0'), tensor([31], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399, 437,  50,
        166], device='cuda:0'), tensor([187], device='cuda:0'), tensor([295], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9029, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4720, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3748, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([334, 436, 408], device='cuda:0'), tensor([256], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415,
        100], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6794, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8562, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([451], device='cuda:0'), tensor([392,  47, 392, 436, 392], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7569, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1860, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([225,  16,  76,  16, 402, 225, 441, 285], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([417], device='cuda:0'), tensor([256], device='cuda:0'), tensor([286, 105,  95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121,
        351, 217, 351, 217, 305,  32], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2650, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6622, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9272, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([ 32, 385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437],
       device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6392, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3448, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([215, 108, 348, 354], device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([201, 195, 442, 121, 442, 451, 279, 442,  93, 345, 437],
       device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3551, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6810, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0361, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00040/00055]	Time 0.67 (1.06)	Loss 2.04 (2.31)
		cls_loss 1.36 (1.36)	reg_loss 0.68 (0.96)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([433, 356], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([295], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2017, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6220, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8237, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 37, 280, 262, 121, 262,  37,  31], device='cuda:0'), tensor([219, 424, 181], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([408, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7027, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3414, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0441, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([415,  63, 279, 121, 411, 401, 100], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([181], device='cuda:0'), tensor([ 49, 440, 440, 436], device='cuda:0'), tensor([301,  76,  98,  91, 302, 451, 286, 424,  91, 451,  91],
       device='cuda:0'), tensor([ 88, 229], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1831, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5816, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7647, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 354, 256, 100, 392], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([285, 301, 121,  44, 105, 345,  44,  63, 446,  44, 152, 437,  44, 436],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([215], device='cuda:0'), tensor([412, 412, 116,  50, 412,  87, 398, 116, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2549, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5827, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8376, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285, 405, 294,
         21], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([121,   9,  12, 425,  63, 165], device='cuda:0'), tensor([268], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19, 121, 137], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4972, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5868, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([196, 215, 215, 215], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([256, 315, 256], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([415, 282, 270, 385, 393, 382, 234, 303, 382, 181,   9, 181, 315, 181,
          9, 181, 382], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1070, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4829, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5900, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385, 441, 301, 385],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([100, 116, 232, 116], device='cuda:0'), tensor([ 37, 399, 113,  37,  37, 150,  37, 280,  37, 433,  37],
       device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1077, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4912, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5990, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95, 231], device='cuda:0'), tensor([21], device='cuda:0'), tensor([268,  72, 329, 411,  47,  78, 411, 138,  78, 411, 138, 138, 138,  73,
        298, 138], device='cuda:0'), tensor([213, 122,  30,  93, 100,  93], device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0'), tensor([146], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436], device='cuda:0'), tensor([312,  37,  82,  90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90,
        316, 286, 121, 436, 286, 316, 143, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5273, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6373, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1645, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([301, 439, 439, 436, 439, 436, 439], device='cuda:0'), tensor([ 22, 296, 108, 258], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371], device='cuda:0'), tensor([ 90,  44, 269, 279, 269, 269, 315, 269, 437, 269,  71, 424, 269],
       device='cuda:0'), tensor([90], device='cuda:0'), tensor([146,  83, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8257, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3340, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1597, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([219], device='cuda:0'), tensor([  9, 218,  22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270,
        386,   9, 386, 184], device='cuda:0'), tensor([ 19, 109,  47, 388, 260, 256,  47, 256, 388, 256, 116, 109, 385, 320,
        320, 124, 100], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([248, 298, 249,  93,  96, 441, 121, 441,  96, 121, 441,  96, 441,  96],
       device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([182, 392, 146, 146, 182, 392], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3812, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5701, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9513, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [000][00050/00055]	Time 0.67 (0.98)	Loss 1.95 (2.24)
		cls_loss 1.38 (1.36)	reg_loss 0.57 (0.88)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([283, 436, 383,  50], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4958, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2146, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7104, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  8, 199,  85, 408, 408, 249, 302, 121, 294, 121, 453,  71, 408],
       device='cuda:0'), tensor([ 93, 166], device='cuda:0'), tensor([15], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9], device='cuda:0'), tensor([236, 121, 312, 121,  50,  10], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7592, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3123, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0716, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 249, 316], device='cuda:0'), tensor([ 93, 221, 221, 137,   0,  22,  52, 137, 385], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([242, 431, 100, 294], device='cuda:0'), tensor([181,  82, 181,  82, 181,  82, 181,  82, 313, 181,  82, 181],
       device='cuda:0'), tensor([65], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8577, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3405, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1982, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 436, 294, 315, 436, 315], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([319, 406, 451, 406, 140], device='cuda:0'), tensor([128,  93, 215, 141, 294, 399, 135, 307, 400], device='cuda:0'), tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,
         85, 293,  84,  85,  44, 438, 345, 167, 108, 436, 241],
       device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437],
       device='cuda:0')]
yes3 {'cls_loss': tensor(2.0580, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8196, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.8777, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 0 finished with lr=0.00000985


[Train]: Epoch 1 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 362], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([268, 105, 268, 280, 268, 411, 268, 280, 268,  72, 329, 411,  47,  78,
        411, 138,  78, 411, 138, 138, 138,  73], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([121,  50,  10], device='cuda:0'), tensor([120, 436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37,
        447,  37, 331,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6587, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6771, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3357, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([316, 142, 249, 142], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([121, 351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385],
       device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0583, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4131, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4714, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70,  82],
       device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314,
        407,  85, 314], device='cuda:0'), tensor([ 80, 399,  63, 398, 376, 398, 354, 398], device='cuda:0'), tensor([408], device='cuda:0'), tensor([215, 225, 424, 225, 215,  91,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1391, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4384, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5775, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 80, 298, 215, 187,   8, 187,  96], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([394, 418, 408, 397, 279, 408, 408, 313, 385,  16, 418,  16],
       device='cuda:0'), tensor([325, 415, 124, 124,  51,   8, 385,  47, 109, 195,  47, 256,  80],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1084, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4600, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5685, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50, 184, 247], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21, 269],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3857, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5363, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9220, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 96, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9228, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3623, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2851, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([301, 215,  90], device='cuda:0'), tensor([309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436,
        305, 407], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([ 47, 354, 100, 100], device='cuda:0'), tensor([408, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8988, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3405, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2393, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([ 16,  22, 215, 441, 415], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([392, 354, 100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354,
        100, 392, 354, 256], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4708, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6681, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([142, 351, 142, 279, 201, 142,  11, 351, 142, 351, 142],
       device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9480, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3153, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158, 408, 402], device='cuda:0'), tensor([187, 187], device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([137, 256, 256], device='cuda:0'), tensor([451,  53, 424, 451, 191, 108], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6950, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2620, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9570, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47,  9], device='cuda:0'), tensor([436, 385, 302,  93, 282, 294, 264, 292, 399, 142], device='cuda:0'), tensor([316, 433, 316], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([89], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([345,  44,  63, 446,  44, 152, 437,  44, 436,  44,  37],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8344, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3269, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1613, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00010/00055]	Time 0.75 (0.75)	Loss 1.16 (1.16)
		cls_loss 0.83 (0.83)	reg_loss 0.33 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([242, 431, 100, 294], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([244], device='cuda:0'), tensor([244], device='cuda:0'), tensor([452, 284,  90,  80], device='cuda:0'), tensor([301, 439, 436, 439, 436, 439], device='cuda:0'), tensor([247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417, 411, 417, 417,
        417, 314, 417, 417, 417, 436, 417, 150,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2575, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5130, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7705, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269, 301, 436], device='cuda:0'), tensor([244], device='cuda:0'), tensor([291, 121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366, 215,  83,
        436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226,
        279, 226], device='cuda:0'), tensor([50], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1481, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4507, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5989, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 383, 430], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121],
       device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5470, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6244, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1715, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296], device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441],
       device='cuda:0'), tensor([394, 121,   4], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3610, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2988, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 120, 399, 156, 253], device='cuda:0'), tensor([256], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([437, 385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399, 437,
         50, 166], device='cuda:0'), tensor([268,  37, 268], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9224, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3420, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2644, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([37], device='cuda:0'), tensor([431, 447, 357, 431, 294], device='cuda:0'), tensor([ 73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437, 315, 437, 315,
        120, 305], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([257, 215, 313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453, 197,
        436, 340, 121], device='cuda:0'), tensor([319, 319, 120, 319,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4987, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.1146, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([150, 150, 302,  85, 302, 363, 385, 247, 294, 217, 436],
       device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([220], device='cuda:0'), tensor([319, 121, 316,  15, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4741, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5786, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0527, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([ 11, 279,  11,  11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,
         98, 283, 301], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([417, 221], device='cuda:0'), tensor([399,  16, 401,  96, 399, 302, 294, 121,  16, 201, 217,  87, 401, 302,
        431, 436, 220, 242, 220], device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357], device='cuda:0'), tensor([320, 404, 447, 217,  80, 100], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5550, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8828, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([107,  96, 338, 351, 436], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 98, 397, 113, 415, 183, 354, 254, 116, 415, 121,  88,   8, 354,   8],
       device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([285, 213, 430, 183, 388, 338, 281, 116, 138, 311, 303, 183],
       device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0196, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4096, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4293, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([  5, 146, 182, 392, 146, 146, 182], device='cuda:0'), tensor([399], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([ 37, 411, 411, 411,  50, 157,  90, 157,  37, 247, 225,  91,  91,  76],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0892, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5116, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00020/00055]	Time 0.66 (0.71)	Loss 1.51 (1.34)
		cls_loss 1.09 (0.96)	reg_loss 0.42 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 87,  91,  63, 305, 363, 305, 187], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 411, 412, 411,
        138, 429, 398, 429, 412, 411, 412, 354, 412, 138, 256, 398, 354, 412,
        256, 412, 412, 354, 412, 412, 354, 412, 138, 256, 398, 256, 412, 412,
        354, 412, 354, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412, 138,
        398, 256, 412, 412, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138,
        398, 354, 412, 256, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(2.0239, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8636, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.8875, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([268], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27,  27],
       device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6705, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2738, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9443, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19, 121, 137], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 80, 354], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209, 302, 123],
       device='cuda:0'), tensor([141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6623, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2697, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9319, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116, 116, 138, 294, 362, 362], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268],
       device='cuda:0'), tensor([241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167,
        431, 268, 415,  22,  50, 268,  50], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([225,  50, 301], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4282, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5923, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0205, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([392, 345], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436,
        124, 223, 196, 221], device='cuda:0'), tensor([417], device='cuda:0'), tensor([146, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7537, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2984, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0521, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([181, 205, 436, 345,  30, 443], device='cuda:0'), tensor([451, 176, 176, 176], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4800, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1802, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 105,  31], device='cuda:0'), tensor([433, 356, 292, 383], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([402, 385, 402,  87, 131, 397, 385], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0'), tensor([15], device='cuda:0'), tensor([181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 382,
         96, 382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3489, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2816, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181,  30, 181, 181,   9, 155, 121], device='cuda:0'), tensor([411], device='cuda:0'), tensor([ 82, 255], device='cuda:0'), tensor([ 44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436, 441],
       device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 47, 404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47, 116, 256,
        354,  47,  36, 354, 183,  36, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2851, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5154, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8004, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([279, 442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163],
       device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([201, 121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6817, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([258, 296, 408, 110, 197, 316], device='cuda:0'), tensor([ 88,  91,  88, 354,  88, 209, 411, 121], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5142, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7799, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00030/00055]	Time 0.65 (0.69)	Loss 1.78 (1.48)
		cls_loss 1.27 (1.06)	reg_loss 0.51 (0.42)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([256], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279,
        130], device='cuda:0'), tensor([408], device='cuda:0'), tensor([250,  50, 250], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8033, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3153, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1186, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([88, 16, 88, 73], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([215,  18, 215, 345, 215], device='cuda:0'), tensor([215, 436], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9926, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3916, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3842, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([371, 201,  90, 371], device='cuda:0'), tensor([121, 262, 100, 262, 100, 430, 384, 262, 339,  31], device='cuda:0'), tensor([441,  93,  93, 385, 121, 430, 430, 437, 386, 437, 386],
       device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7501, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2788, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0288, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([114, 326, 224, 224, 305,  32, 305, 434, 326, 224, 286],
       device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0'), tensor([271, 131, 117, 271, 121, 316], device='cuda:0'), tensor([ 93, 267], device='cuda:0'), tensor([441], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4187, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5278, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([137,   0,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,
         50], device='cuda:0'), tensor([ 16,  76,  16, 402, 225, 441, 285, 108], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2197, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4967, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7164, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 408, 127, 142, 127, 337], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([366,  10], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2276, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4640, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6916, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([416, 424, 181, 445, 236, 181, 236, 181, 107, 181, 352],
       device='cuda:0'), tensor([406,  11, 441], device='cuda:0'), tensor([295, 295, 295, 195, 295], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215,
        409], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8698, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3421, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2119, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7,   7, 436, 247, 247, 100, 181,   9], device='cuda:0'), tensor([132], device='cuda:0'), tensor([142, 182, 359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294,
        249], device='cuda:0'), tensor([ 49,  22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 369],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349, 399],
       device='cuda:0'), tensor([ 19, 389,  47, 200,  49,  49, 138, 194, 388, 100,  30,  47, 370,  68],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.3132, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5134, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8266, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([116, 392, 116,  47,  80, 404, 116,  88], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([ 96,  22, 197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21,
        305,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9881, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3596, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([173, 125, 341, 411, 319], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([384,  43, 110,  90,  44, 269, 279, 269, 269, 315, 269],
       device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([394, 257, 441,  44,  22, 384, 436, 384, 438], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4830, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5835, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0665, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00040/00055]	Time 0.66 (0.68)	Loss 2.07 (1.63)
		cls_loss 1.48 (1.17)	reg_loss 0.58 (0.46)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([100,  88,  88, 100,  88, 100,  88,  88, 100,  88, 100,  88, 100,  88,
        100,  88, 100,  88, 100,  99,  88], device='cuda:0'), tensor([ 63, 436,  80, 354], device='cuda:0'), tensor([436,  15, 294,  15,  15], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([9], device='cuda:0'), tensor([404, 385], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7520, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3003, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0523, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402, 223,  50], device='cuda:0'), tensor([ 40, 121,  75,  52], device='cuda:0'), tensor([108, 431, 436, 220, 329, 220, 165, 220, 220, 137,  93, 430],
       device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([134, 301, 294,  71,  79, 294,  82], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451], device='cuda:0'), tensor([80, 88, 63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8719, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3531, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 436, 436], device='cuda:0'), tensor([124, 443, 377,  93, 443], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([451, 399, 411, 439, 296, 411, 280, 411, 405, 411, 282, 451],
       device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8304, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3161, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  93, 100, 305, 305,  71, 390, 453,  93], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411, 286,
        411, 286,  90, 312,  37,  82,  90], device='cuda:0'), tensor([ 12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437,
        294, 345, 294, 437], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1580, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4904, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6484, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([148], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0'), tensor([ 91,  37, 201, 345, 359,  91, 345,  91,  91, 345,  91, 247],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256, 268, 438,
        138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438, 268, 268,
        256, 430, 438, 268, 256, 138,  70, 398, 441, 302, 249,  93, 399],
       device='cuda:0'), tensor([240], device='cuda:0'), tensor([319, 319, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2568, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4982, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7550, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 116, 306, 116, 306], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([ 90, 413,  90, 413,  90, 437,  90, 437,  90, 413, 437, 394, 213, 437],
       device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([294, 294, 436, 294, 315], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0606, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4340, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4946, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([ 50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([ 32, 121,  37,  43, 121, 124,  44, 197, 121,  11], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([268, 376, 268, 376], device='cuda:0'), tensor([2, 2, 2, 2], device='cuda:0'), tensor([142, 166, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8597, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3308, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1904, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 181, 451], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([305, 366, 445, 441, 385, 286, 441,   8], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7275, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2979, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0254, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 10, 218], device='cuda:0'), tensor([399], device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 48, 122,  83, 120, 385, 159, 286, 199, 447,  93,  71,  93, 315, 315,
        447, 315, 431, 315, 315,  93,  48, 447, 365, 431,  83, 447, 447, 315,
         67, 431, 438], device='cuda:0'), tensor([9], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0153, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3988, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4141, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295], device='cuda:0'), tensor([217, 436, 294, 215, 415,  83,  23, 415,  83, 432, 294, 385],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3826, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2833, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [001][00050/00055]	Time 0.66 (0.68)	Loss 1.28 (1.56)
		cls_loss 0.90 (1.11)	reg_loss 0.38 (0.45)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 89, 319, 406, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7302, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3084, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0386, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([225], device='cuda:0'), tensor([150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397,
        249, 394], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4328, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5223, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([204, 350, 204, 143], device='cuda:0'), tensor([ 83, 181, 415,  32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([21], device='cuda:0'), tensor([398, 436, 398,  51, 398,  51, 398], device='cuda:0'), tensor([451, 443, 100, 120, 415,  15,  30, 451], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([255], device='cuda:0')]yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([580, 1536])
yes2yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([3375, 1536])yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
featsyes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats
yes3 {'cls_loss': tensor(1.0742, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4095, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4837, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([ 88,  80,  88, 268,  80, 268,  80, 268], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,
         50, 415], device='cuda:0'), tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63,  96,  96],
       device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3258, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8463, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 1 finished with lr=0.00001971


[Train]: Epoch 2 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([441, 385, 286, 441,   8, 441, 286, 441], device='cuda:0'), tensor([332, 332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([89], device='cuda:0'), tensor([319,  11, 230,  46,  93, 215, 249, 134], device='cuda:0'), tensor([325,  93, 436, 345, 113, 105, 183, 121, 385, 166,  19, 121, 137, 286,
        434,  55, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0459, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4673, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([110, 197, 316], device='cuda:0'), tensor([246, 224, 246, 224, 316, 195,  50], device='cuda:0'), tensor([ 90, 279,  90, 258,  90,  11, 279,  11,  11, 279,  11, 121, 201,  93,
        279, 283, 279, 121, 283,  98, 283], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([9], device='cuda:0'), tensor([295, 295, 294], device='cuda:0'), tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123,
        350], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4388, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5374, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 436, 447, 436, 246], device='cuda:0'), tensor([392, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313],
       device='cuda:0'), tensor([415, 238,  12, 415, 453, 415, 385, 210, 415, 279, 453, 385,  32, 399,
        121, 356, 279, 273, 453], device='cuda:0'), tensor([405, 441, 405, 441, 405, 444, 405], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3823, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5992, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9816, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93, 437,
         93, 437,  93, 437, 121, 280], device='cuda:0'), tensor([383, 441,  63, 441, 316], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423, 294,  63,  22],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([302, 408, 399], device='cuda:0'), tensor([268], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9211, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3941, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3152, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([176, 345, 399,  90, 399, 230], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437, 100],
       device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116], device='cuda:0'), tensor([399, 302,   9], device='cuda:0'), tensor([220,  71, 167,   5, 167, 431, 268, 415,  22,  50, 268,  50, 412, 415,
        356, 251, 138,  50, 152, 360, 436, 282,  50,  50], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3167, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5598, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8765, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 226,  71, 338,  16, 197,  11,  71, 305, 286,  31],
       device='cuda:0'), tensor([341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([248, 340, 236, 121], device='cuda:0'), tensor([268, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8853, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3482, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2335, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 436, 400, 430, 351, 430], device='cuda:0'), tensor([98], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9154, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3637, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2791, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50,
        223, 402, 313, 223, 402, 115, 310], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([350, 204, 143, 302], device='cuda:0'), tensor([240], device='cuda:0'), tensor([436, 316, 433, 316], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([398, 436, 398,  51, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3047, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5221, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([440,  82, 440], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([441,  96, 441, 298, 441, 298], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([356, 384,  43, 110,  90,  44, 269, 279, 269, 269], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9112, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3767, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2879, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([193, 163, 304, 437, 436, 279, 296, 302, 422, 121], device='cuda:0'), tensor([412, 398, 116, 357, 412, 357, 412, 357, 398, 412], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([408], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3633, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2954, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([371, 371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([269], device='cuda:0'), tensor([ 62, 451, 264, 233, 385, 436, 415, 264, 218, 264, 433, 121, 264, 415],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([247, 436, 294, 425,  93, 283, 283, 283, 225], device='cuda:0'), tensor([451], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9384, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3612, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2996, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00010/00055]	Time 0.75 (0.75)	Loss 1.30 (1.30)
		cls_loss 0.94 (0.94)	reg_loss 0.36 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([21], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294,  96],
       device='cuda:0'), tensor([392, 116,  47,  80, 404, 116,  88, 189, 388, 404], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([279, 136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296],
       device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5284, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354, 100], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164, 282, 195], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([31], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 30, 173], device='cuda:0'), tensor([219], device='cuda:0'), tensor([383, 279, 113, 121, 453, 408, 408, 408, 408, 408, 436, 408, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8657, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3695, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2352, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269, 294], device='cuda:0'), tensor([436,  87, 108, 138,  36], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306], device='cuda:0'), tensor([255], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411,
        411, 411,  50, 157,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5122, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6633, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([441, 451, 441, 451,  93, 402], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([436, 436, 436,  22, 436], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7189, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2951, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0140, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 306, 306, 268, 306, 268, 268, 306, 268, 306, 306],
       device='cuda:0'), tensor([354,  47,  23, 183,  23, 183, 260,  36, 354,  47, 100],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 31, 345,  96,  46,  72, 415, 108], device='cuda:0'), tensor([181, 315, 181, 315, 181, 382,  96, 382], device='cuda:0'), tensor([133, 388,  80, 183,  80,  80], device='cuda:0'), tensor([365, 215, 305, 298, 292,  73, 399,  49, 440], device='cuda:0'), tensor([181, 181, 205, 436, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3687, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3030, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 359,  87,  96, 359, 415, 138,  50, 294, 302, 436],
       device='cuda:0'), tensor([215,  18, 215, 345, 215], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([339,  31, 445, 340, 277, 279, 236,  31, 415], device='cuda:0'), tensor([ 93,  93, 385, 121, 430, 430, 437, 386, 437, 386], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4046, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4032, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 131,  22], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([201, 345, 359, 359, 436, 359, 436, 436], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([305], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8261, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3230, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1491, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 93, 201,  93,  71,  93,  96,  22, 197, 351, 226, 351, 226,  93, 351,
        390, 420, 385, 122,  21, 305], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9168, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4042, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3210, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([430,  75, 451], device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([155, 131, 191,   9, 385,  71, 314, 105, 407, 385, 436, 407],
       device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([215], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([58], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9005, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3569, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2574, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332, 337, 337], device='cuda:0'), tensor([215], device='cuda:0'), tensor([142,  80, 298, 215], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7376, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0492, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00020/00055]	Time 0.66 (0.71)	Loss 1.05 (1.17)
		cls_loss 0.74 (0.84)	reg_loss 0.31 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150, 283, 286,
        283, 150, 150, 394, 150, 437, 425], device='cuda:0'), tensor([408], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9543, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3680, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3223, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([250,  50, 250], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292,
        415,  22, 247, 234, 247], device='cuda:0'), tensor([319, 451, 279, 380, 402, 447, 402], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([296], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1824, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4460, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6284, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 406, 451, 406, 140], device='cuda:0'), tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8380, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3286, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1666, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16,  22, 215, 441, 415], device='cuda:0'), tensor([ 50, 301,  80], device='cuda:0'), tensor([187], device='cuda:0'), tensor([146, 182, 392,   5, 146, 182], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([ 71, 390, 453,  93, 393, 100, 393, 385, 393, 305, 393, 305, 393],
       device='cuda:0'), tensor([187], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46, 120, 120,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8303, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3023, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1326, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  15], device='cuda:0'), tensor([242, 415, 436, 242, 415, 121, 242, 242], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([362], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([ 88,  91,  88, 100,  88,  88, 100,  88, 100,  88,  88, 100,  88, 100,
         88, 100,  88, 100,  88], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7305, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3273, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0578, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349,  82],
       device='cuda:0'), tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88, 91], device='cuda:0'), tensor([ 88, 298,  16, 298,  73,  71, 136], device='cuda:0'), tensor([121, 351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100],
       device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4476, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6026, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0503, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 80, 100,  80,  93, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5340, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7363, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([417, 221], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 80,  88, 268,  80, 268,  80, 268,  80, 268], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5196, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1965, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7161, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([327, 325,  63,  47,  47,  93,  23, 443,  49,  47], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([220, 181,  80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181,
        220, 181, 217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357,
        431, 220, 409, 220, 357, 431, 294, 357], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([283, 436, 383,  50, 291], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2925, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5213, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8138, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 10, 315], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399,  76, 399], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8421, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3901, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2322, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00030/00055]	Time 0.67 (0.69)	Loss 1.23 (1.19)
		cls_loss 0.84 (0.84)	reg_loss 0.39 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 215, 121, 215, 100], device='cuda:0'), tensor([315, 108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([295, 295, 295, 295, 295], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([437, 120, 437,  90, 413,  90, 413,  90, 437,  90, 437,  90, 413, 437,
        394], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9827, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3808, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3635, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 80,  88,  91,  88, 354], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([116, 116, 306, 306, 116, 306], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201, 268, 146, 424, 268, 340, 268, 411,
        268, 146], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7196, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3056, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0252, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 436], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221,
        196, 316, 286, 310], device='cuda:0'), tensor([256], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([295], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9148, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3698, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2847, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([183, 138,  47, 213, 281, 392,  47, 362, 385, 194, 194],
       device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 158,  93], device='cuda:0'), tensor([ 80, 392], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([108], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8591, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2001, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133, 404], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([402, 108, 415], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([ 50,  50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.2332, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5383, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7715, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80,  50, 268,  80, 436], device='cuda:0'), tensor([362, 362, 146, 100, 355, 116], device='cuda:0'), tensor([93], device='cuda:0'), tensor([4], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7802, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0962, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([330, 249, 443, 105,  16, 302, 124, 443, 377,  93, 443],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([316, 451, 405, 258, 430, 411, 108], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([107, 453, 107, 107, 107], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([269, 269, 433, 323, 323, 121, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7337, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2794, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0131, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49,
        411], device='cuda:0'), tensor([256, 138,  70, 256, 354, 268, 256, 268, 256, 268, 354, 138,  70, 398,
        438, 268, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256,
        268, 438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438,
        268, 268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(1.6091, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7163, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3254, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([402, 452, 437, 300, 437], device='cuda:0'), tensor([105, 268], device='cuda:0'), tensor([256], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5998, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2488, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8487, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407, 333,
        121,  21], device='cuda:0'), tensor([305, 451,  73, 121,  44,  73, 315, 437, 305, 437], device='cuda:0'), tensor([441, 257, 415, 385, 441, 301, 385, 399, 441], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9619, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3825, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3444, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00040/00055]	Time 0.66 (0.68)	Loss 1.34 (1.23)
		cls_loss 0.96 (0.87)	reg_loss 0.38 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([433], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([268], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([327,  14], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4995, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1744, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([415, 415,  36,  93, 183,  47, 430, 294, 354,  47,  80,  51, 238,  47],
       device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([392, 436, 392, 404, 385], device='cuda:0'), tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([258, 226, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9837, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4084, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3921, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([ 22, 254, 224, 399], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181], device='cuda:0'), tensor([295], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([392, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6102, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2397, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8499, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([366, 436, 366], device='cuda:0'), tensor([232,  36, 120,  36,  36,  73, 116,  82, 294, 305,  36, 177],
       device='cuda:0'), tensor([14, 14], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([ 44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215,
        215, 226], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93, 215, 141],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0496, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4124, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4620, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399,  88], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([197, 197, 197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([430], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([354, 398, 376,  71, 354, 398, 354, 398, 354, 357, 376, 146, 398,  44,
        338], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0840, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4439, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5279, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  71, 362], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([ 91, 305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,
         91], device='cuda:0'), tensor([285, 305, 441, 225,  16,  76,  16, 402, 418], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([319, 319, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1467, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4370, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5838, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305], device='cuda:0'), tensor([47], device='cuda:0'), tensor([408], device='cuda:0'), tensor([191], device='cuda:0'), tensor([248, 258, 132], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9, 298,
        279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279, 197,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8979, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3695, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2675, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([301, 439, 436, 439], device='cuda:0'), tensor([181,  82, 181,  82, 313, 181,  82, 181,  82, 181], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([159,  31, 121, 114, 326, 224, 224, 305,  32, 305, 434, 326, 224],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([200,  49,  49, 138, 194, 388, 100,  30,  47, 370,  68,  80,  68,  47,
        131, 303], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2919, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5207, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8126, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([253,  87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223, 305, 436],
       device='cuda:0'), tensor([121, 223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331,
        450, 223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1790, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4893, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6682, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([295], device='cuda:0'), tensor([142, 351, 142, 279, 201, 142,  11, 351, 142, 351, 142, 351],
       device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([120, 415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0123, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4233, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4356, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [002][00050/00055]	Time 0.66 (0.68)	Loss 1.44 (1.27)
		cls_loss 1.01 (0.90)	reg_loss 0.42 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([216, 436,  82, 103, 385, 385, 103,   8, 365, 103, 302, 103, 436, 103],
       device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233],
       device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([100, 116, 232, 116, 399], device='cuda:0'), tensor([408], device='cuda:0'), tensor([223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4094, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4441, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354, 138], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6577, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2679, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9256, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 430, 316], device='cuda:0'), tensor([144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([ 16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286],
       device='cuda:0'), tensor([90], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0212, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4372, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420,
        451], device='cuda:0'), tensor([271, 121, 316, 316, 316, 294], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([404,  93, 257, 385, 453, 110, 394, 257, 441,  44,  22, 384, 436],
       device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351], device='cuda:0'), tensor([108, 348, 354, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3528, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5424, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8951, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 2 finished with lr=0.00002956


[Train]: Epoch 3 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135, 135,
         93, 214, 351,  96, 155, 351,  96, 121, 351, 217], device='cuda:0'), tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9, 436], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([301, 439,  11], device='cuda:0'), tensor([121, 201,  93, 279, 283, 279, 121, 283,  98, 283, 301, 283, 329, 301,
        283], device='cuda:0'), tensor([451, 451, 319], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.6130, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7189, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.3319, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([256, 116, 116, 302, 116, 388, 338, 362, 338, 256, 385],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9], device='cuda:0'), tensor([268, 376, 268,  80, 268,  80], device='cuda:0'), tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405],
       device='cuda:0'), tensor([384,  43, 110,  90,  44, 269, 279, 269, 269, 315, 269],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8981, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3593, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2574, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127],
       device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 22,  52, 257, 234,  63, 399, 121], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7608, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3585, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1193, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11,  44,  71, 351,  82, 351, 424, 166,  82, 196, 286, 231],
       device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([2], device='cuda:0'), tensor([255], device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4905, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1863, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6768, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 436,  22, 436], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([255], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,  50, 268,
         50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50,  50],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8991, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3642, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2634, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50,  50, 415], device='cuda:0'), tensor([412, 357, 398, 357, 412, 357, 357, 398, 412, 357], device='cuda:0'), tensor([430, 436, 431, 415, 431, 431, 436, 431, 165], device='cuda:0'), tensor([ 82, 215, 440,  71], device='cuda:0'), tensor([ 47, 260,  17, 116, 388,  93,  19, 109,  80, 303, 116,  51],
       device='cuda:0'), tensor([110, 394, 257, 441,  44,  22, 384, 436, 384], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 15, 294,  15,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1621, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4839, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6460, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 301], device='cuda:0'), tensor([244], device='cuda:0'), tensor([298, 436, 294, 294, 436], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([ 63, 436,  80], device='cuda:0'), tensor([345,  93, 215, 225], device='cuda:0'), tensor([406], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2993, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1079, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4072, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279, 273, 453,
        196, 397, 279, 100], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([268], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([ 44, 304, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9550, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3803, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3354, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 37,  37, 207,  70, 270,  44,  37, 310, 399, 247], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([256, 315, 256], device='cuda:0'), tensor([47], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8023, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3665, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1689, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,
          5, 268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,
          5, 392, 268, 268, 268], device='cuda:0'), tensor([451, 191, 108], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([158, 120, 181, 158, 158], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9107, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3313, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([423], device='cuda:0'), tensor([215], device='cuda:0'), tensor([306, 116, 116, 306, 306, 116], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([399,  88], device='cuda:0'), tensor([100,  71, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4091, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1726, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5817, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00010/00055]	Time 0.75 (0.75)	Loss 0.58 (0.58)
		cls_loss 0.41 (0.41)	reg_loss 0.17 (0.17)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([388, 354, 392], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([224, 246, 224, 316, 195,  50, 451, 251,  22, 251, 279],
       device='cuda:0'), tensor([215,  83, 405, 302], device='cuda:0'), tensor([280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7253, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2659, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9912, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([439, 439, 257,   9, 439], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([ 68, 370, 404, 404,  47, 285, 333, 362,  22, 263,  80, 116, 100],
       device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300, 294],
       device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1316, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5369, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6686, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([223, 223, 144, 223, 223, 310], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0154, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4119, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4273, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384, 270],
       device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349, 399],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 91, 105,  91,  31, 294,  31, 294,  91, 150, 150], device='cuda:0'), tensor([191], device='cuda:0'), tensor([345, 309, 279, 309, 299,  32,  93, 121, 120, 302, 121],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1069, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4800, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5870, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 68, 183,  80, 116, 116, 116, 116, 116], device='cuda:0'), tensor([438, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256, 268,
        438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438, 268,
        268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302, 249,  93, 399],
       device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([244], device='cuda:0'), tensor([4], device='cuda:0'), tensor([98], device='cuda:0'), tensor([350, 305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([398, 436, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2154, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5675, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7829, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 163], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([ 82, 255,  82, 294,  82, 134, 255,  31], device='cuda:0'), tensor([408], device='cuda:0'), tensor([4], device='cuda:0'), tensor([116, 138, 294, 362, 362, 146], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([382,  96, 382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5353, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1996, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7350, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([295, 295, 295, 195, 295, 295], device='cuda:0'), tensor([249, 371, 201], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([441, 385, 286, 441,   8, 441, 286, 441], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6121, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2483, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8605, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([37], device='cuda:0'), tensor([ 52,  52, 298,  71, 298,  52, 298, 313,  52], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([100,  88, 100,  88, 100,  88, 100,  88, 100,  88, 100,  99,  88, 100,
         88,  88, 100], device='cuda:0'), tensor([294, 196, 215, 215], device='cuda:0'), tensor([255, 255, 255], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7402, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3380, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0781, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 256], device='cuda:0'), tensor([256], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1459, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5039, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6498, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([ 61, 253, 313,  14], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 37,  82,  90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90, 316,
        286, 121, 436, 286, 316, 143, 283, 286, 430], device='cuda:0'), tensor([408], device='cuda:0'), tensor([121, 316, 316, 316, 294,  82, 292], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1077, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5548, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6624, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00020/00055]	Time 0.66 (0.71)	Loss 1.66 (1.12)
		cls_loss 1.11 (0.76)	reg_loss 0.55 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([385, 385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438],
       device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([ 47,  93,  23, 443,  49,  47,  98, 447,  47, 213,  80,  80, 121,   8,
        217], device='cuda:0'), tensor([319, 408, 127, 142, 127, 337], device='cuda:0'), tensor([295], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1794, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5012, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6806, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268], device='cuda:0'), tensor([247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417,
        388, 417, 411, 417, 417, 417, 314, 417, 417, 417, 436, 417],
       device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([256], device='cuda:0'), tensor([58], device='cuda:0'), tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123,
        350], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1352, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4390, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5742, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93, 215, 141],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([398, 256, 412, 412, 412, 354, 412, 412, 354, 138, 398, 256, 412, 412,
        412, 354, 412, 138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256,
        412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 354, 412, 354, 412,
        138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412, 412, 354,
        412, 138, 398, 256, 412, 412, 412, 411, 412, 411, 138],
       device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121, 120, 249,  31], device='cuda:0'), tensor([294, 345, 294, 437, 294, 437, 286, 280, 437, 286, 345, 437, 286, 329,
        294,  87, 380, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(1.7832, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.8157, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5988, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([440, 121, 430, 197, 440, 121, 316,  32,  63], device='cuda:0'), tensor([100, 116, 232, 116, 399,  80], device='cuda:0'), tensor([116, 116,  80, 254,  93, 116, 415], device='cuda:0'), tensor([ 71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282, 226, 279,
        226, 279, 197,  10,  93,  10,  87, 436, 441, 436], device='cuda:0'), tensor([407, 410, 280, 270, 270, 436,  95], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([408], device='cuda:0'), tensor([430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8320, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3667, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1988, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([201], device='cuda:0'), tensor([221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115,
        190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([138, 138, 138,  73, 298, 138, 138, 361, 298,  80], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9874, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4483, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4356, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([213, 122,  30,  93, 100,  93], device='cuda:0'), tensor([100, 294,   4,   4], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6417, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2657, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9075, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304],
       device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294],
       device='cuda:0'), tensor([100, 262, 121, 262, 100, 262, 100, 430], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([269, 301, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7599, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3172, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0771, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 436, 316, 433], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443, 394],
       device='cuda:0'), tensor([142, 351, 142, 351, 142, 351, 196, 351, 429, 351, 429, 351, 231, 196,
        280, 280, 280, 305, 345], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 44,  82, 436, 315, 447, 436, 181, 430, 315,  82, 431, 385, 431, 315,
        213, 216, 436,  82, 103], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1406, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4986, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6392, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([440, 436, 137, 357, 220,  15, 294, 302, 415, 440], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([408], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6891, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9543, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 443, 438, 305, 438, 305,  44, 305, 443, 434, 438],
       device='cuda:0'), tensor([175, 436,  10, 436,  10, 315], device='cuda:0'), tensor([436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385, 166,
         19, 121, 137, 286, 434], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([148], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7514, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3249, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0763, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00030/00055]	Time 0.66 (0.69)	Loss 1.08 (1.11)
		cls_loss 0.75 (0.76)	reg_loss 0.32 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50],
       device='cuda:0'), tensor([354, 404, 124, 130, 446, 166, 130, 378, 166, 385, 378, 388],
       device='cuda:0'), tensor([120, 120], device='cuda:0'), tensor([93], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([268,  37, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8394, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3425, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1819, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([285, 108, 441, 247], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([295, 294, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6337, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2508, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8845, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 441], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([177, 309,  13, 437, 413, 197, 380, 413, 424,  90, 413,  90],
       device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9574, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4314, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3888, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146, 268], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279], device='cuda:0'), tensor([108, 209, 338, 401], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,
         37, 331,  37, 436,  37, 436,  37,  22,  22], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254, 254],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9279, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3911, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3190, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 315], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([256], device='cuda:0'), tensor([255], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([433, 356, 292, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7839, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3389, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1228, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([47], device='cuda:0'), tensor([228,   9], device='cuda:0'), tensor([451], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([197,  44, 385, 441, 385, 441,  93,  93, 385, 121, 430, 430, 437, 386],
       device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([256,  80, 109, 325,  47, 256, 195,  47, 388, 260, 256, 109],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9500, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4173, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3672, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105],
       device='cuda:0'), tensor([431, 137, 431,   9, 431], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([ 45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37, 247, 225,
         91,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8665, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3504, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2169, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32, 315,  90, 305, 451,  73, 121,  44,  73, 315, 437],
       device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([451], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([225], device='cuda:0'), tensor([436, 247], device='cuda:0'), tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8787, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3713, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2500, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([89], device='cuda:0'), tensor([80], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351], device='cuda:0'), tensor([ 44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407,
        280,  21,  40, 269,  44, 424], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8144, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3215, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1359, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([452, 284,  90,  80], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([108, 155, 247, 436, 230], device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([  9, 163, 398], device='cuda:0'), tensor([14], device='cuda:0'), tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7964, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3145, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1109, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00040/00055]	Time 0.66 (0.68)	Loss 1.11 (1.11)
		cls_loss 0.80 (0.77)	reg_loss 0.31 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([110, 197, 316], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9698, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4106, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3804, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([ 83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([402, 384, 215, 215, 215], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([215,  50,  50, 217, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0305, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4460, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4765, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351,  63,  80, 351, 121], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150,
        283, 286, 283], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5919, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2471, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8389, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 155, 131, 191], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([146], device='cuda:0'), tensor([ 80, 392, 294, 121], device='cuda:0'), tensor([402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181, 219, 424],
       device='cuda:0'), tensor([121], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7011, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3110, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0120, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441, 431],
       device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([121, 312, 121,  50,  10], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([ 22, 399, 294, 399], device='cuda:0'), tensor([ 65,  65, 294,  65, 124], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7159, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2878, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0037, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([323, 323, 121, 269, 323], device='cuda:0'), tensor([146, 182, 392,   5, 146], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([100, 121,  29, 453, 249, 356,  11,  44, 351, 121, 351, 127],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8315, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3420, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1734, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([256], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310], device='cuda:0'), tensor([215, 187,   8, 187,  96,  96, 226,  83, 439], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133, 404, 389], device='cuda:0'), tensor([ 93, 267,  93, 267,  93, 158,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4036, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6309, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0344, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 436, 447, 436, 246, 436,  82], device='cuda:0'), tensor([430, 315,  93, 244, 432], device='cuda:0'), tensor([430, 406,  11], device='cuda:0'), tensor([255], device='cuda:0'), tensor([447, 402,  50, 181,  30, 181], device='cuda:0'), tensor([298,  71, 247,  93], device='cuda:0'), tensor([256], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5156, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1967, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7123, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([215], device='cuda:0'), tensor([240, 436, 240], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6613, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2822, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9435, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([362], device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116], device='cuda:0'), tensor([305, 116, 385], device='cuda:0'), tensor([431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294, 357, 431,
        447, 357, 431, 294], device='cuda:0'), tensor([332, 332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4498, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4864, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [003][00050/00055]	Time 0.66 (0.68)	Loss 1.49 (1.18)
		cls_loss 1.04 (0.82)	reg_loss 0.45 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([313], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7450, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3187, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0637, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len:
feats torch.Size([2541, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([996, 1536])
yes2 torch.Size([2207, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([59, 1536]) torch.Size([83, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2125, 1536]) 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([195, 201, 195, 442, 121, 442, 451, 279, 442,  93, 345],
       device='cuda:0'), tensor([31], device='cuda:0'), tensor([441, 301,  43], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([187, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7075, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3204, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0279, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354,
        256, 100, 392], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([219], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0532, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4727, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5259, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([395,  76, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326,
        395], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([249, 315,  96, 430, 316, 451, 405], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2569, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5097, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7665, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 3 finished with lr=0.00003942


[Train]: Epoch 4 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 430,  11], device='cuda:0'), tensor([4], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([ 93, 196, 127, 363, 430, 407, 394, 441, 394, 113,  21, 294,  21],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([121, 223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331,
        450, 223, 219, 387, 184,  76, 247, 279], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1717, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5130, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6847, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([288, 249, 430, 313, 165, 205, 156, 121], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([386, 385, 121, 166,  93, 120, 424, 166], device='cuda:0'), tensor([ 47, 260,  44], device='cuda:0'), tensor([146], device='cuda:0'), tensor([187], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9161, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3871, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3033, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 294, 298, 441, 298, 441, 298, 441, 298, 441], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223, 223,  82, 248,
        138, 164, 147,  93,  25, 336, 241, 184, 296, 411], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1336, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5005, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6341, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82,
        152, 164, 121, 251, 164, 121, 415,  93, 270, 279], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([392, 392, 392, 306, 116], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82],
       device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7806, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1319, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,
         44, 200, 258], device='cuda:0'), tensor([166, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1296, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4556, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5852, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 276, 453, 416, 424, 181, 445], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([65], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([384, 436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([256, 315, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6208, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2716, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8924, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 302, 256], device='cuda:0'), tensor([191], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([415,  22, 247, 234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,
         83, 417, 311, 417, 388], device='cuda:0'), tensor([451], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0'), tensor([384, 215, 215, 215, 402, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9666, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4092, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3759, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 100, 210,  68, 121, 404, 257, 385,  80, 116,  19, 182, 100],
       device='cuda:0'), tensor([398, 116, 357, 412, 357, 412, 357, 398, 412, 357], device='cuda:0'), tensor([436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44,
        438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([384,  19, 182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113,
        105, 183], device='cuda:0'), tensor([127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 11,  90,  11, 429], device='cuda:0'), tensor([197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,
         30,  21, 286,  21, 286, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(1.3245, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5943, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9189, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 447, 401, 399, 121, 408], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([215], device='cuda:0'), tensor([451], device='cuda:0'), tensor([268], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0'), tensor([244, 432, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5429, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2104, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7533, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 302, 107, 165,  52, 107,  96], device='cuda:0'), tensor([401, 424], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([436], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([225, 441, 285, 108, 441], device='cuda:0'), tensor([ 90, 279,  90, 258,  90,  11, 279,  11,  11, 279,  11, 121, 201,  93,
        279, 283, 279, 121, 283,  98, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7090, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0165, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([121, 249, 371, 201], device='cuda:0'), tensor([451, 451, 451, 451, 451, 155, 451], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([  7,   7,   7,   7,   7, 436, 247, 247, 100, 181], device='cuda:0'), tensor([366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2414, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7649, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00010/00055]	Time 0.75 (0.75)	Loss 0.76 (0.76)
		cls_loss 0.52 (0.52)	reg_loss 0.24 (0.24)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([385, 393, 382, 234, 303, 382, 181,   9, 181, 315, 181,   9, 181, 382,
        315, 181, 315, 181], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1491, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5921, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7412, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 369],
       device='cuda:0'), tensor([ 72, 329, 411,  47,  78, 411, 138,  78, 411, 138, 138, 138,  73, 298,
        138, 138], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([47], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9570, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3861, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408,  93], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([100,  80, 100,  80, 166, 181,  71, 354], device='cuda:0'), tensor([385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121],
       device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2254, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7123, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([345,  70, 441, 356, 279,  76, 399,  76, 396, 441, 316, 302, 441],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([ 37,  37, 207,  70, 270,  44,  37, 310, 399, 247], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7908, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3465, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1373, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 407, 437, 286], device='cuda:0'), tensor([209,  88, 354,  88,  80,  88, 268,  80], device='cuda:0'), tensor([401], device='cuda:0'), tensor([411,  50, 415,  93], device='cuda:0'), tensor([ 93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,
         37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37],
       device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([116, 399,  80, 121,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9481, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4162, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3643, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 340, 236, 121], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([89], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8443, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 298, 215, 187,   8, 187,  96,  96], device='cuda:0'), tensor([ 22, 451,  53, 424], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([415,  63, 279, 121, 411, 401, 100], device='cuda:0'), tensor([ 82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407,
        405, 302, 405], device='cuda:0'), tensor([127, 224, 438, 213,  80, 121, 423, 294,  63,  22, 127],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9514, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4271, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3785, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([ 71,  71, 215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93],
       device='cuda:0'), tensor([100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([268], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0'), tensor([301, 439, 439, 436, 439, 436, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7609, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3510, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1118, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 441], device='cuda:0'), tensor([119, 131, 121, 131, 415], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([148], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3835, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1502, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5337, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 408], device='cuda:0'), tensor([88], device='cuda:0'), tensor([ 93, 437, 294, 345, 294, 437, 294, 437, 286, 280, 437, 286, 345, 437,
        286, 329, 294], device='cuda:0'), tensor([ 31,  31,  31,  31,  31,  31,  31, 201, 121], device='cuda:0'), tensor([244], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9434, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4162, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3596, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00020/00055]	Time 0.67 (0.71)	Loss 1.36 (1.06)
		cls_loss 0.94 (0.73)	reg_loss 0.42 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5,
        392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,
         50, 268, 268, 392, 268, 268, 268], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([451, 142, 142, 280], device='cuda:0'), tensor([441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9617, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5030, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4647, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([269], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,
         50, 302, 247, 270, 394, 279, 421, 150, 302, 415, 184],
       device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4922, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5914, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([191, 315, 305, 315,  73, 401, 441, 451, 305, 451], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([116, 404, 138, 100,   9, 404, 330], device='cuda:0'), tensor([448, 387, 127, 155], device='cuda:0'), tensor([296], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7733, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3114, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0847, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420],
       device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 73, 399,  49, 440, 440], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6781, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2644, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9425, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([394, 411], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([436, 120,  35, 436, 383,  44, 354,  44, 256, 354,  44, 354, 398],
       device='cuda:0'), tensor([295, 351, 351, 295, 351,  63], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([197, 197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3754, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2131, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  80,  93, 121, 124, 332, 248, 298, 249,  93], device='cuda:0'), tensor([ 44, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([116,  80, 254,  93, 116, 415,  82, 415, 116, 388, 232, 116],
       device='cuda:0'), tensor([385, 393, 305, 393, 305, 393, 305, 159, 393, 100, 393,  87, 437, 332,
        437,  95,  83, 286, 407, 437,  21], device='cuda:0'), tensor([  8, 430,   8, 325, 385, 385, 183, 361, 203, 385, 325, 397],
       device='cuda:0'), tensor([399, 351, 245, 351, 142, 351, 142, 279, 201, 142,  11, 351],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2690, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5920, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8610, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4432, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1853, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6284, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([256], device='cuda:0'), tensor([93], device='cuda:0'), tensor([244], device='cuda:0'), tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,
         37, 247, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6515, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2935, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9450, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 44, 304, 217, 201,  88, 430], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4516, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1828, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6343, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([437,  90,  44, 195, 201], device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([  9, 439, 439, 439, 439, 439], device='cuda:0'), tensor([9], device='cuda:0'), tensor([399, 121, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7653, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3702, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1355, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00030/00055]	Time 0.66 (0.69)	Loss 1.14 (1.09)
		cls_loss 0.77 (0.74)	reg_loss 0.37 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([215], device='cuda:0'), tensor([451, 121, 305, 424, 305], device='cuda:0'), tensor([408, 436], device='cuda:0'), tensor([306, 268, 268, 306, 268, 306, 306, 306], device='cuda:0'), tensor([221, 137,   0,  22,  52, 137, 385,  50], device='cuda:0'), tensor([298, 436, 294, 294, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6461, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3335, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9796, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([248, 258, 132], device='cuda:0'), tensor([100,  88, 100, 209], device='cuda:0'), tensor([256, 388, 256, 116, 109, 385, 320, 320, 124, 100, 383, 109, 388, 330,
          8, 383, 385, 281, 183], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([100, 354, 100, 166, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8936, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3619, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2555, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([ 59, 436, 224,  71, 385,  62, 451,  62, 451], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6922, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2564, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9485, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412,  87, 412], device='cuda:0'), tensor([ 87, 120, 201, 430, 201, 316, 316, 316, 305], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([ 49, 181,  49,  22, 270, 399, 279, 121, 383], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8815, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3739, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2554, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([ 55, 294, 436, 385, 302,  93, 282, 294, 264, 292, 399, 142],
       device='cuda:0'), tensor([398, 436, 398], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,
         50], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2839, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5690, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8529, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  91, 105,  91,  31, 294,  31, 294,  91, 150], device='cuda:0'), tensor([225,  50], device='cuda:0'), tensor([399], device='cuda:0'), tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121,  59],
       device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280,  71,  71, 424, 201, 121],
       device='cuda:0'), tensor([305, 399, 363, 305, 426, 426, 252, 367, 305], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4451, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5817, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([93], device='cuda:0'), tensor([399], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3615, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1943, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([255, 255, 255, 255, 255], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([415, 163], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([220, 357, 431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9349, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3640, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([430, 325, 183, 388,  81, 182, 325,   1, 325,  93, 183,  47, 285, 356,
        330], device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0'), tensor([413, 197, 380, 413, 424,  90, 413,  90, 121, 437, 124],
       device='cuda:0'), tensor([415, 121, 242, 242], device='cuda:0'), tensor([359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294, 249],
       device='cuda:0'), tensor([215,  50,  50, 217, 436], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0972, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5908, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([107, 107,   2,   2], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([90], device='cuda:0'), tensor([93], device='cuda:0'), tensor([436, 103, 436, 103], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([436, 441, 143, 279, 441,  32, 124,  71, 100,  32, 430, 441],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6906, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2920, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9826, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00040/00055]	Time 0.66 (0.68)	Loss 0.98 (1.06)
		cls_loss 0.69 (0.73)	reg_loss 0.29 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([215], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([392, 404, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7226, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0899, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([255], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16, 219], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([215, 217, 215, 215, 215,  18, 215], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([134, 215, 134, 108, 431], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5448, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7858, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215,
        409], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([408], device='cuda:0'), tensor([279, 309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([319, 406, 451, 406, 140], device='cuda:0'), tensor([436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436],
       device='cuda:0'), tensor([220], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8440, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3597, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2037, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354, 138, 285],
       device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305, 187],
       device='cuda:0'), tensor([392, 146,   5, 378, 146, 182], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([ 44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223,
        402, 223,  50, 223, 402, 313, 223, 402], device='cuda:0'), tensor([279, 136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.4302, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0581, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([189, 189, 313], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([113], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7659, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3470, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1130, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407], device='cuda:0'), tensor([267], device='cuda:0'), tensor([378, 137, 137], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([116, 138, 232, 388, 232], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237], device='cuda:0'), tensor([436, 408, 279, 408, 436, 408, 436, 408, 436], device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6007, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2602, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8610, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([294, 399, 302], device='cuda:0'), tensor([225], device='cuda:0'), tensor([436,  15], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([436, 316,  93, 191, 436,  44, 451, 221, 284, 436, 394, 105],
       device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5070, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2371, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7440, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([453, 388, 257, 370,  80,  80, 443,  93], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([240], device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6020, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3438, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9458, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 87, 131, 397, 385, 302], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91],
       device='cuda:0'), tensor([63], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([80], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([250,  50, 250, 432], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6154, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2931, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9084, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0'), tensor([ 57,  93, 441], device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([268], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([136, 423, 305], device='cuda:0'), tensor([ 47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116,
        195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6208, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8941, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [004][00050/00055]	Time 0.66 (0.68)	Loss 0.89 (1.03)
		cls_loss 0.62 (0.71)	reg_loss 0.27 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 14,  61, 253, 313], device='cuda:0'), tensor([283], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([309,  50, 309, 279, 121], device='cuda:0'), tensor([121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9, 298, 279,  71,
        282, 436, 385, 436, 282, 226, 279, 226, 279, 197,  10,  93,  10],
       device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411,  90], device='cuda:0'), tensor([ 91, 302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5552, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7880, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([258, 430, 411, 108, 451, 399, 411, 439, 296, 411], device='cuda:0'), tensor([354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354, 100, 392,
        129, 100, 392, 430, 100], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([408], device='cuda:0'), tensor([255], device='cuda:0'), tensor([256], device='cuda:0'), tensor([121, 316, 316, 316, 294,  82, 292], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6296, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3143, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9439, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 21,  32,  95, 415, 152, 447], device='cuda:0'), tensor([351,  90,  43, 436, 441, 301], device='cuda:0'), tensor([362,  22, 263,  80, 116, 100, 121, 388, 359, 338,  30, 338, 338],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7674, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1229, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116,
        133, 404, 389], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([326, 395, 326, 395, 395,   8, 395, 205, 326, 395,  85, 417, 159,  31,
        121, 114, 326, 224], device='cuda:0'), tensor([ 37,  43, 121, 124,  44, 197, 121,  11, 121, 215,  32, 121],
       device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2628, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8300, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 4 finished with lr=0.00004927


[Train]: Epoch 5 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([439, 439, 257,   9], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7364, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0977, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([244], device='cuda:0'), tensor([100], device='cuda:0'), tensor([15], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3178, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1484, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4661, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([451], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305],
       device='cuda:0'), tensor([ 73, 121,  44,  73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437,
        315, 437], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294,  96],
       device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([304, 280], device='cuda:0'), tensor([404, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8828, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4085, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2913, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([120, 302, 424,  46,  72], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([182, 392,   5, 146, 182, 392], device='cuda:0'), tensor([155, 131, 119, 131], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6921, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3301, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0222, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([205], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([ 16,  76,  16, 402, 225, 441, 285, 108], device='cuda:0'), tensor([9], device='cuda:0'), tensor([58], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1976, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7284, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50,  16],
       device='cuda:0'), tensor([  4, 358, 294], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8419, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4304, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2723, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294, 289],
       device='cuda:0'), tensor([436, 366,  10, 366], device='cuda:0'), tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8301, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3619, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1920, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285, 405, 294,  21],
       device='cuda:0'), tensor([354,  88, 209, 411, 121, 105,  88, 411], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270,
        394, 279, 421, 150, 302, 415, 184, 302, 296, 302], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1614, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4965, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6579, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([105, 405], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6864, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3290, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0155, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87, 398], device='cuda:0'), tensor([296], device='cuda:0'), tensor([187], device='cuda:0'), tensor([  5, 268, 268, 432, 268], device='cuda:0'), tensor([14, 30, 14], device='cuda:0'), tensor([121, 215,  32, 121, 120, 351,  89, 351,  37, 351,  94, 121, 155, 121,
        351,  37,  37, 121,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7813, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3929, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1743, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 16, 298,  73,  71, 136,  73, 424, 298], device='cuda:0'), tensor([256], device='cuda:0'), tensor([319, 406, 451, 406, 140], device='cuda:0'), tensor([116, 116,  80, 254,  93, 116, 415], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6123, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2471, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8594, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00010/00055]	Time 0.74 (0.74)	Loss 0.86 (0.86)
		cls_loss 0.61 (0.61)	reg_loss 0.25 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([116, 398, 354], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27,  27, 135],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([166, 294], device='cuda:0'), tensor([ 80, 268,  80, 268,  80, 268,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6381, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3044, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9424, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([240], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330, 399], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5331, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3937, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 388, 354, 392], device='cuda:0'), tensor([441, 383, 415, 313, 172, 441, 438, 441, 138, 415, 270, 441],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([451, 408,  37,  37,  37, 380, 408, 451, 193, 279, 105, 313, 451, 193,
         16, 105,  85, 408, 408,  50, 408], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9707, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5047, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4753, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 436,  80, 354], device='cuda:0'), tensor([325,  47, 195,  47, 256,  19, 109,  47, 388, 260], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([90], device='cuda:0'), tensor([451], device='cuda:0'), tensor([100, 388,  80, 370,  51,  68, 370, 404, 404,  47, 285, 333, 362],
       device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214, 316], device='cuda:0'), tensor([437,  87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7767, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0883, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([398, 436, 398], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6088, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3109, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9196, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47, 116, 256, 354,
         47,  36, 354, 183,  36, 256, 256], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([244], device='cuda:0'), tensor([252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426, 252,
        367, 426, 252, 367, 426, 252, 367,  62, 183], device='cuda:0'), tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436], device='cuda:0'), tensor([181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 382,  96], device='cuda:0')]
yes3 {'cls_loss': tensor(1.4546, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.0418, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([121, 249, 371, 201], device='cuda:0'), tensor([ 11, 441, 249, 441], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6055, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2470, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8525, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([283, 383,  50, 291], device='cuda:0'), tensor([236,  31, 415,  63, 279, 121, 411], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([430, 351,  93, 351, 325, 351, 294, 351,  93,  93], device='cuda:0'), tensor([ 47,  36,  47, 256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,
         47], device='cuda:0'), tensor([385, 122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135,
        135,  93, 214, 351,  96, 155, 351,  96], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2546, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6588, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9134, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([121, 312, 334,  15, 436,  15], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436, 279],
       device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([ 11, 420, 451, 420], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8125, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3492, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1617, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93],
       device='cuda:0'), tensor([267,  93, 267,  93, 267], device='cuda:0'), tensor([447,  47, 100, 453, 388, 257, 370,  80], device='cuda:0'), tensor([22, 50], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 44, 436,  93, 137,  10, 436,  44, 108, 431], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6079, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8695, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00020/00055]	Time 0.66 (0.70)	Loss 0.87 (0.86)
		cls_loss 0.61 (0.61)	reg_loss 0.26 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([269, 301, 436], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([408], device='cuda:0'), tensor([451,  49, 424], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8381, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4067, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2449, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([284], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([177, 309,  13, 437, 413, 197, 380, 413, 424,  90, 413,  90],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349, 399],
       device='cuda:0'), tensor([295, 295, 295, 295, 195], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6624, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3194, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9818, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 215, 215, 402, 108], device='cuda:0'), tensor([312, 121,  50,  10], device='cuda:0'), tensor([4], device='cuda:0'), tensor([201, 142,  11, 351, 142, 351, 142, 351, 142, 351, 196, 351],
       device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357], device='cuda:0'), tensor([215], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6722, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3040, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9762, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([248, 258, 132], device='cuda:0'), tensor([436, 137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([65], device='cuda:0'), tensor([396, 441, 316, 302, 441, 302, 441, 313, 302, 441,  71],
       device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0'), tensor([47], device='cuda:0'), tensor([ 62, 451, 264, 233, 385, 436, 415, 264, 218, 264, 433, 121, 264, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8230, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3454, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1684, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([253,  87, 140, 316, 424,  83, 402], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([436, 436, 436], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([279,  96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6833, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3276, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0109, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62, 294, 294],
       device='cuda:0'), tensor([345,  96,  46,  72, 415, 108], device='cuda:0'), tensor([225], device='cuda:0'), tensor([306, 256, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7914, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3645, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1559, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96],
       device='cuda:0'), tensor([223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316,
        286, 310,  50,  50], device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([279, 287,  50, 257, 436, 408, 436, 399, 121, 209, 302, 123, 430],
       device='cuda:0'), tensor([100, 385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223,
        121, 100, 436, 366, 215,  83, 436], device='cuda:0'), tensor([269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332,
        269, 407], device='cuda:0'), tensor([247, 436], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2922, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5930, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8852, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([ 96, 215, 313,  96, 294,  96,  70,  96, 354, 215, 354],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([415, 279, 453, 385,  32, 399, 121, 356, 279, 273, 453, 196, 397, 279,
        100, 296], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3700, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1425, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([139, 115, 121], device='cuda:0'), tensor([50], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([ 44, 223, 223, 223], device='cuda:0'), tensor([ 80, 385,  22,  22, 257, 133, 399, 302,   9], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([ 71, 253,  71,  18,  44,  12,  14,  71, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5463, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7688, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 36, 183, 354, 330,  80,  80, 338,  80], device='cuda:0'), tensor([268], device='cuda:0'), tensor([232, 116, 116, 138, 294, 362, 362], device='cuda:0'), tensor([451, 258,  71, 411, 399, 188, 430, 425, 411, 207], device='cuda:0'), tensor([93], device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([105, 407, 385, 436, 407, 436, 407, 407, 314, 407,  85, 314,  95,  50],
       device='cuda:0'), tensor([ 15, 294,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7272, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3430, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0702, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00030/00055]	Time 0.66 (0.69)	Loss 1.07 (0.93)
		cls_loss 0.73 (0.65)	reg_loss 0.34 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([201, 195, 442, 121, 442, 451, 279, 442,  93, 345, 437, 115],
       device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([451], device='cuda:0'), tensor([354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256,
        100, 392, 129, 100, 392], device='cuda:0'), tensor([ 93, 366, 209], device='cuda:0'), tensor([ 22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5662, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2994, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8656, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 100, 100,  80, 100,  80, 166,  71, 354], device='cuda:0'), tensor([  7,   7,   7,   7, 436, 247, 247, 100, 181,   9], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 96, 105, 226,  71, 338,  16, 197,  11,  71, 305], device='cuda:0'), tensor([309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([234], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6660, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3468, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0128, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80],
       device='cuda:0'), tensor([ 63, 234, 215,  50], device='cuda:0'), tensor([ 78, 411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([406], device='cuda:0'), tensor([362], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9911, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4307, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4218, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 436,  82, 313,  82, 181,  82, 181,  82, 436], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([255], device='cuda:0'), tensor([315], device='cuda:0'), tensor([187], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([103, 385, 385, 103,   8, 365, 103, 302, 103, 436, 103, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5959, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2771, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8729, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([21], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,
         50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([401], device='cuda:0'), tensor([14], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8261, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3533, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1794, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([105, 215, 340, 215, 217, 215, 215, 215], device='cuda:0'), tensor([256], device='cuda:0'), tensor([215,  83, 405], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5546, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3235, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8781, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291, 438, 291, 396, 438],
       device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([385, 354, 100, 121, 404,  93, 257, 385, 453, 110, 394],
       device='cuda:0'), tensor([220, 292], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9271, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4120, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3391, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90,  11, 429], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197,  50], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359, 415, 138,  50,
        294, 302], device='cuda:0'), tensor([258, 226, 411, 226, 453, 197, 436, 340, 121, 351, 318, 351, 436,  43,
        351, 296, 351, 296], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8417, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4076, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2493, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338,
        294], device='cuda:0'), tensor([ 36,  73, 116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305,
        116, 385], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([150, 302,  85, 302, 363, 385, 247, 294, 217, 436], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([107, 107, 107, 107, 107], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9732, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4698, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4431, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([404, 138, 100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220,
        181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357,
        431, 137, 220, 220, 357, 431, 220, 409, 220], device='cuda:0'), tensor([ 44,  22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223,
        279, 165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([225, 108, 155, 247], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1962, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5483, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7445, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00040/00055]	Time 0.66 (0.68)	Loss 1.74 (1.14)
		cls_loss 1.20 (0.79)	reg_loss 0.55 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([219], device='cuda:0'), tensor([451, 301], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([306, 116, 306, 116], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([323, 121, 269, 323], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5424, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2210, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7634, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 166], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([354, 121, 108,  90, 268], device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([148], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5568, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2459, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8026, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([268], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([224, 385, 224, 246], device='cuda:0'), tensor([392, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268,
        313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392, 268, 268,
        268, 268,   5, 268], device='cuda:0'), tensor([131,  22], device='cuda:0'), tensor([441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159, 314,
        184, 147,  95, 231], device='cuda:0'), tensor([366, 445, 441, 385, 286, 441,   8, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9884, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5241, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5125, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301], device='cuda:0'), tensor([136, 423, 305], device='cuda:0'), tensor([93], device='cuda:0'), tensor([98], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([298, 436, 294, 294, 436, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6351, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2732, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9083, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([189, 189, 313], device='cuda:0'), tensor([320, 404, 447, 217,  80, 100], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,
         50, 157,  90, 157,  37], device='cuda:0'), tensor([201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50,
        223, 402, 313, 223, 402, 115], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([173, 125, 341, 411, 319], device='cuda:0'), tensor([441, 298, 441, 298,  76, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8748, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4121, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0,   7],
       device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121],
       device='cuda:0'), tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385, 166], device='cuda:0'), tensor([121,  80, 100,  80,  93], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8899, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2835, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 121, 415, 294], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([255], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([175, 197, 121, 197, 305,  12, 436, 285, 301], device='cuda:0'), tensor([181], device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4230, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1728, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5958, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 166, 268], device='cuda:0'), tensor([124, 436, 116, 116], device='cuda:0'), tensor([402, 158,   6], device='cuda:0'), tensor([113], device='cuda:0'), tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([384,  81, 384, 100, 384], device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384],
       device='cuda:0'), tensor([181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5600, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2307, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7906, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 315,  93, 244, 432], device='cuda:0'), tensor([236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108],
       device='cuda:0'), tensor([ 16, 436,  16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([408, 399, 408,  50], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6691, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3007, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9698, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,
         37, 331,  37, 436,  37, 436,  37,  22,  22,  37], device='cuda:0'), tensor([439], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247], device='cuda:0'), tensor([332, 453, 105, 453, 100,  45, 217, 429,  96, 201, 100, 294,  50, 213,
        122,  30], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([436, 246, 436,  82,   0], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2523, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5778, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8302, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [005][00050/00055]	Time 0.65 (0.68)	Loss 1.83 (1.27)
		cls_loss 1.25 (0.88)	reg_loss 0.58 (0.40)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0'), tensor([100,  88, 100, 209], device='cuda:0'), tensor([ 63, 150, 142, 436, 201, 436, 403], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([192, 121, 138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121,
        436, 215, 344,  85, 293,  84,  85,  44], device='cuda:0'), tensor([388,  80, 183,  80,  80], device='cuda:0'), tensor([224, 224, 305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1223, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5084, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6306, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441, 431],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71,
        167,   5, 167, 431, 268, 415,  22,  50], device='cuda:0'), tensor([113, 441, 279, 248, 415,  23, 217, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9890, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4378, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4268, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([436,  10, 315], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([399], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424,
        150, 433, 247, 218, 214], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8420, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3566, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1986, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([424, 181], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([425, 150, 437, 150, 397, 249, 394], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4138, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2716, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 5 finished with lr=0.00005912


[Train]: Epoch 6 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([408, 402, 158,   6], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([ 82, 181,  82, 181,  82, 181,  82, 313, 181,  82, 181,  82],
       device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6433, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3890, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0323, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([191], device='cuda:0'), tensor([384, 436, 384, 438, 121, 113, 438, 385,  90, 438], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([ 11, 351, 142, 351, 142, 351, 142, 351, 196, 351, 429],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([441, 294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5359, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2491, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7850, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([315], device='cuda:0'), tensor([371, 430, 371, 424, 371, 371, 420, 420], device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([223, 228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294,
        223, 223,  82, 248], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6458, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3289, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9747, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]:
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats
feats torch.Size([6894, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([393, 1536]) 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([357, 412, 357, 357, 398, 412, 357, 357, 398, 357], device='cuda:0'), tensor([268], device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214, 316, 121], device='cuda:0'), tensor([89], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4431, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2352, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6783, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 11, 441, 451, 441, 451], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([441, 431,   9, 431, 441, 431, 385, 431, 441, 220,  49, 441, 431, 436,
        220, 441, 220, 181, 441, 431,  50, 431, 441], device='cuda:0'), tensor([362, 362, 146, 100, 355, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6429, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3167, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9597, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 439, 439, 436, 439, 436, 439], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([409, 399, 249, 153, 121, 213, 270,  93, 270, 328,  59, 436, 224],
       device='cuda:0'), tensor([  8, 325, 385, 385, 183, 361, 203, 385, 325, 397, 325, 354, 370],
       device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([ 47, 256,  19, 109,  47, 388, 260, 256,  47, 256, 388, 256, 116],
       device='cuda:0'), tensor([ 36,  47, 256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,
         93, 260, 256,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8909, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4420, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3328, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326, 395,  85], device='cuda:0'), tensor([ 90,  11, 429], device='cuda:0'), tensor([269, 346, 415, 269, 121, 279, 269, 269, 433, 323, 323],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([116, 124, 436, 116], device='cuda:0'), tensor([ 99,  88, 187, 100,  88,  88,  88, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8777, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3411, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2188, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([187,  87], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15, 121], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5043, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2158, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7201, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([31], device='cuda:0'), tensor([431,  71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22,
        167, 220,  71, 167], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([80, 80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3461, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0883, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 223, 310, 113, 399], device='cuda:0'), tensor([148], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305],
       device='cuda:0'), tensor([100, 385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223,
        121, 100, 436, 366, 215,  83, 436], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([  7,   7,   7,   7,   7, 436, 247, 247, 100, 181], device='cuda:0'), tensor([205, 436, 345,  30, 443, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7074, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3567, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0640, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 315,  96, 430, 316, 451, 405], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([294,  63, 177, 380, 209,  88, 354,  88], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([437,  95,  83, 286, 407, 437,  21, 168, 100,  21, 437,  21, 329, 292,
         21, 437,  21,  42,  21, 237, 443,  21, 437, 407, 302],
       device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9532, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5660, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5193, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00010/00055]	Time 0.74 (0.74)	Loss 1.52 (1.52)
		cls_loss 0.95 (0.95)	reg_loss 0.57 (0.57)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([294, 351,  93,  93, 351,  93, 351,  93, 295, 351, 325, 295, 351],
       device='cuda:0'), tensor([345, 399,  90, 399, 230, 277, 305, 175], device='cuda:0'), tensor([ 80, 121, 237, 388, 311, 354, 159, 354, 423], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7616, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3521, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1136, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([451, 451, 451, 436,  15, 294], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 382], device='cuda:0'), tensor([121, 430, 197, 440, 121, 316,  32,  63, 121,  32], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6806, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3659, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65], device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0,   7],
       device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([437,  90, 437,  90, 413, 437, 394, 213, 437, 394,  93],
       device='cuda:0'), tensor([ 68, 121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279],
       device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 82,   0,  10,   0, 409], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6212, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3230, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9442, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([173, 125, 341], device='cuda:0'), tensor([ 50, 201, 451, 201, 280, 302, 402,  12, 302], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([120, 319,  46,  10, 415,   9], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5228, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2032, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7260, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 63, 142, 224, 279, 136, 121, 224, 451], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7154, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3584, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([262, 100, 430, 384, 262, 339,  31, 445, 340, 277], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([2, 2, 2, 2], device='cuda:0'), tensor([215, 108, 348, 354], device='cuda:0'), tensor([247, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4056, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3539, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([242, 357, 431,  10, 220, 436,  71,  93,  10], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([ 32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([303, 183, 138,  47, 213, 281, 392,  47, 362, 385], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7092, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3414, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0506, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15], device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([408], device='cuda:0'), tensor([305, 354,  96, 187,  96], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181], device='cuda:0'), tensor([286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286,
        411, 286, 411, 286,  90, 312,  37,  82], device='cuda:0'), tensor([ 21,  32,  95, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7486, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3345, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0830, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([430,  75, 451], device='cuda:0'), tensor([408], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([174, 256, 174, 256, 369, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5738, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3130, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8868, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437,
        436], device='cuda:0'), tensor([256], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([ 47, 213,  80,  80, 121,   8, 217,  47,  55, 453,  47, 294, 294, 385,
          8, 404], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9190, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4345, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3535, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00020/00055]	Time 0.66 (0.70)	Loss 1.35 (1.44)
		cls_loss 0.92 (0.94)	reg_loss 0.43 (0.50)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([224, 385, 224, 246], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([236, 121, 312, 121,  50,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8074, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4171, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2245, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([284], device='cuda:0'), tensor([436, 137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([146], device='cuda:0'), tensor([184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([345, 309, 279, 309, 299,  32,  93, 121, 120, 302, 121],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7784, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3774, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1558, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([399, 294, 399], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([294, 436, 294, 315, 436, 315, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1689, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5066, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 83,  16,  22, 215, 441], device='cuda:0'), tensor([279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,  19, 436, 384,
         19, 182, 121, 430, 436,  80], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([47], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5480, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2997, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8477, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50,  16, 436],
       device='cuda:0'), tensor([ 52,  93,  52, 436,  52,  44, 302,  52, 131,  40], device='cuda:0'), tensor([351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([105, 294, 213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,
         22, 247, 234, 247, 294, 424, 150, 433], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8630, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4356, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2986, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407, 385],
       device='cuda:0'), tensor([108], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([319, 234, 319, 339, 402], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9068, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4065, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3133, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([124,   7, 163,  50], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121, 191], device='cuda:0'), tensor([ 46, 120, 120,  46, 197, 283,  46, 108, 209], device='cuda:0'), tensor([  5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,
          5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5,
        392,  50, 268, 268, 392, 268, 268, 268], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([406], device='cuda:0'), tensor([105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8653, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3269, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([451, 121, 315, 451, 441,  32, 315,  90, 305, 451], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([100], device='cuda:0'), tensor([223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196, 316,
        286, 310,  50], device='cuda:0'), tensor([ 63, 165], device='cuda:0'), tensor([121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,  83, 270, 415,
         49, 301, 119, 430, 336,  93, 301, 387, 290, 301, 283, 210, 225],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8168, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4345, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2513, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  4,   4, 134,   4], device='cuda:0'), tensor([305, 423], device='cuda:0'), tensor([ 96,  96, 215, 313,  96, 294,  96,  70,  96, 354, 215],
       device='cuda:0'), tensor([298,  73,  71, 136,  73, 424, 298, 425], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302, 296, 302],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93], device='cuda:0'), tensor([ 11,  43,  32, 309, 429, 451, 215, 177, 294, 215, 150],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8771, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3935, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2706, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 283, 304, 280], device='cuda:0'), tensor([424, 181, 445, 236, 181, 236, 181, 107, 181, 352, 279, 340, 121],
       device='cuda:0'), tensor([351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215, 204, 215, 204],
       device='cuda:0'), tensor([194, 388, 100,  30,  47, 370,  68,  80,  68,  47, 131, 303,  47, 447,
         47], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([405,  82, 213, 285, 405, 294,  21, 302], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 91, 411,  88,  80,  88,  91,  88, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7773, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3485, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1259, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00030/00055]	Time 0.67 (0.69)	Loss 1.13 (1.33)
		cls_loss 0.78 (0.88)	reg_loss 0.35 (0.45)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415,  93], device='cuda:0'), tensor([294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6836, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3310, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0146, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([120, 436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37,
        447,  37, 331,  37, 436], device='cuda:0'), tensor([90], device='cuda:0'), tensor([306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268],
       device='cuda:0'), tensor([116, 116, 116, 404, 138, 100,   9], device='cuda:0'), tensor([451], device='cuda:0'), tensor([221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436, 441],
       device='cuda:0'), tensor([384,  81, 384, 100, 384], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6775, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0510, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166,  71, 354, 116], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4084, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2506, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([283, 436, 383,  50, 291], device='cuda:0'), tensor([215, 215,  18, 215, 345, 215], device='cuda:0'), tensor([244], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([105, 356, 279,  96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([426, 252, 367, 426, 252, 367,  62, 183,  70, 426, 426, 426, 252, 367,
        426, 252, 367], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8469, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([356,  93], device='cuda:0'), tensor([219, 448, 387, 127], device='cuda:0'), tensor([256, 430, 438, 268, 256, 138,  70, 398, 441, 302, 249,  93, 399, 441,
        385, 302], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([204, 204, 204, 204, 350, 204, 143], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6726, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3362, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0088, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0'), tensor([256], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([ 96,  22, 197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21,
        305,  21,  30,  21], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6684, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3220, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9905, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6490, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3451, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9941, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 404, 385], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([205], device='cuda:0'), tensor([98], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([182, 392, 146, 146, 182, 392], device='cuda:0'), tensor([345, 121, 437,  93, 437, 294, 345, 294, 437, 294, 437, 286, 280, 437,
        286], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5934, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2835, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8769, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166, 276, 437,  50, 437,  82,  50, 385, 437, 385, 305,  50],
       device='cuda:0'), tensor([220, 292,  49, 415,  85, 357, 357], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([120,  98, 451, 121, 305], device='cuda:0'), tensor([436, 137, 357, 220,  15, 294, 302, 415, 440, 425, 424, 302,  96],
       device='cuda:0'), tensor([181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([229], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6140, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2752, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8892, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354,
        100, 392, 129, 100], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16, 219], device='cuda:0'), tensor([103, 436, 103, 249, 103, 436,  48, 365], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80], device='cuda:0'), tensor([392, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5683, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2888, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8571, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00040/00055]	Time 0.66 (0.68)	Loss 0.86 (1.21)
		cls_loss 0.57 (0.80)	reg_loss 0.29 (0.41)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([440, 356, 384,  43, 110,  90,  44, 269, 279, 269], device='cuda:0'), tensor([108], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([309,  50, 309, 279, 121], device='cuda:0'), tensor([ 16, 402, 225, 441, 285, 108, 441], device='cuda:0'), tensor([256], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5941, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2836, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8777, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 216, 447, 408], device='cuda:0'), tensor([255, 302, 107, 165,  52, 107,  96, 338], device='cuda:0'), tensor([127, 363, 430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([282, 294, 264, 292, 399, 142,  80], device='cuda:0'), tensor([255], device='cuda:0'), tensor([354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6589, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2604, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9193, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([137,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([394], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2795, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8841, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([ 11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([138,  78, 411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0'), tensor([436,  80, 385,  22,  22, 257, 133, 399, 302], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7687, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1847, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([436, 108, 408, 294,   8], device='cuda:0'), tensor([ 93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([ 9, 15], device='cuda:0'), tensor([158,  93], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5688, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2764, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8452, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([220, 357, 431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4726, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2287, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7013, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146, 325, 146, 345],
       device='cuda:0'), tensor([240], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([354, 398, 354, 412, 256, 354, 412, 138, 398, 256, 354, 398, 412, 138,
        398, 256, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138, 398, 256,
        412, 411, 138, 398, 411, 412, 294, 354, 429, 138,  60,  83, 436, 411,
        411, 436, 411, 436, 411, 436,  59], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7632, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 62, 301,  82, 294, 298], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([116, 147, 105, 325,  51, 109, 183,  47, 404, 285,  47, 404, 415, 194,
        194, 415, 109, 325, 183,  47, 404], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([ 14, 327], device='cuda:0'), tensor([305, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5131, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2140, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7270, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21, 269],
       device='cuda:0'), tensor([296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4115, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1984, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0'), tensor([269], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([175, 436,  10, 436,  10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4109, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5958, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [006][00050/00055]	Time 0.65 (0.67)	Loss 0.60 (1.09)
		cls_loss 0.41 (0.73)	reg_loss 0.18 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90,
        157,  37, 247], device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345, 167], device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([451], device='cuda:0'), tensor([191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9095, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4005, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3100, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([14], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([348, 268], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([ 82, 440, 441, 279], device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4060, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2323, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6382, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 87, 398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([398, 398, 376, 398,   9, 398,  82, 256, 315, 256], device='cuda:0'), tensor([ 63, 234, 215,  50,  50, 217], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([159, 224, 121,  70, 224,  70,  22,  52, 257, 234,  63],
       device='cuda:0'), tensor([294, 391, 120,  96, 451], device='cuda:0'), tensor([93], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7809, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3654, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 303, 325, 388, 116, 100,  51, 100, 303], device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([256], device='cuda:0'), tensor([300, 451, 451], device='cuda:0'), tensor([294,  75,   9, 294,  62, 294,  62, 294, 294,  96, 392, 345],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7644, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3820, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1464, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 6 finished with lr=0.00006898


[Train]: Epoch 7 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([50], device='cuda:0'), tensor([436, 392,  47, 392, 436, 392], device='cuda:0'), tensor([357, 398, 412, 357, 412, 357, 398, 357, 412], device='cuda:0'), tensor([363, 430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270],
       device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([ 98, 451, 121, 305], device='cuda:0'), tensor([ 10, 366,  10, 436, 121, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7051, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4352, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([437, 436, 279, 296, 302, 422, 121,  30,  30], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5162, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2598, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7761, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([219], device='cuda:0'), tensor([312, 121,  50,  10], device='cuda:0'), tensor([80], device='cuda:0'), tensor([385, 286, 441,   8, 441, 286, 441, 385, 441], device='cuda:0'), tensor([267,  93, 267,  93, 267], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5600, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8450, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([ 83, 181, 415,  32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([ 65,  65, 294,  65, 124, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6819, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0110, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268], device='cuda:0'), tensor([441, 225,  16,  76,  16, 402, 225, 418], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([429, 451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27],
       device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6959, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3204, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0164, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([329, 301, 283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401,
        301,  83], device='cuda:0'), tensor([ 88,  16,  88,  73,  88, 298,  16], device='cuda:0'), tensor([399, 159, 177], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([451, 406, 140, 451, 300], device='cuda:0'), tensor([295], device='cuda:0'), tensor([402,  50, 181,  30, 181, 181], device='cuda:0'), tensor([100,  88,  99,  88, 187, 100,  88,  88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7212, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4031, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1243, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([423, 423, 423, 333], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5059, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2614, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7673, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([309,  50, 309, 279, 121], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([240], device='cuda:0'), tensor([357, 431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223, 305, 436],
       device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([116,  80, 254,  93, 116, 415,  82, 415, 116, 388, 232, 116, 116, 435,
         36], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5981, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3261, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9243, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([230, 142,  11, 441, 451], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4716, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2099, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302, 296], device='cuda:0'), tensor([408], device='cuda:0'), tensor([394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424,
        150, 433, 247, 218, 214], device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([ 44, 223, 223, 223, 223, 223], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0494, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5155, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5649, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 319, 121], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([220, 242, 137, 220, 363], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([ 63, 398, 376, 398, 354, 398, 354,  71, 376, 398, 354, 398, 256, 256],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6886, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3146, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0032, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00010/00055]	Time 0.74 (0.74)	Loss 1.00 (1.00)
		cls_loss 0.69 (0.69)	reg_loss 0.31 (0.31)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 253, 279, 253, 253, 142, 230, 121, 171,  61], device='cuda:0'), tensor([256, 378, 137], device='cuda:0'), tensor([257, 441,  44,  22, 384, 436, 384, 438, 121], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5979, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3077, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9056, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([433, 323, 323, 121, 269], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([215, 436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([132], device='cuda:0'), tensor([ 29, 453, 249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6352, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3250, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408], device='cuda:0'), tensor([436], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([351, 142, 351, 196, 351, 429, 351, 429, 351, 231, 196, 280, 280, 280,
        305, 345, 201], device='cuda:0'), tensor([369, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([ 15,  15,  15, 305, 181], device='cuda:0'), tensor([90], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6765, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3593, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0358, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([436, 400, 430, 351, 430, 430, 351, 430, 351,  93, 351, 325],
       device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([430,  88,  72,  88, 436,  88,  72,  88,  91, 411, 209,  88, 424,  88,
        247,  80], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80,  50, 268,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8524, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5213, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3737, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([417], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([177, 309,  13, 437, 413, 197, 380, 413, 424,  90, 413,  90],
       device='cuda:0'), tensor([268,  37], device='cuda:0'), tensor([ 71,  22, 201, 131], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6052, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3309, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9361, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([268], device='cuda:0'), tensor([116, 116, 404, 138, 100,   9, 404], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338,
        294], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([116, 399,  80, 121,   4], device='cuda:0'), tensor([248, 302, 248,  71, 224], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5370, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3147, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8517, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 181], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201], device='cuda:0'), tensor([441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,
         37,  22,  22,  37,  49, 122,  37,  37, 217, 329], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([294, 158], device='cuda:0'), tensor([ 47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195,
        325], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6977, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3344, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0320, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([447,  47, 100, 453, 388, 257, 370,  80], device='cuda:0'), tensor([166], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([47], device='cuda:0'), tensor([402, 452, 437, 300, 437], device='cuda:0'), tensor([260,  44, 447, 294, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4062, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2082, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6144, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 116, 412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([415, 383, 399, 399, 383, 436,   8,   8, 399, 385, 436, 436, 408],
       device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([90], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([436,  14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5155, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2806, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7961, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([407, 121, 407, 437, 286], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([89], device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([215, 345, 215, 345, 215, 150, 215, 296, 215, 105, 215, 340, 215, 217,
        215], device='cuda:0'), tensor([301, 439, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8017, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4364, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2380, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00020/00055]	Time 0.66 (0.70)	Loss 1.24 (1.12)
		cls_loss 0.80 (0.75)	reg_loss 0.44 (0.38)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([249, 155, 131, 191], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394,  70],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([187, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6346, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9763, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([295, 295, 295, 295, 195], device='cuda:0'), tensor([441], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7520, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4424, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1944, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([436, 294, 315, 436, 315, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5966, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9579, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([108], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([256, 388, 256, 116, 109, 385, 320, 320, 124, 100, 383, 109, 388, 330,
          8, 383, 385, 281, 183], device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214, 316], device='cuda:0'), tensor([ 93, 100,  93, 100, 305, 305], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5842, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2623, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([354, 159, 354, 423,  83, 121, 436, 436, 108,  44], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([201,  90, 371, 430, 371, 424, 371], device='cuda:0'), tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4365, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1877, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411, 286], device='cuda:0'), tensor([256], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([268], device='cuda:0'), tensor([120, 424, 166, 385], device='cuda:0'), tensor([424, 181, 445, 236, 181, 236, 181, 107, 181, 352, 279, 340],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5424, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2482, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7907, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([301, 215], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184,   8, 408, 436],
       device='cuda:0'), tensor([37], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([ 93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,  93,
        437,  93, 437,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6929, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4034, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 234, 319, 339, 402], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 11,  44, 221, 226, 201, 230, 201, 351,  90, 351,  90,  43, 436],
       device='cuda:0'), tensor([121, 223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331,
        450, 223, 219, 387, 184,  76, 247, 279], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([191], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([213, 281, 392,  47, 362, 385, 194, 194,  51,  51, 194, 194, 194, 194,
        388, 345, 338, 338, 397, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9060, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4395, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3455, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([295, 436, 295, 295], device='cuda:0'), tensor([93], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([256], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3439, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1694, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5132, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 81, 182, 325,   1, 325,  93, 183,  47, 285, 356, 330, 415, 415,  36],
       device='cuda:0'), tensor([354, 268, 256, 138,  70, 256, 354, 268, 256, 268, 256, 268, 354, 138,
         70, 398, 438, 268, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256,
        268, 256, 268, 438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256,
        354, 438, 268, 268, 256, 430, 438, 268, 256, 138,  70, 398, 441],
       device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275], device='cuda:0'), tensor([232, 388, 232, 388, 232, 116], device='cuda:0'), tensor([209, 338, 401], device='cuda:0'), tensor([ 72, 415, 108], device='cuda:0'), tensor([ 16,  22, 215, 441, 415, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2410, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6451, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.8861, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00030/00055]	Time 0.66 (0.69)	Loss 1.89 (1.38)
		cls_loss 1.24 (0.91)	reg_loss 0.65 (0.47)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([134,   4, 358, 294], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([58], device='cuda:0'), tensor([ 52,  70, 181,  52, 436,  52], device='cuda:0'), tensor([ 63, 436,  80, 354,  93], device='cuda:0'), tensor([114,  80, 258, 376], device='cuda:0'), tensor([298, 249,  93,  96, 441, 121, 441,  96, 121, 441,  96, 441,  96,  16],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6923, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3189, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0112, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([385,   8, 404,  47, 435, 124, 447, 335,  82, 320], device='cuda:0'), tensor([ 47, 354, 443,  88, 121, 354, 183, 124, 100, 404, 155, 100],
       device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6404, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3041, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9445, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 436], device='cuda:0'), tensor([284], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([4], device='cuda:0'), tensor([269], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1523, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4291, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([403, 196, 294, 294,   9, 313,  52, 294, 181], device='cuda:0'), tensor([408], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([98], device='cuda:0'), tensor([431, 436, 385, 220,  50, 431, 385, 329, 294, 431,  82, 431, 441, 431,
          9, 431, 441], device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7931, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3941, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1872, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392,
        129, 100, 392, 100, 392], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([215], device='cuda:0'), tensor([150, 437, 425, 150, 437, 150, 397, 249, 394], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6202, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3155, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9357, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 93,  10, 155,  10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87,
        436, 405, 100], device='cuda:0'), tensor([399, 113,  37,  37, 150,  37, 280,  37, 433,  37,  71, 313],
       device='cuda:0'), tensor([220, 292,  49], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([366, 332, 191, 315, 305, 315,  73, 401, 441, 451], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7665, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4554, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2220, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([226, 383, 430], device='cuda:0'), tensor([182, 392, 146,   5, 378], device='cuda:0'), tensor([ 44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,
         37, 424,  37, 411, 411, 411], device='cuda:0'), tensor([436,  82, 103, 385, 385, 103,   8, 365, 103, 302, 103, 436, 103],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5,
        167, 431, 268, 415,  22,  50, 268], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9285, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4692, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([163], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5676, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2450, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8125, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([88], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([306, 306, 268, 306, 268, 268, 306, 268, 306, 306], device='cuda:0'), tensor([173, 125, 341, 411, 319], device='cuda:0'), tensor([ 82, 181,  82, 181, 436,  82, 313,  82, 181,  82], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([15, 72], device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2793, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8454, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([65], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([305, 215, 121, 215, 100,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5173, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3161, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8334, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00040/00055]	Time 0.67 (0.68)	Loss 0.83 (1.24)
		cls_loss 0.52 (0.81)	reg_loss 0.32 (0.43)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([395,   8, 395, 205, 326, 395,  85, 417, 159,  31, 121, 114, 326, 224,
        224], device='cuda:0'), tensor([100], device='cuda:0'), tensor([399, 216], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257],
       device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5], device='cuda:0'), tensor([238, 378, 231, 100, 436], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8753, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5156, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3909, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([137,  52, 137, 385,  50, 137], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([142, 224, 279, 136, 121, 224, 451, 309, 249,  44, 436, 120],
       device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([ 44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294, 249],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7158, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0670, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295, 294, 345], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221], device='cuda:0'), tensor([146], device='cuda:0'), tensor([441, 113, 441], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([294,  63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168,
        405], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 31,  63,  82, 255,  82, 165,  82, 165, 385, 107, 255],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6679, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3527, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0206, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 382,  96, 382],
       device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,  11, 420,
        451], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62, 294],
       device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6850, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3559, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0409, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437, 310,
        399, 415, 399, 302,  87], device='cuda:0'), tensor([431, 436, 431, 165,  44, 436,  93, 137,  10, 436,  44],
       device='cuda:0'), tensor([392, 392, 392, 306], device='cuda:0'), tensor([301,  76,  98,  91, 302, 451, 286, 424,  91, 451,  91],
       device='cuda:0'), tensor([197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,
         30,  21, 286,  21, 286, 105], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([431], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8231, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4397, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2628, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([215], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436, 441, 436, 441, 143, 279, 441,  32, 124,  71, 100],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([406], device='cuda:0'), tensor([244], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3517, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1346, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4864, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 105, 226,  71, 338,  16, 197,  11,  71, 305, 286,  31],
       device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([398, 256, 412, 354, 412, 138, 398, 256, 412, 411, 138, 398, 411, 412,
        294, 354, 429, 138,  60,  83, 436, 411, 411, 436, 411, 436, 411, 436,
         59, 411,  59, 316, 430, 313, 411, 316, 411], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([181], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([ 25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421, 421,  82, 421,
        228, 415], device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430, 384], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0034, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4835, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 362], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 88, 354,  88,  80,  88, 268,  80], device='cuda:0'), tensor([247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([451,  53, 424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4769, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2289, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7058, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([224, 121,  70, 224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([225], device='cuda:0'), tensor([398,  51, 398, 435, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5262, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2441, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7703, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 405, 121, 415], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426,
        252, 367, 426, 252, 367, 426, 252, 367], device='cuda:0'), tensor([80], device='cuda:0'), tensor([305], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181, 296],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7803, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3804, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1607, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [007][00050/00055]	Time 0.66 (0.68)	Loss 1.16 (1.22)
		cls_loss 0.78 (0.81)	reg_loss 0.38 (0.42)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([127,  44,  63, 234], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([326, 436, 208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,
         19, 436, 384,  19, 182], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([451,  49, 424, 218], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7371, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3425, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0796, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 187,  96, 108,  96, 294], device='cuda:0'), tensor([408, 408, 436, 436], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([197, 121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345],
       device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223,
        196, 221, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7948, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4374, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2323, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100,
        279], device='cuda:0'), tensor([295], device='cuda:0'), tensor([201], device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299], device='cuda:0'), tensor([256], device='cuda:0'), tensor([4], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3858, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1898, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5756, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93, 270, 279],
       device='cuda:0'), tensor([2, 2, 2], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([302, 405, 441, 405, 441, 405, 444], device='cuda:0'), tensor([121,  32,  49, 411,  50, 415,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7206, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0675, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 7 finished with lr=0.00007883


[Train]: Epoch 8 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([260,  44, 447, 294], device='cuda:0'), tensor([15], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([9], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 93, 283,  93, 283], device='cuda:0'), tensor([433], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2206, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1131, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3338, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([402, 447, 402,  50, 181,  30, 181], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0')] torch.Size([1780, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([905, 1536])
yes2

yes3 {'cls_loss': tensor(0.6031, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4158, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0189, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([205], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([100], device='cuda:0'), tensor([323, 121, 269, 323, 231], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4257, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2379, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6637, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 432, 268], device='cuda:0'), tensor([121,  50,  10], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4327, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2264, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6591, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([435, 124, 447, 335,  82, 320, 320, 404], device='cuda:0'), tensor([301, 439, 436, 439], device='cuda:0'), tensor([58], device='cuda:0'), tensor([392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([416, 248, 258, 132], device='cuda:0'), tensor([285, 311, 257, 105, 305, 354, 385, 354, 100], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([451, 142, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5745, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2661, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8406, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([441, 402], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([430,  81, 127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([197,  44, 385, 441, 385, 441,  93,  93, 385, 121, 430, 430, 437, 386],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5756, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3487, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9243, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([441,  32, 315,  90, 305, 451,  73, 121,  44,  73, 315],
       device='cuda:0'), tensor([385,  22,  22, 257, 133, 399, 302,   9], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([295, 351, 295, 351,  63], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6845, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3787, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0632, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31,  50, 262,  31,  50, 365, 215, 305, 298, 292,  73, 399,  49],
       device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349, 408,
        415], device='cuda:0'), tensor([181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([383,  50, 291], device='cuda:0'), tensor([146, 401, 146, 268, 408, 268,  44, 146], device='cuda:0'), tensor([441, 385, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398,
        396, 268, 268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316],
       device='cuda:0'), tensor([402, 108, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9781, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5562, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5343, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392,
        129, 100, 392, 100, 392], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([436], device='cuda:0'), tensor([430, 121, 249, 371, 201], device='cuda:0'), tensor([354], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([47], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4984, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3541, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8526, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]:
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1327, 1536]) 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([90], device='cuda:0'), tensor([437, 332, 437,  95,  83, 286, 407, 437,  21, 168, 100,  21, 437,  21,
        329, 292,  21, 437,  21,  42,  21, 237, 443,  21, 437],
       device='cuda:0'), tensor([105, 283, 304, 280], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7295, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4169, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([441, 279, 441], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([284], device='cuda:0'), tensor([127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423],
       device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4778, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7430, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00010/00055]	Time 0.76 (0.76)	Loss 0.74 (0.74)
		cls_loss 0.48 (0.48)	reg_loss 0.27 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([90], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([385, 155, 131, 119], device='cuda:0'), tensor([441, 431, 385, 431, 441, 220,  49, 441, 431, 436, 220, 441, 220, 181,
        441, 431,  50, 431, 441, 220, 441, 431, 219, 399, 220, 217, 431, 397],
       device='cuda:0'), tensor([223, 223, 223, 223, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7281, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3997, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1278, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 37, 217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407],
       device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([  4, 385,  80, 116], device='cuda:0'), tensor([319, 406, 451, 406, 140], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209,
        302], device='cuda:0'), tensor([ 31, 121, 114, 326, 224, 224, 305,  32, 305, 434, 326, 224],
       device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8258, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2482, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30],
       device='cuda:0'), tensor([295, 436, 295], device='cuda:0'), tensor([225], device='cuda:0'), tensor([351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215, 204, 215, 204],
       device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([116, 116, 116, 116, 116, 404, 138], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5528, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8552, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([437, 121, 437,  93, 437,  93, 437,  93, 437, 121, 280,  93,  12, 121,
        432, 408, 286, 283, 280, 279, 121, 345], device='cuda:0'), tensor([100, 262, 121, 262, 100, 262, 100, 430], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([174, 256], device='cuda:0'), tensor([234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311,
        417, 388, 417, 411, 417, 417, 417, 314, 417, 417], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0459, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5959, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6418, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([197, 351, 286, 197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,
         90,  37, 445, 286,  90, 316], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([196, 294, 294,   9, 313,  52, 294, 181, 294], device='cuda:0'), tensor([301, 121,  44, 105, 345,  44,  63, 446,  44, 152, 437,  44, 436,  44,
         37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8394, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4330, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2724, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([80, 80], device='cuda:0'), tensor([120,  98, 451, 121, 305], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([47,  9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3339, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5055, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 43, 402, 305, 128, 236, 128, 128, 241, 305, 394,  50,  50,  50, 402,
        294, 138,  50], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343], device='cuda:0'), tensor([398,  51, 398, 435, 398], device='cuda:0'), tensor([267], device='cuda:0'), tensor([357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([ 37, 257, 215, 313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453,
        197, 436, 340], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7655, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3531, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1187, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([31], device='cuda:0'), tensor([ 75, 451], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3273, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2305, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5579, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 348], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([354, 256, 354, 398, 354, 412, 256, 354, 412, 138, 398, 256, 354, 398,
        412, 138, 398, 256, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138,
        398, 256, 412, 411, 138, 398, 411, 412, 294, 354, 429, 138,  60,  83,
        436, 411, 411, 436, 411, 436, 411], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([  5, 146, 182, 392, 146, 146, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8902, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5501, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223,
        223,  82, 248, 138, 164], device='cuda:0'), tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([283, 329, 301, 283, 301, 283,  72, 121, 385], device='cuda:0'), tensor([256], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([366, 436, 366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6598, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3657, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0255, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00020/00055]	Time 0.66 (0.71)	Loss 1.03 (0.88)
		cls_loss 0.66 (0.57)	reg_loss 0.37 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,
         37, 424,  37, 411, 411, 411], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([121], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([ 11,  11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([415, 453, 415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279,
        273, 453, 196], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6088, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3799, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9887, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430],
       device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 80, 142, 182, 359,  44, 359, 201], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6879, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([408], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 81, 306, 306, 306, 268, 306, 268, 268, 306, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3063, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1678, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4741, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([9], device='cuda:0'), tensor([175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,  10, 315],
       device='cuda:0'), tensor([408, 380, 436,  71,   8,  71,  85, 199, 254, 380, 254, 380, 254, 380,
        254, 380, 408, 415], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([ 80,  80, 443,  93, 166,  19, 443, 116,  80], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([354, 430,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6525, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3166, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9692, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436,
        215, 215], device='cuda:0'), tensor([302, 436, 302,  93, 302,  96, 294, 415, 385, 137], device='cuda:0'), tensor([315], device='cuda:0'), tensor([215], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([230,  46,  93, 215, 249, 134, 215, 134, 108], device='cuda:0'), tensor([363, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4971, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2757, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7728, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([294,  63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168,
        405], device='cuda:0'), tensor([305, 256, 256, 256], device='cuda:0'), tensor([121, 291, 121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366, 215,
         83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436, 282,
        226], device='cuda:0'), tensor([412, 357, 398, 357, 412, 357, 357, 398, 412], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([ 10, 436,  44, 108, 431, 436, 220], device='cuda:0'), tensor([224, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4266, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1502, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315, 108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([256], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6254, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3460, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9714, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([373, 234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385,
        393, 382, 234, 303, 382, 181,   9, 181, 315, 181], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([ 88, 100,  88,  99,  88, 187, 100,  88,  88], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21,
        279, 159], device='cuda:0'), tensor([447, 436, 246, 436,  82,   0], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9612, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4739, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4351, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([ 93, 366, 209], device='cuda:0'), tensor([319, 316, 441, 441, 225], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([239, 120, 295, 295, 295, 295], device='cuda:0'), tensor([103,  70, 431, 103, 119, 161, 399, 161, 279, 431, 363],
       device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4595, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2265, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6860, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([249], device='cuda:0'), tensor([89], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([ 49,  24,  49, 181,  49,  22, 270, 399, 279], device='cuda:0'), tensor([392, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268,
        447, 268, 313,   5, 392,  50, 268, 268], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5981, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3804, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9786, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00030/00055]	Time 0.66 (0.69)	Loss 0.98 (0.92)
		cls_loss 0.60 (0.58)	reg_loss 0.38 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  32, 121,  37,  43, 121, 124,  44, 197, 121], device='cuda:0'), tensor([187], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([ 18,  44,  12,  14,  71, 316], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([ 71,  22, 201, 131], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5666, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2993, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8659, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 80, 116,  19, 182, 100, 294, 279, 325, 100], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3901, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0223, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([4], device='cuda:0'), tensor([4], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([249, 443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([294, 196], device='cuda:0'), tensor([208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,  19, 436,
        384,  19, 182, 121, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4266, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6466, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([15,  9, 15], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([451], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([148], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1204, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4008, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([388, 232, 388, 232, 116, 116, 138, 294], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332, 269,
        407, 121], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([408], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7575, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3362, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0937, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 319, 319, 196], device='cuda:0'), tensor([ 88,  80,  88, 268,  80, 268,  80, 268], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([187], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([207, 108,  70, 447,  44, 383, 294, 224, 201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5639, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8662, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([430], device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294,  96],
       device='cuda:0'), tensor([ 36, 116, 305, 116, 385], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4349, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2719, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7068, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([209, 338, 401], device='cuda:0'), tensor([319, 319, 120, 319,  46], device='cuda:0'), tensor([399], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4975, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2474, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7449, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 249, 430, 313, 165, 205, 156], device='cuda:0'), tensor([436, 345,  30, 443, 436, 294, 100], device='cuda:0'), tensor([362], device='cuda:0'), tensor([93], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([181,  82, 181,  82, 181,  82, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4554, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2683, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7237, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436,
        305, 407], device='cuda:0'), tensor([ 32,  95, 415], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([110, 197, 316], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7509, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3713, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1221, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00040/00055]	Time 0.66 (0.69)	Loss 1.12 (0.97)
		cls_loss 0.75 (0.62)	reg_loss 0.37 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313,  82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,
         82, 436, 124, 223], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 11,  43,  32, 309, 429, 451, 215, 177, 294, 215, 150],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([234, 415], device='cuda:0'), tensor([241,  71, 431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167,
        431, 268, 415,  22,  50, 268,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7346, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4208, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1554, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([ 50,  50, 217, 436, 294, 215, 415,  83,  23, 415,  83, 432],
       device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([408], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([117, 271, 121, 316], device='cuda:0'), tensor([405, 302, 405], device='cuda:0'), tensor([116,  88, 189, 388, 404, 116, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6504, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3251, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9755, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415, 441,  49], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37], device='cuda:0'), tensor([ 63, 436,  80, 354], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([392,  51, 392, 100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404,
        285], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0424, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5179, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5603, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([127, 142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0'), tensor([451], device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7272, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3642, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0914, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 98, 397, 113, 415, 183, 354, 254, 116, 415, 121,  88,   8, 354,   8],
       device='cuda:0'), tensor([213, 437, 394,  93, 394,  30, 437, 394, 394,  44], device='cuda:0'), tensor([ 80, 268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([240], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7330, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3782, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1112, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158, 408], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([451,  93, 402, 385, 402,  87], device='cuda:0'), tensor([437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150,
        397, 249, 394], device='cuda:0'), tensor([402, 452, 437, 300, 437], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8319, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3919, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2238, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([142,  80, 298, 215], device='cuda:0'), tensor([  8, 383, 385, 281, 183, 325, 415, 124, 124,  51,   8, 385,  47, 109,
        195,  47, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5829, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3365, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9194, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11,  44,  71, 351,  82, 351, 424, 166,  82, 196], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([215], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([256, 354,  47,  36, 354, 183,  36, 256, 256, 325, 354, 404,  47, 116,
         47], device='cuda:0'), tensor([436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436, 164,
        282, 195], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7199, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3724, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0923, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
       device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([93], device='cuda:0'), tensor([379, 430, 309,  50], device='cuda:0'), tensor([384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121],
       device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([ 15,  15,  15, 305, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5058, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3006, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8064, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([192, 121, 138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121,
        436, 215, 344,  85, 293,  84,  85,  44], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7435, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4020, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1455, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [008][00050/00055]	Time 0.66 (0.68)	Loss 1.15 (1.00)
		cls_loss 0.74 (0.65)	reg_loss 0.40 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([334, 120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([429, 354, 121,  80], device='cuda:0'), tensor([ 44, 304, 217, 201,  88, 430], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437],
       device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([253,  87, 140, 316, 424], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2430, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8073, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220, 292,  49], device='cuda:0'), tensor([394, 411], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([328, 417], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3130, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1753, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4883, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6460, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3409, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 436, 436, 408, 436], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([366, 445, 441, 385, 286, 441,   8, 441], device='cuda:0'), tensor([255], device='cuda:0'), tensor([295, 295, 294], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4192, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2017, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6208, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 8 finished with lr=0.00008869


[Train]: Epoch 9 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([156, 229,  72, 229, 134, 301], device='cuda:0'), tensor([443,  93,  19, 389,  47, 200,  49,  49, 138, 194, 388, 100],
       device='cuda:0'), tensor([426, 252, 367, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426, 252,
        367, 426, 252, 367,  62, 183,  70, 426], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,
          5, 268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,
          5, 392, 268, 268, 268, 268], device='cuda:0'), tensor([113, 441, 279, 248, 415,  23, 217, 441], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0488, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5664, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6152, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([ 71,  81, 306, 306, 306, 268, 306, 268, 268, 306], device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268,  85], device='cuda:0'), tensor([441, 385, 302, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398,
        396, 268, 268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256],
       device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([392, 392, 306, 116, 116, 306, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6138, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4613, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0750, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([406], device='cuda:0'), tensor([224,  37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,  44, 200,
        258, 226, 411, 226, 453], device='cuda:0'), tensor([240], device='cuda:0'), tensor([247, 234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417,
        311, 417, 388, 417, 411, 417, 417, 417, 314, 417, 417],
       device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7597, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3636, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1232, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62, 294, 294],
       device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([399, 216], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([ 15,  15,  15, 305, 181], device='cuda:0'), tensor([451, 121, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3462, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2094, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5557, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 439, 436, 439], device='cuda:0'), tensor([305, 215, 121], device='cuda:0'), tensor([90], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([201], device='cuda:0'), tensor([50], device='cuda:0'), tensor([382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1905, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0876, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2780, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 319, 196], device='cuda:0'), tensor([430, 371, 424, 371, 371, 420, 420], device='cuda:0'), tensor([ 93, 366, 209, 225], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([ 19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289],
       device='cuda:0'), tensor([148], device='cuda:0'), tensor([329,   8, 191,  32, 350, 257, 350, 257,  20,  52,  32, 124, 296, 100,
        301, 436, 441, 436, 441, 143, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6629, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0362, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([142,  80, 298, 215], device='cuda:0'), tensor([443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223,
        196, 221, 196], device='cuda:0'), tensor([436, 399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123],
       device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([65], device='cuda:0'), tensor([ 73, 121,  44,  73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437,
        315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7580, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3995, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1576, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([294, 436, 294, 315, 436, 315, 108], device='cuda:0'), tensor([241, 184, 296, 411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415,
        155], device='cuda:0'), tensor([ 76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0'), tensor([315], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5841, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3031, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8872, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 436, 295], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 61, 436,  14], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([107, 107, 107, 453, 107], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4492, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2979, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7471, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 47, 362, 325, 294, 294, 116, 404, 146, 325, 146, 345, 183,  47],
       device='cuda:0'), tensor([100,  96,  71,  30,  71], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359, 415, 138,  50,
        294, 302], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([120, 302, 424,  46,  72], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8124, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3988, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2112, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([47], device='cuda:0'), tensor([256], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([405, 441, 405, 441, 405, 444, 405], device='cuda:0'), tensor([100,  88,  88, 100,  88, 100,  88,  88, 100,  88, 100,  88, 100,  88,
        100,  88, 100,  88, 100,  99], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9078, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5207, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4285, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00010/00055]	Time 0.76 (0.76)	Loss 1.43 (1.43)
		cls_loss 0.91 (0.91)	reg_loss 0.52 (0.52)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([405, 121, 415, 294], device='cuda:0'), tensor([ 47, 285, 333, 362,  22, 263,  80, 116, 100, 121, 388, 359, 338,  30,
        338], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5486, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8450, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90,  43, 436, 441, 301], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([256], device='cuda:0'), tensor([113], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([192, 121, 138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121,
        436, 215, 344,  85, 293,  84,  85,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4299, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2529, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6828, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 436, 383,  50, 291], device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([268,  37, 268], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4521, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3203, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7724, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 224, 246, 224, 246, 224, 316], device='cuda:0'), tensor([408], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([284], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([280, 319, 319, 100], device='cuda:0'), tensor([451, 176, 176, 176, 176], device='cuda:0'), tensor([100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3860, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1438, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5299, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([408], device='cuda:0'), tensor([215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37,
        424,  37, 411, 411, 411], device='cuda:0'), tensor([ 14, 121,  14], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3900, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2857, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6757, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285,
        405, 294], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437,
        436], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([247, 436, 294, 425,  93, 283, 283, 283, 225], device='cuda:0'), tensor([286, 411, 286,  90, 312,  37,  82,  90,  37, 445, 286,  90, 316,  22,
        294,  90, 411,  90, 316, 286, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6078, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6399, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([384, 438, 121, 113, 438, 385,  90, 438, 396, 411, 342, 415, 309, 415,
        309], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([406, 451, 406, 140, 451], device='cuda:0'), tensor([400, 415, 400, 415, 121], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 91,  37, 201, 345, 359, 359, 436, 359, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5922, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3039, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8960, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([80, 88], device='cuda:0'), tensor([294], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([ 75, 451], device='cuda:0'), tensor([ 90, 279,  90, 279,  90, 258,  90,  11, 279,  11,  11, 279,  11, 121,
        201,  93, 279, 283, 279, 121, 283], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4169, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6836, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121,
        296], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0'), tensor([436,  10, 315], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([ 11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5902, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3122, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9024, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224,  44, 166, 268], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([398, 436, 398,  51, 398,  51, 398], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167, 220,
         71, 167,   5, 167, 431], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5623, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8837, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00020/00055]	Time 0.67 (0.71)	Loss 0.88 (1.16)
		cls_loss 0.56 (0.74)	reg_loss 0.32 (0.42)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424,  88, 247,  80,  91, 411,  88,  80,  88,  91], device='cuda:0'), tensor([423, 423, 136, 423], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([ 95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217,
        351, 217, 305,  32, 305], device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([ 90, 413,  90, 413,  90, 437,  90, 437,  90, 413, 437, 394, 213, 437],
       device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7329, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4042, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1370, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351, 295, 351,  63,  80], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([268], device='cuda:0'), tensor([201, 316, 316, 316, 305, 366, 445, 441], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([187], device='cuda:0'), tensor([255], device='cuda:0'), tensor([316,  93, 191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,
         32, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5169, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3004, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8172, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([ 10, 155,  10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436,
        405, 100], device='cuda:0'), tensor([203, 332, 269, 407, 121, 407, 437, 286], device='cuda:0'), tensor([ 47, 260,  44], device='cuda:0'), tensor([417, 159,  31, 121, 114, 326, 224, 224, 305,  32], device='cuda:0'), tensor([108], device='cuda:0'), tensor([417], device='cuda:0'), tensor([155, 247, 436, 230, 142,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5456, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2818, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8274, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 11, 441, 249, 441], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0'), tensor([316, 433, 316, 100], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394,  70],
       device='cuda:0'), tensor([146,  83, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4012, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6685, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([294,  71,  16, 286, 105,  16,   8,  16, 219, 425, 352],
       device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([415, 279, 453, 385,  32, 399, 121, 356, 279, 273, 453, 196, 397, 279,
        100, 296], device='cuda:0'), tensor([285, 305, 441, 225,  16,  76,  16, 402, 418], device='cuda:0'), tensor([255], device='cuda:0'), tensor([385, 354,  98,  98, 397, 113, 415, 183, 354, 254], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7865, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4449, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2314, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  13, 221,  44], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([31], device='cuda:0'), tensor([369, 369, 369, 369, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3437, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1989, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5426, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 244, 432, 244], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([213, 436, 224, 436, 213,  19, 436, 384,  19, 182, 121, 430, 436,  80,
         47, 436, 325], device='cuda:0'), tensor([408], device='cuda:0'), tensor([417], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([436, 137, 357, 220,  15, 294, 302, 415, 440, 425, 424],
       device='cuda:0'), tensor([ 11,  96, 105, 226,  71, 338,  16, 197,  11,  71, 305],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5742, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3569, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9310, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231, 150],
       device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([163], device='cuda:0'), tensor([ 32,  95, 415], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([98], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4571, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2954, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7525, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([220, 181,  80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181,
        220, 181, 217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357,
        431, 220, 409, 220, 357, 431, 294, 357], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([105, 407, 385, 436, 407, 436, 407, 407, 314, 407,  85, 314,  95,  50],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([258, 226, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7786, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4173, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1959, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116,
        195, 325], device='cuda:0'), tensor([142, 182, 359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294],
       device='cuda:0'), tensor([437, 286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87,
        279, 437, 150, 294, 437, 108, 219], device='cuda:0'), tensor([204, 204, 350, 204, 143], device='cuda:0'), tensor([269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8468, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4985, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3453, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00030/00055]	Time 0.66 (0.70)	Loss 1.35 (1.22)
		cls_loss 0.85 (0.77)	reg_loss 0.50 (0.45)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 146], device='cuda:0'), tensor([89], device='cuda:0'), tensor([80], device='cuda:0'), tensor([436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181, 205],
       device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294,
        399], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3998, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2102, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6100, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 155,  52,   9,  52, 294,  52,  93,  52, 436,  52,  44, 302],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 93, 215, 141, 294, 399, 135, 307, 400,  50, 294, 215,  27],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5435, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2687, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8122, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 121,  80, 142, 121, 436, 121, 398], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 37,  37, 217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210],
       device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([  9, 305], device='cuda:0'), tensor([402, 108, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2999, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8918, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15, 72], device='cuda:0'), tensor([ 96, 201, 100, 294,  50, 213, 122,  30,  93, 100], device='cuda:0'), tensor([4], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([362, 362, 146, 100, 355, 116], device='cuda:0'), tensor([146], device='cuda:0'), tensor([392, 146, 146, 182, 392, 146], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4750, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2050, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6801, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([175, 197, 121, 197, 305,  12, 436, 285], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127, 325],
       device='cuda:0'), tensor([294, 264, 292, 399, 142,  80], device='cuda:0'), tensor([430, 325, 183, 388,  81, 182, 325,   1, 325,  93, 183,  47, 285, 356,
        330], device='cuda:0'), tensor([385], device='cuda:0'), tensor([ 11,  44, 351, 121, 351, 127, 351, 351, 351, 351], device='cuda:0'), tensor([268, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268,
        146, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8337, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4248, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2585, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([411, 108, 451, 399, 411, 439, 296, 411, 280], device='cuda:0'), tensor([191], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7589, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4199, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1787, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 46,  10, 415,   9,   9], device='cuda:0'), tensor([ 80,  93, 121, 124, 332, 248, 298, 249,  93], device='cuda:0'), tensor([161, 121, 436, 103, 385, 103], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([436, 408, 408, 436], device='cuda:0'), tensor([ 58, 333,  58], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7011, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3380, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0391, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([432, 268, 268, 268], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([ 82, 181,  82, 181,  82, 313, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5027, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3251, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8278, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([50], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([298, 436, 294, 294, 430, 127,  44,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5206, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8613, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338,
        294], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 80,  80, 121,   8, 217,  47,  55, 453,  47, 294, 294, 385,   8, 404,
         47, 435], device='cuda:0'), tensor([294], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([187], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147, 224], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2719, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7362, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00040/00055]	Time 0.61 (0.68)	Loss 0.74 (1.10)
		cls_loss 0.46 (0.70)	reg_loss 0.27 (0.40)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270, 386,   9,
        386, 184, 195, 415], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([ 91, 294, 137, 294, 229, 434, 401,  93, 431, 436, 385, 220],
       device='cuda:0'), tensor([431, 100, 294,   4], device='cuda:0'), tensor([195,  47, 256,  80, 109, 325,  47, 256, 195,  47], device='cuda:0'), tensor([9], device='cuda:0'), tensor([181, 181, 181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7155, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3796, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0952, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 155, 451, 451, 451], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5898, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3635, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9533, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([181, 451], device='cuda:0'), tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93], device='cuda:0'), tensor([305, 175, 223], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([196, 215, 215, 215, 345, 215], device='cuda:0'), tensor([120, 424, 166, 385, 166], device='cuda:0'), tensor([105, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5354, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2347, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7701, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([319,  11, 230,  46,  93, 215, 249, 134, 215], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,
         90, 223, 402, 223,  50, 223], device='cuda:0'), tensor([223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,
         50, 430, 302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8528, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4873, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3401, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 121, 316,  15, 121], device='cuda:0'), tensor([90], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 16, 302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([ 93, 267], device='cuda:0'), tensor([256], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3236, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5705, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([286, 121, 187], device='cuda:0'), tensor([155,  22, 159, 159, 120, 415, 430, 257,  31,  49], device='cuda:0'), tensor([195, 442, 121, 442, 451, 279, 442,  93, 345, 437, 115, 437],
       device='cuda:0'), tensor([253,  87, 140, 316, 424], device='cuda:0'), tensor([93], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([436, 408, 279, 408, 436, 408, 436, 408, 436], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5523, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3218, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8742, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([338,  71, 116, 398, 354], device='cuda:0'), tensor([441, 294, 264], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([436,  82,   0, 436], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([451], device='cuda:0'), tensor([397, 249, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5629, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8536, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 436], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([158, 294, 158], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([ 44, 108, 431, 436, 220, 329, 220, 165, 220, 220], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([258, 132], device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4201, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2102, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6303, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47,  9], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50, 159],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([232,  36, 120,  36,  36,  73, 116,  82, 294, 305,  36],
       device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([ 71, 437, 436, 283,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5668, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3025, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8692, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([408], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([10], device='cuda:0'), tensor([302, 408], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3121, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1610, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4731, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [009][00050/00055]	Time 0.43 (0.63)	Loss 0.47 (0.97)
		cls_loss 0.31 (0.62)	reg_loss 0.16 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([430,  11, 452, 284,  90], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4945, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2864, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7808, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([309,  50], device='cuda:0'), tensor([219, 448], device='cuda:0'), tensor([394, 201, 305, 302, 305, 217, 305, 402, 305, 149, 302,  72, 196,  43,
        402, 305, 128, 236], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6399, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3035, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9434, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 451, 191, 108], device='cuda:0'), tensor([215,  90, 209], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([181,   9, 155, 121,  43], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4723, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2736, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7459, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([295, 295, 295, 295, 195, 295], device='cuda:0'), tensor([127, 142, 127, 337, 345, 332, 337, 337], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([ 44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6517, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4277, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0794, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 9 finished with lr=0.00009854

dataset_name None

Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7f8410d8be50>
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00010/00444]	Time 0.55 (0.55)
loss {'cls_loss': tensor(0.1156, device='cuda:0'), 'reg_loss': tensor(0.1019, device='cuda:0'), 'final_loss': tensor(0.2175, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00020/00444]	Time 0.60 (0.57)
loss {'cls_loss': tensor(0.2633, device='cuda:0'), 'reg_loss': tensor(0.0967, device='cuda:0'), 'final_loss': tensor(0.3600, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00030/00444]	Time 0.37 (0.51)
loss {'cls_loss': tensor(0.3498, device='cuda:0'), 'reg_loss': tensor(0.2020, device='cuda:0'), 'final_loss': tensor(0.5519, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00040/00444]	Time 0.40 (0.48)
loss {'cls_loss': tensor(0.5324, device='cuda:0'), 'reg_loss': tensor(0.2680, device='cuda:0'), 'final_loss': tensor(0.8004, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00050/00444]	Time 0.42 (0.47)
loss {'cls_loss': tensor(0.5136, device='cuda:0'), 'reg_loss': tensor(0.2187, device='cuda:0'), 'final_loss': tensor(0.7323, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00060/00444]	Time 0.43 (0.46)
loss {'cls_loss': tensor(0.2574, device='cuda:0'), 'reg_loss': tensor(0.2137, device='cuda:0'), 'final_loss': tensor(0.4711, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00070/00444]	Time 0.40 (0.45)
loss {'cls_loss': tensor(0.2236, device='cuda:0'), 'reg_loss': tensor(0.1015, device='cuda:0'), 'final_loss': tensor(0.3251, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00080/00444]	Time 0.41 (0.45)
loss {'cls_loss': tensor(0.4076, device='cuda:0'), 'reg_loss': tensor(0.2335, device='cuda:0'), 'final_loss': tensor(0.6411, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00090/00444]	Time 0.44 (0.45)
loss {'cls_loss': tensor(0.2382, device='cuda:0'), 'reg_loss': tensor(0.0886, device='cuda:0'), 'final_loss': tensor(0.3268, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00100/00444]	Time 0.43 (0.44)
loss {'cls_loss': tensor(0.7179, device='cuda:0'), 'reg_loss': tensor(0.4961, device='cuda:0'), 'final_loss': tensor(1.2139, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00110/00444]	Time 0.42 (0.44)
loss {'cls_loss': tensor(0.8779, device='cuda:0'), 'reg_loss': tensor(0.8548, device='cuda:0'), 'final_loss': tensor(1.7326, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00120/00444]	Time 0.42 (0.44)
loss {'cls_loss': tensor(0.4904, device='cuda:0'), 'reg_loss': tensor(0.2853, device='cuda:0'), 'final_loss': tensor(0.7757, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00130/00444]	Time 0.40 (0.44)
loss {'cls_loss': tensor(0.0432, device='cuda:0'), 'reg_loss': tensor(0.0360, device='cuda:0'), 'final_loss': tensor(0.0791, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00140/00444]	Time 0.44 (0.44)
loss {'cls_loss': tensor(0.2334, device='cuda:0'), 'reg_loss': tensor(0.1334, device='cuda:0'), 'final_loss': tensor(0.3668, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00150/00444]	Time 0.42 (0.44)
loss {'cls_loss': tensor(0.3489, device='cuda:0'), 'reg_loss': tensor(0.1807, device='cuda:0'), 'final_loss': tensor(0.5295, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00160/00444]	Time 0.40 (0.43)
loss {'cls_loss': tensor(0.3074, device='cuda:0'), 'reg_loss': tensor(0.1345, device='cuda:0'), 'final_loss': tensor(0.4419, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00170/00444]	Time 0.41 (0.43)
loss {'cls_loss': tensor(1.2500, device='cuda:0'), 'reg_loss': tensor(0.6321, device='cuda:0'), 'final_loss': tensor(1.8821, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00180/00444]	Time 0.41 (0.43)
loss {'cls_loss': tensor(0.6964, device='cuda:0'), 'reg_loss': tensor(0.4475, device='cuda:0'), 'final_loss': tensor(1.1439, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00190/00444]	Time 0.42 (0.43)
loss {'cls_loss': tensor(0.2950, device='cuda:0'), 'reg_loss': tensor(0.1784, device='cuda:0'), 'final_loss': tensor(0.4734, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00200/00444]	Time 0.39 (0.43)
loss {'cls_loss': tensor(0.2285, device='cuda:0'), 'reg_loss': tensor(0.0945, device='cuda:0'), 'final_loss': tensor(0.3230, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00210/00444]	Time 0.42 (0.43)
loss {'cls_loss': tensor(0.5877, device='cuda:0'), 'reg_loss': tensor(0.2899, device='cuda:0'), 'final_loss': tensor(0.8776, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00220/00444]	Time 0.41 (0.43)
loss {'cls_loss': tensor(0.0856, device='cuda:0'), 'reg_loss': tensor(0.0625, device='cuda:0'), 'final_loss': tensor(0.1481, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00230/00444]	Time 0.40 (0.43)
loss {'cls_loss': tensor(0.1037, device='cuda:0'), 'reg_loss': tensor(0.0296, device='cuda:0'), 'final_loss': tensor(0.1332, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00240/00444]	Time 0.42 (0.43)
loss {'cls_loss': tensor(0.1678, device='cuda:0'), 'reg_loss': tensor(0.0602, device='cuda:0'), 'final_loss': tensor(0.2280, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00250/00444]	Time 0.42 (0.43)
loss {'cls_loss': tensor(0.0766, device='cuda:0'), 'reg_loss': tensor(0.0437, device='cuda:0'), 'final_loss': tensor(0.1204, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00260/00444]	Time 0.44 (0.43)
loss {'cls_loss': tensor(0.5660, device='cuda:0'), 'reg_loss': tensor(0.5627, device='cuda:0'), 'final_loss': tensor(1.1288, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00270/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.3607, device='cuda:0'), 'reg_loss': tensor(0.1877, device='cuda:0'), 'final_loss': tensor(0.5484, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00280/00444]	Time 0.40 (0.42)
loss {'cls_loss': tensor(0.5109, device='cuda:0'), 'reg_loss': tensor(0.2797, device='cuda:0'), 'final_loss': tensor(0.7905, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00290/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.4106, device='cuda:0'), 'reg_loss': tensor(0.1922, device='cuda:0'), 'final_loss': tensor(0.6028, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00300/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(1.4996, device='cuda:0'), 'reg_loss': tensor(0.8832, device='cuda:0'), 'final_loss': tensor(2.3828, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00310/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.6525, device='cuda:0'), 'reg_loss': tensor(0.3895, device='cuda:0'), 'final_loss': tensor(1.0420, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00320/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.3585, device='cuda:0'), 'reg_loss': tensor(0.1551, device='cuda:0'), 'final_loss': tensor(0.5137, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00330/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(1.1616, device='cuda:0'), 'reg_loss': tensor(0.6178, device='cuda:0'), 'final_loss': tensor(1.7794, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00340/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.3219, device='cuda:0'), 'reg_loss': tensor(0.2030, device='cuda:0'), 'final_loss': tensor(0.5248, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00350/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.2522, device='cuda:0'), 'reg_loss': tensor(0.0850, device='cuda:0'), 'final_loss': tensor(0.3372, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00360/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.2785, device='cuda:0'), 'reg_loss': tensor(0.2104, device='cuda:0'), 'final_loss': tensor(0.4888, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00370/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.1506, device='cuda:0'), 'reg_loss': tensor(0.0834, device='cuda:0'), 'final_loss': tensor(0.2341, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00380/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.0420, device='cuda:0'), 'reg_loss': tensor(0.0310, device='cuda:0'), 'final_loss': tensor(0.0730, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00390/00444]	Time 0.40 (0.42)
loss {'cls_loss': tensor(1.0400, device='cuda:0'), 'reg_loss': tensor(0.5125, device='cuda:0'), 'final_loss': tensor(1.5524, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00400/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.9817, device='cuda:0'), 'reg_loss': tensor(0.4894, device='cuda:0'), 'final_loss': tensor(1.4712, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00410/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.1533, device='cuda:0'), 'reg_loss': tensor(0.1193, device='cuda:0'), 'final_loss': tensor(0.2725, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00420/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.4018, device='cuda:0'), 'reg_loss': tensor(0.2269, device='cuda:0'), 'final_loss': tensor(0.6287, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00430/00444]	Time 0.45 (0.42)
loss {'cls_loss': tensor(0.7533, device='cuda:0'), 'reg_loss': tensor(0.4178, device='cuda:0'), 'final_loss': tensor(1.1711, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00440/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.1580, device='cuda:0'), 'reg_loss': tensor(0.0446, device='cuda:0'), 'final_loss': tensor(0.2026, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
t-start,end [172.46967   376.9584    228.95338   191.40948   412.4733    395.24695
 504.02878   246.51212   294.12653   527.984     387.69467     1.8206375
 178.47711   486.43234   264.04285   338.08084   224.93716   255.06949
 395.88165   133.8173   ] [190.3118   396.61194  249.37425  201.28442  435.12436  413.28568
 521.9694   255.3093   313.7584   538.239    397.2114    15.812167
 200.23787  504.02682  274.40497  347.3543   235.4813   263.5757
 404.4035   144.62483 ]
label [ 88  88  88  88  88  88  88  88  88  88  88  88  88  88  88  88  88 436
  88  88]
label_len 888000
gt [ 88 430  88  72  88 436  88  72  88  91 411 209  88 424  88 247   9 430
 120 253]
gt_len 3291
score [0.26127586 0.25575268 0.24241701 0.24087277 0.24083725 0.23934995
 0.21532157 0.20556886 0.20358549 0.20221579 0.19675758 0.18678361
 0.17653762 0.1738248  0.17188594 0.17097619 0.16829434 0.1678377
 0.16338897 0.16015838]
gt_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f8412ff7580>
pre_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f84131145b0>
pred_label
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '102' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '169' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '186' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '327' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '428' were provdied.
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '17' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '35' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '67' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '102' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '151' were provdied.
Warning: No predictions of label '153' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '169' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '180' were provdied.
Warning: No predictions of label '186' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '318' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '327' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '391' were provdied.
Warning: No predictions of label '422' were provdied.
Warning: No predictions of label '428' were provdied.
ap[0] [7.47506740e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 7.14285714e-02 1.55661962e-01 5.00000000e-01 1.23799971e-02
 2.93086088e-02 6.00471246e-02 7.36766392e-02 4.76938345e-02
 2.94204742e-02 2.00000000e-01 0.00000000e+00 4.25837428e-02
 1.20115726e-02 0.00000000e+00 0.00000000e+00 4.11522634e-03
 5.00000000e-01 8.78288147e-02 7.18713866e-03 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.29870130e-02 1.54742538e-02
 6.37512298e-04 0.00000000e+00 0.00000000e+00 2.15538549e-02
 3.41655346e-02 1.00000000e+00 0.00000000e+00 9.09090909e-02
 0.00000000e+00 0.00000000e+00 1.12541890e-01 4.06588617e-02
 0.00000000e+00 9.52380952e-02 2.61175144e-02 0.00000000e+00
 1.84586987e-04 2.55746375e-03 0.00000000e+00 1.53267894e-02
 0.00000000e+00 1.00000000e+00 0.00000000e+00 9.09090909e-02
 4.00000000e-02 2.28008292e-01 0.00000000e+00 2.50000000e-01
 0.00000000e+00 7.17103435e-02 3.04699485e-01 4.64604592e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.36733843e-02 4.92976237e-03 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.23970063e-02 5.00000000e-01
 0.00000000e+00 0.00000000e+00 8.06850167e-02 0.00000000e+00
 2.95349080e-02 3.57111246e-02 0.00000000e+00 0.00000000e+00
 1.66666667e-01 1.87366020e-02 1.28113992e-02 2.03076923e-01
 5.47377747e-03 8.25222936e-02 0.00000000e+00 2.35440802e-02
 0.00000000e+00 4.42475959e-02 1.17840395e-02 0.00000000e+00
 6.66666667e-02 0.00000000e+00 5.77948661e-02 0.00000000e+00
 0.00000000e+00 2.50000000e-01 1.64743518e-02 0.00000000e+00
 3.67349926e-02 2.72610414e-02 6.25000000e-02 0.00000000e+00
 0.00000000e+00 5.31583747e-04 0.00000000e+00 7.61857566e-03
 8.28303294e-02 6.25000000e-02 0.00000000e+00 4.39900369e-02
 3.96847033e-03 0.00000000e+00 0.00000000e+00 5.01602174e-02
 0.00000000e+00 0.00000000e+00 6.90184049e-04 0.00000000e+00
 2.85714286e-01 0.00000000e+00 1.42857143e-02 0.00000000e+00
 0.00000000e+00 1.43503772e-02 0.00000000e+00 0.00000000e+00
 3.03571429e-02 2.33348306e-02 1.00000000e+00 0.00000000e+00
 2.77193005e-01 1.37658573e-01 0.00000000e+00 2.82882883e-01
 0.00000000e+00 3.13210567e-02 0.00000000e+00 5.00000000e-01
 0.00000000e+00 1.74312577e-04 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.38421173e-02 1.42857143e-01
 0.00000000e+00 3.33333333e-02 3.44514065e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 1.53846154e-02 1.19102328e-01
 1.45308123e-03 3.93518519e-02 1.15207373e-03 9.09090909e-02
 0.00000000e+00 0.00000000e+00 1.00000000e+00 0.00000000e+00
 0.00000000e+00 9.05700799e-03 9.62643678e-02 0.00000000e+00
 5.26315789e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.31464975e-02 7.19779041e-02 3.50710657e-02 4.71750472e-03
 0.00000000e+00 0.00000000e+00 5.14492754e-02 0.00000000e+00
 1.25000000e-01 0.00000000e+00 2.09184542e-02 0.00000000e+00
 0.00000000e+00 9.09090909e-03 1.27291242e-04 1.01214575e-03
 1.51727771e-01 0.00000000e+00 4.48028674e-04 1.09196348e-02
 8.33333333e-01 0.00000000e+00 1.29434698e-01 7.14285714e-02
 0.00000000e+00 1.00000000e-01 8.71459695e-03 0.00000000e+00
 3.03030303e-02 0.00000000e+00 1.52517479e-03 0.00000000e+00
 2.87800928e-02 4.16666667e-02 2.64872209e-02 5.71428571e-02
 8.17843821e-03 6.26924604e-02 1.37731826e-02 4.33333333e-01
 3.28271290e-02 2.47818668e-02 6.83969513e-03 1.84613694e-01
 4.76190476e-02 6.25000000e-02 9.09090909e-02 1.58032336e-01
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.09523810e-01 2.50000000e-01 2.00000000e-01 5.16992887e-01
 1.25000000e-01 8.06118784e-02 2.72727273e-02 2.90476190e-01
 6.66666667e-02 0.00000000e+00 9.53976280e-03 7.74308021e-02
 6.24085653e-03 1.37500000e-01 2.50000000e-01 0.00000000e+00
 2.74657402e-01 7.35294118e-03 2.77063659e-01 1.11876098e-01
 1.05230139e-04 1.37201961e-02 1.26447223e-01 9.33584370e-02
 0.00000000e+00 1.11111111e-01 2.71739130e-03 4.20039891e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 1.64025776e-01
 4.09380703e-02 2.11580508e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 2.82894737e-02 7.69230769e-02 0.00000000e+00
 0.00000000e+00 1.40956082e-02 1.92708844e-02 0.00000000e+00
 0.00000000e+00 6.40422385e-02 1.00000000e-01 4.82989479e-02
 2.06897117e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 3.22491815e-03 5.00000000e-02 0.00000000e+00
 2.08462061e-02 2.02953566e-01 2.77305206e-03 0.00000000e+00
 4.86544603e-02 0.00000000e+00 0.00000000e+00 7.73993808e-05
 9.72259261e-03 5.33049041e-04 3.14465409e-04 4.52121579e-02
 4.51869684e-01 0.00000000e+00 1.02494645e-02 4.76190476e-03
 1.26592357e-01 0.00000000e+00 1.06494141e-01 1.38888889e-02
 3.47222222e-02 1.02075749e-02 0.00000000e+00 0.00000000e+00
 7.86431018e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 8.33333333e-02 6.59513269e-04 6.52008971e-03
 0.00000000e+00 0.00000000e+00 4.96031746e-04 1.29838428e-01
 0.00000000e+00 1.95618153e-04 7.30994152e-04 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 8.14198772e-02
 0.00000000e+00 3.74963575e-02 2.53448276e-01 0.00000000e+00
 0.00000000e+00 9.80392157e-03 1.04858476e-03 3.57142857e-03
 0.00000000e+00 2.00000000e-01 1.32835620e-02 2.99847445e-02
 6.02521103e-03 0.00000000e+00 5.88714201e-02 1.66666667e-01
 9.74702381e-03 2.82996741e-02 2.00000000e-01 9.61347840e-04
 1.11111111e-02 0.00000000e+00 1.12029385e-01 0.00000000e+00
 0.00000000e+00 9.47775629e-02 0.00000000e+00 0.00000000e+00
 0.00000000e+00 4.79486145e-01 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.00000000e-01 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 7.66661561e-02
 2.03510258e-02 2.20379379e-02 0.00000000e+00 0.00000000e+00
 4.48474577e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.28789515e-01 0.00000000e+00 5.45591630e-02 0.00000000e+00
 1.07526882e-02 8.61742424e-02 7.36218571e-02 2.80954650e-02
 0.00000000e+00 9.40619841e-03 7.82848498e-04 0.00000000e+00
 1.08169473e-02 7.91308051e-03 1.75438596e-03 7.02595333e-02
 1.94772534e-02 5.31250000e-02 1.25000000e-01 3.31777488e-03
 2.47299487e-02 6.31313131e-04 1.35542169e-02 3.28624955e-03
 3.33333333e-01 4.19884170e-02 5.55555556e-03 8.33333333e-02
 5.63520510e-02 1.81760204e-02 0.00000000e+00 2.06862745e-01
 3.90352994e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 3.38091328e-02 9.80547531e-02 3.34803922e-01
 6.61524467e-03 0.00000000e+00 0.00000000e+00 7.54267110e-03
 8.03591424e-03 1.22361328e-02 1.50974975e-01 0.00000000e+00
 3.78736124e-02 0.00000000e+00 5.08813311e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 4.91715377e-04 0.00000000e+00
 4.00000000e-01 2.25210084e-01 1.02485717e-01 0.00000000e+00
 5.10204082e-04]
[RESULTS] Action detection results on goalstep_train_withID_subset.

|tIoU = 0.30: mAP = 5.80 (%) Recall@1x = 7.67 (%) Recall@5x = 11.07 (%) 
|tIoU = 0.40: mAP = 5.08 (%) Recall@1x = 6.59 (%) Recall@5x = 9.61 (%) 
|tIoU = 0.50: mAP = 4.09 (%) Recall@1x = 5.23 (%) Recall@5x = 7.84 (%) 
|tIoU = 0.60: mAP = 3.14 (%) Recall@1x = 4.05 (%) Recall@5x = 6.17 (%) 
|tIoU = 0.70: mAP = 1.79 (%) Recall@1x = 2.35 (%) Recall@5x = 3.78 (%) 
Average mAP: 3.98 (%)
All done! Total time: 225.11 sec
dataset_name None

[Train]: Epoch 10 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286,
        411, 286, 411, 286,  90, 312], device='cuda:0'), tensor([116, 325, 116, 147, 105, 325,  51, 109, 183,  47, 404, 285,  47, 404,
        415, 194, 194, 415, 109, 325, 183,  47], device='cuda:0'), tensor([431], device='cuda:0'), tensor([ 16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16],
       device='cuda:0'), tensor([90], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(3.2724, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.9103, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(5.1827, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([ 11,  44, 351, 121, 351, 127, 351, 351, 351, 351, 231],
       device='cuda:0'), tensor([312, 334,  15, 436,  15], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([242, 415, 121, 242, 242], device='cuda:0'), tensor([ 71,  37, 224,  37,  82, 257,  37,  37, 257, 215, 313, 411],
       device='cuda:0'), tensor([394, 121,   4], device='cuda:0'), tensor([268, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8350, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.0827, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.9177, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([313,  96, 383, 403, 196, 294], device='cuda:0'), tensor([408, 399, 408,  50, 399], device='cuda:0'), tensor([224, 305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(1.9615, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(3.0690, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 440, 441, 279], device='cuda:0'), tensor([408], device='cuda:0'), tensor([300, 451, 451, 319], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93, 270], device='cuda:0'), tensor([401, 409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,
         82, 302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380], device='cuda:0'), tensor([ 19, 436, 384,  19, 182, 121, 430, 436,  80,  47, 436, 325,  93, 436,
        345, 113, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(1.8656, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.1161, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.9817, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 175, 223, 247], device='cuda:0'), tensor([219], device='cuda:0'), tensor([412, 357, 357, 398, 412, 357, 357, 398, 357, 412], device='cuda:0'), tensor([436], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6803, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3850, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0654, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([385, 133, 388,  80, 183,  80,  80], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([350, 302, 121,  96, 294,  52, 294,  52, 119,  52, 294,  52, 447,  52,
        385,  52, 409,  52,  44,  52,  44,  96], device='cuda:0'), tensor([309,  50, 309], device='cuda:0'), tensor([121, 298], device='cuda:0'), tensor([ 49,  22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184,   8],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.0918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6439, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7357, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 366,  10, 366,  10], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([436, 294, 294, 430, 127,  44,  63], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([441, 225, 108, 305, 285, 305, 441, 225, 418], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([15], device='cuda:0')]feats torch.Size([722, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1269, 1536])
yes3 {'cls_loss': tensor(0.9759, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5164, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4923, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([98], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314,
        407], device='cuda:0'), tensor([209, 225], device='cuda:0'), tensor([309, 429, 451, 215, 177, 294, 215, 150,  71,  71], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8067, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4186, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2252, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90,
        223, 402, 223,  50, 223, 402], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9549, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5828, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 159, 365,  31,  19,  31, 424], device='cuda:0'), tensor([  9, 439, 439, 439, 439, 439], device='cuda:0'), tensor([311, 303, 183, 138,  47, 213, 281, 392], device='cuda:0'), tensor([315], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6197, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3234, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9431, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([174, 256, 174, 256], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0'), tensor([436, 246, 436,  82,   0], device='cuda:0'), tensor([187], device='cuda:0'), tensor([238, 378, 231, 100, 436], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 108],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4825, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8025, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [010][00010/00055]	Time 0.76 (0.76)	Loss 0.80 (0.80)
		cls_loss 0.48 (0.48)	reg_loss 0.32 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([283, 283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280,
        437], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([406], device='cuda:0'), tensor([93], device='cuda:0'), tensor([80], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338],
       device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6347, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3783, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0130, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([284], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([354, 385, 354, 100, 121, 404,  93, 257, 385, 453, 110],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4267, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2464, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6731, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([283, 329, 301, 283, 301, 283], device='cuda:0'), tensor([ 93, 393, 100, 393, 385, 393, 305, 393, 305, 393, 305, 159, 393],
       device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8260, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4619, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2880, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]:
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1422, 1536])

yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([122, 1536]) 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([176, 176, 176,  46, 120, 120,  46, 197, 283,  46, 108, 209],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([436, 137, 357, 220,  15, 294, 302, 415, 440, 425, 424, 302,  96],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6562, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3680, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0242, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([205], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411],
       device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357, 431, 137,
        220, 220, 357, 431, 220, 409, 220, 357, 431, 294, 357, 431, 447, 357,
        431, 294], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8978, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6060, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.5038, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 322, 383, 383, 430, 319, 319, 120], device='cuda:0'), tensor([89], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([215, 345, 215], device='cuda:0'), tensor([325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423, 294],
       device='cuda:0'), tensor([58], device='cuda:0'), tensor([116, 116,  80, 254,  93, 116, 415,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6694, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3190, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9884, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 384, 215, 215, 215, 402], device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([385], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([294, 268, 108, 268, 408, 268, 108, 268, 108, 268,  71, 268, 357,  44,
          5, 138, 138, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2995, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8304, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([260,  44, 447], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([100,  88,  88,  88, 100,  88, 100], device='cuda:0'), tensor([201, 142,  11, 351, 142, 351, 142, 351, 142, 351, 196, 351, 429],
       device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223,
        196, 221, 196], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1199, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 441,  49, 408,  22,  50], device='cuda:0'), tensor([348, 268], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([ 96, 382], device='cuda:0'), tensor([294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,  22, 247, 234,
        247, 294, 424, 150, 433, 247], device='cuda:0'), tensor([ 68, 121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7018, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3905, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0922, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([256, 256, 256, 256], device='cuda:0'), tensor([436, 294, 294, 436, 294, 315], device='cuda:0'), tensor([121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([399,  63, 398, 376, 398, 354, 398, 354,  71, 376, 398],
       device='cuda:0'), tensor([225], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([ 47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195,
        325], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6700, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4038, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0738, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [010][00020/00055]	Time 0.65 (0.71)	Loss 1.07 (0.94)
		cls_loss 0.67 (0.58)	reg_loss 0.40 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 383, 441,  63, 441, 316], device='cuda:0'), tensor([356, 279,  96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37], device='cuda:0'), tensor([294, 100, 279, 451, 346, 249,  93,  71, 329, 300, 294],
       device='cuda:0'), tensor([441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302],
       device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6289, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3455, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9744, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295], device='cuda:0'), tensor([103, 385, 103], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([197, 440, 121, 316,  32,  63, 121,  32, 453,  31, 300, 436],
       device='cuda:0'), tensor([ 80, 121, 237, 388, 311, 354, 159, 354, 423], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2152, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  53, 424, 451, 191, 108], device='cuda:0'), tensor([439], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([137, 385,  50, 137,  50, 291, 438], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4318, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2522, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6840, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234, 415, 163], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121, 100, 436, 366,
        215,  83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436],
       device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,
         50], device='cuda:0'), tensor([340, 236, 121, 312, 121,  50], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9217, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5529, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4746, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437,
        310, 399, 415, 399, 302], device='cuda:0'), tensor([256], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([305, 366, 445, 441, 385, 286, 441,   8], device='cuda:0'), tensor([451, 436, 316,  93, 191, 436,  44, 451, 221, 284], device='cuda:0'), tensor([354, 432, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5077, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3099, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8176, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37, 217, 329,  37,
        282, 121,  37, 447, 385, 407], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6118, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3711, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9829, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21,
        279], device='cuda:0'), tensor([ 93, 366,  91,  96], device='cuda:0'), tensor([438,  22, 254, 224, 399], device='cuda:0'), tensor([ 31, 131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([ 14, 436,  14, 436,  14], device='cuda:0'), tensor([268], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([ 98, 451, 121, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5332, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2221, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7553, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([ 23, 183,  23, 183, 260,  36, 354,  47, 100,  47, 133, 256],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([148], device='cuda:0'), tensor([295,  82], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5721, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2836, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8558, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([437, 120, 437,  90, 413,  90, 413,  90, 437,  90, 437,  90, 413, 437,
        394], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([268, 146, 201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268,
        146, 411], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([316, 100, 257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7174, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4636, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1811, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,   9, 436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21,
        128, 436,  21,  21], device='cuda:0'), tensor([255], device='cuda:0'), tensor([256], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357], device='cuda:0'), tensor([407, 410, 280, 270, 270, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5210, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2677, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7888, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [010][00030/00055]	Time 0.65 (0.69)	Loss 0.79 (0.89)
		cls_loss 0.52 (0.56)	reg_loss 0.27 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 249, 430, 313, 165, 205], device='cuda:0'), tensor([ 44, 195, 201, 195, 442, 121, 442, 451], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([100], device='cuda:0'), tensor([9], device='cuda:0'), tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9], device='cuda:0'), tensor([ 63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,
         82, 213, 285], device='cuda:0'), tensor([392, 146,   5, 378, 146, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6076, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3321, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9397, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  93, 121, 124, 332, 248, 298, 249,  93,  96, 441, 121, 441],
       device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([244], device='cuda:0'), tensor([255, 255], device='cuda:0'), tensor([451, 120], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([  8,  32, 385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437],
       device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3124, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1972, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5097, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([371, 371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([ 63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445],
       device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436,  80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5125, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3710, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8835, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([433, 356, 292, 383], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([430,  11, 452, 284,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5578, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3133, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8711, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138,
        436], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([386, 437, 386, 385, 121, 166,  93, 120], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([269], device='cuda:0'), tensor([313, 359,  87,  96, 359, 415, 138,  50, 294, 302, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6157, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9565, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 268, 268, 306, 268, 306, 306], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 22,  78, 279, 223, 228, 430, 223,  93, 223], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([443, 124, 142, 166, 294], device='cuda:0'), tensor([304, 451, 363], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3418, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1945, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5362, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121,  59],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([239, 239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([362, 105], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([451,  73, 121,  44,  73, 315, 437, 305, 437, 121, 441],
       device='cuda:0'), tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8523, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5441, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3964, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([256], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([201], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121, 191], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4262, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3228, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7491, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([443], device='cuda:0'), tensor([436,  47], device='cuda:0'), tensor([100,  30,  47, 370,  68,  80,  68,  47, 131, 303,  47, 447,  47, 100,
        453], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([224,  71, 385,  62, 451,  62, 451, 264], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4916, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2265, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7181, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 316, 316, 316, 294,  82], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121, 120], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4375, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2185, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6560, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [010][00040/00055]	Time 0.66 (0.68)	Loss 0.66 (0.83)
		cls_loss 0.44 (0.53)	reg_loss 0.22 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([437, 436, 279, 296, 302, 422, 121,  30,  30,  30], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5304, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3110, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8413, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63],
       device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0'), tensor([399], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([108, 431, 436, 220, 329, 220, 165, 220, 220, 137,  93, 430],
       device='cuda:0'), tensor([ 80, 298, 215, 187,   8, 187,  96,  96], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([253,  87, 140, 316, 424,  83, 402], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6948, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3869, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0816, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([214,  11, 226, 351, 197, 351, 197, 351, 121, 394, 443],
       device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([283, 304, 280], device='cuda:0'), tensor([ 11,  44,  71, 351,  82, 351, 424, 166,  82, 196], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 63, 436,  80, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4876, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2686, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7562, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([441, 294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([279, 121, 415, 345, 309, 279, 309, 299,  32,  93, 121],
       device='cuda:0'), tensor([392, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268,
        447, 268, 313,   5, 392,  50, 268, 268], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4224, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2521, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 73,  71, 136,  73, 424, 298, 425,  73], device='cuda:0'), tensor([432, 268, 268, 268], device='cuda:0'), tensor([21], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([380, 402, 447, 402,  50], device='cuda:0'), tensor([334,  22, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2125, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5810, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([435, 398], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([249, 399], device='cuda:0'), tensor([215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2575, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1718, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4292, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([2, 2, 2, 2, 2], device='cuda:0'), tensor([ 80, 338,  80,  47, 354, 443,  88, 121, 354, 183, 124, 100],
       device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([294, 264, 292, 399, 142,  80, 142], device='cuda:0'), tensor([ 63,  47,  47,  93,  23, 443,  49,  47,  98, 447,  47],
       device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6887, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3376, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0263, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([354, 100, 100, 116], device='cuda:0'), tensor([107, 181, 352, 279, 340, 121, 424, 181, 305, 280, 415, 415, 238,  12,
        415, 453, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5122, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3007, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8130, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([175, 436, 175, 436,  10, 436,  10, 315], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([158], device='cuda:0'), tensor([14], device='cuda:0'), tensor([269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([108, 234, 294, 108, 436, 408, 108], device='cuda:0'), tensor([451], device='cuda:0'), tensor([116, 138, 232, 388, 232, 388], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5364, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2929, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8293, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([215], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([268, 376], device='cuda:0'), tensor([270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([187], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3996, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2324, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6320, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [010][00050/00055]	Time 0.65 (0.67)	Loss 0.63 (0.79)
		cls_loss 0.40 (0.50)	reg_loss 0.23 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([283, 436], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([240], device='cuda:0'), tensor([31], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([401, 121,  62, 294,  75,   9, 294,  62, 294,  62, 294, 294,  96, 392],
       device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2485, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6772, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([351, 390, 420, 385, 122,  21, 305,  21,  30,  21, 286,  21, 286, 105,
         95, 273, 135], device='cuda:0'), tensor([351,  63,  80, 351, 121], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([408, 408, 436, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5504, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2889, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8393, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([217, 201,  88, 430,  88,  72,  88, 436,  88,  72,  88,  91, 411, 209,
         88, 424], device='cuda:0'), tensor([191], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93, 100, 100], device='cuda:0'), tensor([423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5698, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2766, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 155, 247, 436, 230], device='cuda:0'), tensor([405, 444, 405, 113, 405,  93, 405], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0'), tensor([ 75, 451], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181], device='cuda:0'), tensor([294,  65, 124, 144,  23,  82], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5518, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3164, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8681, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 10 finished with lr=0.00009990


[Train]: Epoch 11 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294,
        399], device='cuda:0'), tensor([232,  36, 120,  36,  36,  73, 116,  82, 294, 305,  36],
       device='cuda:0'), tensor([ 96, 441, 298, 441, 298,  76], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([371, 424, 371, 371, 420, 420, 424, 371], device='cuda:0'), tensor([357, 412, 357, 398, 357, 412, 357, 357, 398, 412], device='cuda:0'), tensor([ 80, 385,  22,  22, 257, 133, 399, 302,   9], device='cuda:0'), tensor([294, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8188, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2582, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181, 181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([306, 268, 268, 306, 268, 306, 306, 306], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([137,  93, 430,  10, 220, 242, 357, 431,  10, 220, 436,  71,  93],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5945, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3946, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9890, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([139, 115, 121], device='cuda:0'), tensor([ 36,  88, 404, 116, 392, 116,  47], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302, 296], device='cuda:0'), tensor([255], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([231, 196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302,
        305, 217, 305, 402], device='cuda:0'), tensor([47], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8398, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4887, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3285, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([ 72, 415, 108], device='cuda:0'), tensor([388,  80, 183,  80,  80], device='cuda:0'), tensor([436], device='cuda:0'), tensor([148], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2941, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1658, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4598, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([423, 136, 423], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3588, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2240, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5827, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 245, 451, 100, 100, 443, 302,  62], device='cuda:0'), tensor([ 88, 100,  88, 100,  88,  99,  88, 187], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([93], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([436, 316, 433, 316], device='cuda:0'), tensor([100, 121, 404,  93, 257, 385, 453, 110, 394, 257, 441,  44,  22, 384],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7608, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1524, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.9085, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4577, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3663, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([120, 279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407, 280,  21,
         40, 269,  44, 424, 407], device='cuda:0'), tensor([174, 256, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([65], device='cuda:0'), tensor([270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,  82,
        313, 181], device='cuda:0'), tensor([283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437,
        150, 283, 286], device='cuda:0'), tensor([181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7709, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5439, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3148, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415],
       device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([ 11,  90,  11, 429], device='cuda:0'), tensor([ 96, 392, 345], device='cuda:0'), tensor([298], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5852, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3639, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9491, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([269, 269, 433, 323, 323, 121], device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([219], device='cuda:0'), tensor([451, 201, 451, 193, 105,  37, 345,  37, 380, 345, 411, 394, 418, 408,
        397, 279, 408, 408, 313, 385,  16, 418,  16], device='cuda:0'), tensor([395,  76, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326,
        395, 395], device='cuda:0'), tensor([325,  47, 195,  47, 256], device='cuda:0'), tensor([ 36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8636, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4497, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3133, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([107, 107, 107, 453], device='cuda:0'), tensor([430,  75, 451], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([215, 141, 294, 399, 135, 307, 400,  50, 294, 215,  27],
       device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([256], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([155, 131, 191,   9, 385,  71, 314, 105, 407, 385, 436, 407],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4816, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2547, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7363, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [011][00010/00055]	Time 0.75 (0.75)	Loss 0.74 (0.74)
		cls_loss 0.48 (0.48)	reg_loss 0.25 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0'), tensor([402, 452, 437, 300], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([215, 215, 215, 402, 108], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([430, 316, 451, 405, 258], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5520, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2990, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8511, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([ 88,  72,  88, 436,  88,  72,  88,  91, 411, 209,  88, 424,  88, 247,
         80], device='cuda:0'), tensor([166, 294], device='cuda:0'), tensor([399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([ 62, 451,  62, 451, 264, 233, 385, 436], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5624, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3119, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8743, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424, 150,
        433, 247, 218, 214], device='cuda:0'), tensor([441, 402], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([224, 385, 224, 246, 224], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0'), tensor([348, 268], device='cuda:0'), tensor([223, 345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5814, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3495, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9309, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 420, 405, 168, 405,  82, 213, 285, 405, 294,  21],
       device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([437, 286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87,
        279, 437, 150, 294, 437, 108], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9038, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 319, 319, 196], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([271, 121, 316], device='cuda:0'), tensor([93], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([294,   4,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2747, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2448, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5196, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 49, 181,  49,  22, 270, 399, 279, 121, 383], device='cuda:0'), tensor([ 80, 100, 303, 325, 388, 116, 100], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 31, 408], device='cuda:0'), tensor([201, 268, 146, 424, 268, 340, 268, 411, 268, 146, 411, 268, 146, 411,
        268, 146, 411, 268], device='cuda:0'), tensor([142, 142, 280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3649, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2260, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5909, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 313], device='cuda:0'), tensor([127, 142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0'), tensor([315,  90, 305, 451,  73, 121,  44,  73, 315, 437, 305],
       device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0'), tensor([447,  93, 294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,
         95, 436], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6233, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3031, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9264, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([158], device='cuda:0'), tensor([47], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([191], device='cuda:0'), tensor([100], device='cuda:0'), tensor([436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,
         10, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3383, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2186, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5569, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([436], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([345,  44,  63, 446,  44, 152, 437,  44, 436,  44,  37,  37],
       device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5219, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9420, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([269], device='cuda:0'), tensor([294], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([161, 431, 436,  82,  93,  93, 161,  48, 122,  83, 120, 385, 159, 286,
        199, 447,  93,  71,  93, 315, 315, 447, 315, 431, 315, 315,  93,  48],
       device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5837, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3174, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9011, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [011][00020/00055]	Time 0.66 (0.71)	Loss 0.90 (0.82)
		cls_loss 0.58 (0.53)	reg_loss 0.32 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256,
        100, 392, 129, 100, 392], device='cuda:0'), tensor([305, 286,  31,  31,  31,  31], device='cuda:0'), tensor([441, 441, 225, 108, 305, 285], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 44, 269, 279, 269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7158, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3928, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1087, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([417], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4340, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2374, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6714, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([132], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([116, 116], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([  9, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1275, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4000, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0'), tensor([108], device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([386, 184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 155, 451, 451], device='cuda:0'), tensor([249, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3203, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2296, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5499, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([432, 270,  63], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([451, 176, 176], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3582, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1968, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5549, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82, 204, 204, 204, 204, 204, 350], device='cuda:0'), tensor([108, 348, 354, 394], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([255], device='cuda:0'), tensor([413, 424,  90, 413,  90, 121, 437, 124,   9], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4728, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3160, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7888, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([301, 439, 436, 439, 439, 436], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 382,  96,
        382], device='cuda:0'), tensor([131,  22, 296], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437,
        310, 399, 415, 399, 302], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([182, 392, 146, 146, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6162, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3797, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9959, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0'), tensor([441, 294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([362, 362, 146, 100, 355, 116], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420],
       device='cuda:0'), tensor([250,  50, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5363, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2911, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8274, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([326, 436, 208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436, 213,
         19, 436, 384,  19, 182], device='cuda:0'), tensor([295], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([267,  93, 267,  93, 267], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([415, 163], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3444, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5854, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15, 294, 302, 415, 440, 425, 424, 302,  96,  61, 217, 255],
       device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([121, 430, 430, 437, 386, 437, 386, 437, 386, 385], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([315,  93, 244, 432], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([  9, 155, 121,  43,  17, 147, 344, 379, 155, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6417, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3738, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0155, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [011][00030/00055]	Time 0.66 (0.69)	Loss 1.02 (0.88)
		cls_loss 0.64 (0.57)	reg_loss 0.37 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([398, 376, 398,   9, 398,  82, 256, 315, 256], device='cuda:0'), tensor([284], device='cuda:0'), tensor([295], device='cuda:0'), tensor([392,  91, 392, 268, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268,
        268,   5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268,
        268,   5, 392, 268, 268, 268, 268, 138, 268,   5, 268],
       device='cuda:0'), tensor([406], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5561, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3817, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9378, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 253, 177, 253,  87], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([ 80, 100], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6035, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9625, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([305, 256, 256, 256], device='cuda:0'), tensor([ 30, 173], device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([ 88, 298,  16, 298,  73], device='cuda:0'), tensor([131, 247, 108,  96,  96, 121, 348,  96, 191,  96,  96, 215],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4277, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2401, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6678, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([366, 436], device='cuda:0'), tensor([215, 121, 215, 100,  37, 257, 430], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3165, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1649, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4815, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0'), tensor([256, 412, 412, 412, 411, 412, 411, 138, 429, 398, 429, 412, 411, 412,
        354, 412, 138, 256, 398, 354, 412, 256, 412, 412, 354, 412, 412, 354,
        412, 138, 256, 398, 256, 412, 412, 354, 412, 354, 412, 138, 398, 354,
        412, 256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 354, 412,
        138, 398, 256, 412, 354, 412, 138, 398, 354, 412, 256, 412, 412, 412,
        138, 398, 354, 412], device='cuda:0'), tensor([325, 100, 443, 281, 325, 124, 289, 100, 116, 296, 355],
       device='cuda:0'), tensor([415,  32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2704, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7015, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9718, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 240], device='cuda:0'), tensor([225], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([89], device='cuda:0'), tensor([436, 294, 315, 436, 315, 108], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([315], device='cuda:0'), tensor([451, 441, 451,  93, 402, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3353, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1752, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5105, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([385, 399, 441, 301, 433, 294, 385], device='cuda:0'), tensor([431, 441, 431, 385, 431, 441, 220,  49, 441, 431, 436, 220, 441, 220,
        181, 441, 431,  50, 431, 441, 220, 441, 431, 219, 399, 220, 217, 431],
       device='cuda:0'), tensor([205, 436, 345,  30, 443, 436, 294], device='cuda:0'), tensor([362, 105], device='cuda:0'), tensor([121, 424, 181, 305, 280, 415, 415, 238,  12, 415, 453, 415, 385, 210,
        415, 279, 453, 385,  32, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8822, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4979, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3801, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([50], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([ 83, 439, 133, 121, 187, 305], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3888, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2136, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6024, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([ 93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351, 217, 305,  32,
        305, 438, 215], device='cuda:0'), tensor([107,  96, 338, 351], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([58], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167,
        108, 436, 241, 387,  85, 436, 167], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7120, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3725, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0845, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([451], device='cuda:0'), tensor([399], device='cuda:0'), tensor([378, 166, 385, 378, 388, 302,  80, 116,  80], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([100,  71, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2704, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1423, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4127, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [011][00040/00055]	Time 0.66 (0.68)	Loss 0.41 (0.77)
		cls_loss 0.27 (0.49)	reg_loss 0.14 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([90], device='cuda:0'), tensor([388,  93,  19, 109,  80, 303, 116,  51, 116,  19, 116,  93, 447,  68,
         47], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([205], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5203, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2759, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7962, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([121, 312, 121,  50,  10], device='cuda:0'), tensor([ 23, 408, 436, 436, 408, 436], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3034, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1789, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4823, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([451, 191, 108], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([408], device='cuda:0'), tensor([255], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([ 82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82,
        436, 124, 223, 196], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6221, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4140, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0362, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100, 385, 436,  93,
        291, 121, 291, 121, 115, 436,  10, 357, 296], device='cuda:0'), tensor([451], device='cuda:0'), tensor([294, 354,  47,  80,  51, 238,  47, 404, 388,  36, 302, 209, 121,  23,
        121,  82,   1,  47], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([  9, 404, 330,  57,  93, 100, 100, 100], device='cuda:0'), tensor([ 14, 327], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7647, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3927, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1574, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 399, 294, 399], device='cuda:0'), tensor([417], device='cuda:0'), tensor([316,  14], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([334, 120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([4], device='cuda:0'), tensor([249, 443, 105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3267, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1909, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5176, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([437,  87, 137], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305, 187, 305, 436, 187, 305, 187, 305],
       device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([47], device='cuda:0'), tensor([155, 131, 119], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5352, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3187, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8539, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285, 213, 430, 183,
        388, 338, 281, 116, 138], device='cuda:0'), tensor([441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302,
        441], device='cuda:0'), tensor([100,  45, 217, 429,  96, 201, 100, 294,  50, 213, 122,  30,  93],
       device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387],
       device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0')]
yes3 {'cls_loss': tensor(1.1350, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5929, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.7279, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 319, 424], device='cuda:0'), tensor([220], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436, 349],
       device='cuda:0'), tensor([296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254, 254],
       device='cuda:0'), tensor([398, 436, 398,  51, 398,  51, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4841, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3102, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7943, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([120, 436, 441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37,
        447,  37, 331,  37, 436,  37, 436], device='cuda:0'), tensor([ 80, 268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164], device='cuda:0'), tensor([ 87, 213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16,
        286,  16], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6889, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3753, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0643, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9, 436], device='cuda:0'), tensor([215], device='cuda:0'), tensor([451], device='cuda:0'), tensor([223, 223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313, 313,
        447, 138,  93], device='cuda:0'), tensor([ 63, 234, 215], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([121,  29, 453, 249, 356,  11,  44, 351, 121, 351, 127, 351, 351],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4605, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3201, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7807, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [011][00050/00055]	Time 0.65 (0.68)	Loss 0.78 (0.77)
		cls_loss 0.46 (0.49)	reg_loss 0.32 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([9], device='cuda:0'), tensor([305, 292, 305, 399, 363, 305], device='cuda:0'), tensor([109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256,
        116, 195, 325], device='cuda:0'), tensor([311, 354, 159, 354, 423,  83, 121, 436], device='cuda:0'), tensor([98], device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3575, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9760, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([ 22,  52, 257, 234,  63, 399, 121], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 52,  52, 298,  71, 298,  52, 298, 313], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([215], device='cuda:0'), tensor([295, 351, 351, 295, 351,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4706, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2348, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7054, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([421,  82, 421, 228, 415, 155, 155,  82], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([392,  47, 392, 436, 392], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3247, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1433, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4680, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423, 294],
       device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([100,  96], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6991, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0906, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 11 finished with lr=0.00009951


[Train]: Epoch 12 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([9], device='cuda:0'), tensor([93], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([116, 392, 116,  47,  80, 404, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3461, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5669, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120, 415, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2704, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7366, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294,  62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([191], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([215,  18, 215, 345, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3573, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2369, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5941, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  5, 167, 431, 268, 415,  22,  50, 268,  50, 412, 415, 356, 251, 138,
         50, 152, 360, 436, 282,  50,  50], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([451,  93, 402, 385, 402,  87, 131], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([98], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5705, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3600, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9304, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 247,  93], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([445, 236, 181, 236, 181, 107, 181, 352, 279, 340, 121, 424],
       device='cuda:0'), tensor([80], device='cuda:0'), tensor([385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121,
        100, 436, 366, 215,  83, 436,  71, 436,  10], device='cuda:0'), tensor([443, 377,  93, 443], device='cuda:0'), tensor([315,  73, 401, 441, 451, 305, 451, 121, 315, 451], device='cuda:0'), tensor([294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6533, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3730, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0263, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 398, 376,  71, 354, 398, 354], device='cuda:0'), tensor([268, 146, 411, 268, 146, 411, 268,  73, 268, 411, 268, 146, 430, 411,
        268, 105, 268, 280], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([ 49, 408,  22,  50], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4472, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2722, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7194, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([14], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([255], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([215], device='cuda:0'), tensor([409, 399, 249, 153, 121, 213, 270,  93, 270, 328,  59, 436, 224],
       device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 44, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3491, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1663, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5153, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,  37, 436,
         37,  22,  22,  37,  49, 122,  37,  37, 217, 329,  37],
       device='cuda:0'), tensor([140, 451, 300, 451], device='cuda:0'), tensor([255], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([100,  88, 100,  88, 100,  88, 100,  99,  88, 100,  88,  88, 100,  88],
       device='cuda:0'), tensor([408, 216, 447, 408], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([ 16,  88,  73,  88, 298,  16, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6781, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3799, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0580, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215],
       device='cuda:0'), tensor([305,  71, 187], device='cuda:0'), tensor([408], device='cuda:0'), tensor([131,  22, 296, 108], device='cuda:0'), tensor([256], device='cuda:0'), tensor([295], device='cuda:0'), tensor([338, 401], device='cuda:0'), tensor([385, 122,  21, 305,  21,  30,  21, 286,  21, 286, 105,  95, 273, 135,
        135,  93, 214, 351,  96, 155, 351,  96, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5554, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3118, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8672, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90, 316, 286, 121,
        436, 286, 316, 143, 283, 286, 430], device='cuda:0'), tensor([249], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([215,  63, 385,  82,  14, 121,  14], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6984, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4050, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1034, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 295, 295, 295, 295], device='cuda:0'), tensor([408], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 30,  47, 370,  68,  80,  68,  47, 131, 303,  47, 447,  47, 100, 453,
        388, 257, 370], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345, 167], device='cuda:0'), tensor([249, 316, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3760, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0565, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [012][00010/00055]	Time 0.72 (0.72)	Loss 1.06 (1.06)
		cls_loss 0.68 (0.68)	reg_loss 0.38 (0.38)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([320, 404, 447, 217,  80, 100], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([424, 280, 451], device='cuda:0'), tensor([256], device='cuda:0'), tensor([269], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4040, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2765, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6805, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([194, 194,  51,  51, 194, 194, 194, 194, 388, 345, 338, 338, 397, 100,
        388,  80, 370,  51,  68, 370], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5152, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2774, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7926, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225, 424, 225, 215,  91,  63, 113], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286, 294], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([121, 108,  90, 268,  37, 268], device='cuda:0'), tensor([292, 305, 399, 363, 305, 426, 426], device='cuda:0'), tensor([385, 224, 246, 224, 246, 224], device='cuda:0'), tensor([225], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6894, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3523, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0417, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305], device='cuda:0'), tensor([357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436, 279],
       device='cuda:0'), tensor([100, 121, 404,  93, 257, 385, 453, 110, 394, 257, 441,  44,  22, 384],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([406], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5303, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7955, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([14], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([408], device='cuda:0'), tensor([404, 385], device='cuda:0'), tensor([436, 120], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1778, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5087, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([240], device='cuda:0'), tensor([408], device='cuda:0'), tensor([187], device='cuda:0'), tensor([260,  44, 447, 294], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([436, 407, 410, 280, 270], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3799, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2005, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5804, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([139, 115, 121], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([302, 249,  93, 399, 441, 385, 302, 354, 438, 268, 256, 268, 256, 268,
        396, 138,  70, 398, 396], device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([108,  70, 447,  44, 383, 294, 224, 201, 121, 447, 438, 121, 215,  76],
       device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191, 301], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9365, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5567, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4932, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([166, 294], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([369, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6094, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5659, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1752, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len:
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([434, 1536])
yes2
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1118, 1536])
yes2yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1716, 1536]) 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([383, 383, 430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([399, 385, 399, 437,  50, 166, 166, 276, 437,  50], device='cuda:0'), tensor([451], device='cuda:0'), tensor([371, 371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([ 44,  37,  37,  37, 207,  70, 270,  44,  37], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397, 249,
        394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7478, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4180, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1658, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([362], device='cuda:0'), tensor([429, 354, 121,  80], device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([ 15, 294,  15,  15,  15], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3661, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2223, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5884, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [012][00020/00055]	Time 0.67 (0.70)	Loss 0.59 (0.82)
		cls_loss 0.37 (0.52)	reg_loss 0.22 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([161, 121, 436, 103, 385, 103], device='cuda:0'), tensor([345,  91, 247,  91,  37, 201, 345, 359, 359, 436, 359],
       device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([215,  50,  50, 217], device='cuda:0'), tensor([302,  72, 196,  43, 402, 305, 128, 236, 128, 128, 241, 305, 394],
       device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 93, 166], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5083, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7490, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37,  37], device='cuda:0'), tensor([285, 305, 441, 225,  16,  76,  16, 402, 418], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([436,  22, 436,  23, 408, 436], device='cuda:0'), tensor([305, 116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([31], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2544, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6970, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([267], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([215], device='cuda:0'), tensor([80], device='cuda:0'), tensor([256], device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181,
        382,  96, 382], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0'), tensor([423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3235, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5259, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123,
        350], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([306, 268, 268, 306, 268, 306, 306, 306], device='cuda:0'), tensor([215, 313,  96, 294,  96,  70,  96, 354, 215, 354, 121,  11],
       device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([319, 319, 121], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7765, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3681, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1446, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([215,  44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,
         45,  37, 424,  37, 411], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183], device='cuda:0'), tensor([ 21,  32,  95, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6684, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4233, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0917, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 294, 264, 294, 329,  93, 137], device='cuda:0'), tensor([100, 100], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([255], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([138,   8, 116, 138,   8, 116, 138, 232], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3135, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1702, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4837, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 402, 158,   6], device='cuda:0'), tensor([88], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([ 11, 420, 451, 420], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291], device='cuda:0'), tensor([316, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3570, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2641, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6211, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([262, 100, 262, 100, 430, 384, 262, 339,  31], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([163], device='cuda:0'), tensor([365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4010, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1855, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5865, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([205, 436, 345,  30, 443, 436, 294], device='cuda:0'), tensor([305, 256, 256], device='cuda:0'), tensor([399, 408,  50, 399,  50], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([451, 408,  37,  37,  37, 380, 408, 451, 193, 279, 105, 313, 451, 193],
       device='cuda:0'), tensor([279,  43, 296, 279, 121, 296, 436,   9, 436, 305, 407, 280,  21,  40,
        269,  44, 424, 407,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8220, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4734, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2955, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 441, 405, 441, 405, 444], device='cuda:0'), tensor([ 96, 187,  96, 108,  96], device='cuda:0'), tensor([398, 436, 398], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4663, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2658, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7320, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [012][00030/00055]	Time 0.66 (0.68)	Loss 0.73 (0.79)
		cls_loss 0.47 (0.50)	reg_loss 0.27 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([107, 107, 453, 107, 107, 107], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([451, 215, 177, 294, 215, 150,  71,  71, 215,  71, 329,  27,  27, 135],
       device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7031, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4316, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1347, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315], device='cuda:0'), tensor([113,  22, 451,  53, 424], device='cuda:0'), tensor([121, 215, 100,  37, 257, 430, 451], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5397, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2732, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8129, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296, 411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([363, 430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93],
       device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([245, 413, 245, 413, 319, 394, 453, 100,  93,  86], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5700, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3436, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9136, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([244], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([ 19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2740, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7697, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([155, 219], device='cuda:0'), tensor([ 95, 436, 440,  82], device='cuda:0'), tensor([415, 124, 124,  51,   8, 385,  47, 109, 195,  47, 256,  80, 109, 325],
       device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([215, 436, 400, 430, 351, 430, 430, 351, 430, 351,  93, 351, 325],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5496, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3031, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8527, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([229, 434, 401,  93, 431, 436, 385, 220,  50, 431, 385, 329, 294, 431,
         82, 431, 441], device='cuda:0'), tensor([417], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436,  80], device='cuda:0'), tensor([90], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([47], device='cuda:0'), tensor([296], device='cuda:0'), tensor([181, 219, 181, 181, 181, 219, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4042, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2361, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([189, 313, 415], device='cuda:0'), tensor([121,   4, 385,  80], device='cuda:0'), tensor([ 93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,
         71, 247, 279,  50], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([159, 121, 384, 279, 385, 121,  87, 120, 201], device='cuda:0'), tensor([436, 366,  10, 366,  10], device='cuda:0'), tensor([ 11,  11, 279,  11, 121, 201,  93, 279, 283, 279, 121, 283,  98, 283,
        301, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6531, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4203, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0734, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([  5, 146, 182, 392, 146, 146], device='cuda:0'), tensor([279, 269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203,
        332, 269], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417, 411, 417, 417,
        417, 314, 417, 417, 417, 436, 417, 150,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8713, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4630, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3343, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 51, 338, 116, 338, 116,  68, 183,  80, 116, 116, 116],
       device='cuda:0'), tensor([270, 430, 270, 436, 430], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3399, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2756, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6155, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354, 100], device='cuda:0'), tensor([408], device='cuda:0'), tensor([100, 393,  87, 437, 332, 437,  95,  83, 286, 407, 437,  21, 168, 100,
         21, 437,  21, 329, 292,  21, 437], device='cuda:0'), tensor([113], device='cuda:0'), tensor([412, 116,  50, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([323, 121, 269, 323], device='cuda:0'), tensor([415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50, 159],
       device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7507, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3720, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1228, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [012][00040/00055]	Time 0.66 (0.68)	Loss 1.12 (0.87)
		cls_loss 0.75 (0.57)	reg_loss 0.37 (0.31)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([37], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([301, 436, 439, 439, 436, 439, 436], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([89], device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4110, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2261, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6371, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 65,  65, 294,  65, 124], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([304, 217, 201,  88, 430,  88,  72,  88, 436,  88,  72,  88,  91, 411,
        209,  88], device='cuda:0'), tensor([ 80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385, 166,  19,
        121, 137, 286, 434], device='cuda:0'), tensor([305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([ 50,  85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302,
        357, 399,  16, 401,  96], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0348, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5948, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.6296, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([431, 100, 294], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124,
        223, 196, 221], device='cuda:0'), tensor([436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4545, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2665, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7210, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([431, 436, 431, 165,  44, 436,  93, 137,  10, 436,  44],
       device='cuda:0'), tensor([121], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5004, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3353, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8357, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([121, 223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331,
        450, 223, 219, 387, 184,  76, 247, 279], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0'), tensor([217, 357,  44, 217], device='cuda:0'), tensor([399], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5347, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3649, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8996, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([4], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([255], device='cuda:0'), tensor([441, 301, 433, 294, 385, 385, 217, 385, 121, 441], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3705, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1791, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5496, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([437, 386, 385, 121, 166,  93, 120], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([329, 234,  93,  44,  93,  12,  93,  35, 249,  93,  12,  93],
       device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430],
       device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6524, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0114, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([225,  50, 301], device='cuda:0'), tensor([340, 236, 121, 312, 121,  50], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([411,  50, 415,  93], device='cuda:0'), tensor([436, 294, 315, 436, 315, 108], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5669, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3312, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8981, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([354, 430], device='cuda:0'), tensor([253,  87, 140, 316, 424], device='cuda:0'), tensor([ 80, 116,  80,  80,  93, 325, 388, 232, 338], device='cuda:0'), tensor([316,  93, 191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,
         32], device='cuda:0'), tensor([ 52,  70, 181,  52, 436,  52], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4574, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2769, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7342, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 120,  82, 255,  82, 294,  82, 134, 255,  31], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([280, 319, 319, 100], device='cuda:0'), tensor([ 93,  32, 201,  11,  78, 175,  71, 121, 436], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([146, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6530, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3634, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0163, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [012][00050/00055]	Time 0.65 (0.67)	Loss 1.02 (0.90)
		cls_loss 0.65 (0.58)	reg_loss 0.36 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([379, 430, 309,  50], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([146], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3320, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2032, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5352, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357, 398, 357], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([256, 302, 256], device='cuda:0'), tensor([62, 10], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4560, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2584, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7144, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([127, 142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0'), tensor([ 91, 305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,
         91], device='cuda:0'), tensor([436,  10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,
         10, 436,  10, 315], device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87],
       device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([ 93, 283, 283, 283, 225, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3600, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9364, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 312, 334,  15, 436,  15], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([436, 316, 433, 316], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([339, 402, 384, 215], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([ 36, 256, 256, 325, 354, 404,  47, 116,  47, 256, 388, 109, 116],
       device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3389, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1912, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5301, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 12 finished with lr=0.00009883


[Train]: Epoch 13 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408,  93], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([ 93,  81, 319, 408, 127, 142], device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([100, 121,  29, 453, 249, 356,  11,  44, 351, 121, 351, 127, 351],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3931, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2402, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6333, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50], device='cuda:0'), tensor([284,  90,  80], device='cuda:0'), tensor([242, 431, 100, 294], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181],
       device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6564, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4501, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1065, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 138, 108], device='cuda:0'), tensor([385, 205], device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3923, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2210, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6133, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 383], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162,
         93, 436], device='cuda:0'), tensor([294, 137, 294, 229, 434, 401,  93, 431, 436, 385, 220,  50, 431, 385,
        329, 294, 431], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 30,  50, 201, 451, 201, 280, 302, 402,  12, 302], device='cuda:0'), tensor([166, 130, 378, 166, 385, 378, 388, 302,  80, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6810, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3878, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0687, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295], device='cuda:0'), tensor([280, 305, 345, 201, 305, 305, 394, 201, 305, 302, 305, 217, 305, 402,
        305, 149, 302,  72], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([417], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([268,  37, 268, 348], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5429, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2820, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37,
        331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37],
       device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87, 279,
        437, 150, 294, 437, 108, 219, 432], device='cuda:0'), tensor([441, 301,  43, 351, 197,  37, 120], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([217, 215, 215, 215,  18, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7234, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3834, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1068, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([315,  93, 244, 432], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3333, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2215, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5548, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([320, 404, 447, 217,  80, 100], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([ 80, 436, 436,  80, 436, 436,  80,  80, 121, 237, 388, 311, 354, 159,
        354], device='cuda:0'), tensor([238, 408, 408, 181, 181, 205, 436], device='cuda:0'), tensor([268], device='cuda:0'), tensor([205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([50], device='cuda:0'), tensor([399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4746, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2544, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7290, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([ 93,  90, 248], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([215, 108, 348, 354], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75], device='cuda:0'), tensor([ 23, 408, 436, 436, 408, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4049, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2027, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6076, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 430, 316], device='cuda:0'), tensor([142, 224, 279, 136, 121, 224, 451, 309], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([ 93,  19, 389,  47, 200,  49,  49, 138, 194, 388, 100,  30,  47, 370],
       device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5965, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3295, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9260, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268,  85], device='cuda:0'), tensor([315], device='cuda:0'), tensor([283, 436], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195, 325],
       device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([215,  83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436,
        282, 226, 279, 226, 279, 197,  10,  93,  10,  87, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4877, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3678, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8556, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [013][00010/00055]	Time 0.74 (0.74)	Loss 0.86 (0.86)
		cls_loss 0.49 (0.49)	reg_loss 0.37 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([98], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([294, 399, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3365, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5574, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105,  31], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([269, 301, 436], device='cuda:0'), tensor([100], device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345], device='cuda:0'), tensor([226, 383, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4477, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2849, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7327, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([432, 354], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305],
       device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8, 395, 205, 326,
        395,  85, 417, 159,  31, 121], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6085, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3370, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9455, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 394], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([82], device='cuda:0'), tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166, 294],
       device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([116, 124, 436, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4794, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7693, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([ 63,  80, 351, 121, 302], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([ 37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,
         50, 157,  90, 157,  37], device='cuda:0'), tensor([385, 441, 301, 385, 399, 441, 301], device='cuda:0'), tensor([332, 437,  95,  83, 286, 407, 437,  21, 168, 100,  21, 437,  21, 329,
        292,  21, 437,  21,  42,  21, 237, 443,  21, 437, 407],
       device='cuda:0'), tensor([404, 138, 100,   9, 404, 330,  57,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7147, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4200, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1347, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([116, 412, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0'), tensor([191, 108], device='cuda:0'), tensor([215, 305, 298, 292,  73, 399,  49, 440], device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([9], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4565, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2389, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6954, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 11, 121,  11, 197,  44, 385, 441, 385, 441,  93,  93, 385, 121],
       device='cuda:0'), tensor([ 96,  96, 226,  83, 439], device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([ 15, 121, 312, 334,  15], device='cuda:0'), tensor([451, 436,  15, 294,  15], device='cuda:0'), tensor([88], device='cuda:0'), tensor([270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,  82,
        313, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4453, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2791, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7244, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([ 14, 316], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415], device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415],
       device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([100,  96,  71], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5339, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3412, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8752, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([155, 131, 191,   9, 385,  71, 314, 105, 407, 385, 436],
       device='cuda:0'), tensor([232, 116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362, 325, 294,
        294, 116, 404], device='cuda:0'), tensor([  9, 181, 382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 315], device='cuda:0'), tensor([ 16, 436,  16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49,
        411], device='cuda:0'), tensor([451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8999, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4909, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3908, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([409, 220, 357, 431, 294, 357, 431, 447, 357, 431, 294],
       device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302], device='cuda:0'), tensor([398, 354, 398, 354,  71, 376, 398, 354, 398, 256, 256, 398, 376],
       device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4913, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3357, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8270, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [013][00020/00055]	Time 0.66 (0.70)	Loss 0.83 (0.84)
		cls_loss 0.49 (0.49)	reg_loss 0.34 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 355, 116, 146], device='cuda:0'), tensor([137, 137, 256], device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301, 119, 430, 336,  93], device='cuda:0'), tensor([255], device='cuda:0'), tensor([392,  47, 392, 436, 392, 404, 385], device='cuda:0'), tensor([65], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3830, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2015, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5845, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121], device='cuda:0'), tensor([406, 140, 451, 300], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([58], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2068, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5550, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46, 120, 120,  46, 197, 283,  46],
       device='cuda:0'), tensor([108, 431, 436, 220, 329, 220, 165, 220, 220, 137,  93],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([301, 131, 121, 228,  71,  42, 201, 257, 430,   0], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([295, 295, 295, 195, 295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6396, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3270, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9666, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([408], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 62, 301,  82, 294, 298, 441, 298], device='cuda:0'), tensor([187], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1409, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3776, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([369, 369, 369, 369, 369, 369, 174, 256, 174], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([181, 451], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([215], device='cuda:0'), tensor([436,  47], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4419, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2792, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7211, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 332,  93, 436, 215,  83], device='cuda:0'), tensor([ 50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([47], device='cuda:0'), tensor([219], device='cuda:0'), tensor([ 82, 213, 285, 405, 294,  21, 302], device='cuda:0'), tensor([267,  93, 267,  93, 267,  93], device='cuda:0'), tensor([225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3191, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5063, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 189, 189, 313], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63],
       device='cuda:0'), tensor([ 31, 415,  63, 279, 121, 411, 401], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254, 254],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([295, 356], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5800, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3265, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9065, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([288, 249, 430, 313, 165, 205, 156, 121, 156,  63], device='cuda:0'), tensor([181, 181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([80, 80], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5449, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3032, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8481, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([ 47, 399, 108, 425,  22, 258, 296, 408, 110], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([201], device='cuda:0'), tensor([408], device='cuda:0'), tensor([301, 439, 436, 439], device='cuda:0'), tensor([217,  93, 201,  93,  71,  93,  96,  22, 197, 351, 226, 351, 226,  93,
        351, 390, 420, 385, 122,  21], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4795, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7468, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 108, 408, 294,   8], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([415, 429], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([ 36,  36,  73, 116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116],
       device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5415, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2854, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8269, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [013][00030/00055]	Time 0.66 (0.69)	Loss 0.83 (0.84)
		cls_loss 0.54 (0.51)	reg_loss 0.29 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302,
        441], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([447, 438, 121, 215,  76,  37, 399, 113,  37,  37, 150],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5543, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4997, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0540, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([100,  88, 100,  99,  88, 100,  88,  88, 100,  88, 100,  88],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([424, 166,  82, 196, 286, 231, 385, 286, 385, 437, 166, 286, 238],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4299, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6971, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 146, 268, 354, 268, 354, 268, 146, 268, 146, 268, 146, 268, 268],
       device='cuda:0'), tensor([100, 201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285, 213, 430,
        183, 388, 338, 281, 116, 138], device='cuda:0'), tensor([ 93, 282, 294, 264, 292, 399, 142,  80], device='cuda:0'), tensor([143, 302, 180,  16], device='cuda:0'), tensor([ 80,  88,  91,  88, 354,  88, 209], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([436,   9,  98,  72, 436, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7590, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4032, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1622, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([385, 431, 315, 213, 216, 436,  82, 103, 385, 385, 103,   8, 365, 103,
        302, 103, 436], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93],
       device='cuda:0'), tensor([121, 108, 392, 385, 281, 392, 258], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3912, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1278, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 402, 158], device='cuda:0'), tensor([ 37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,  44, 200, 258,
        226, 411, 226, 453], device='cuda:0'), tensor([215, 313,  96, 294,  96,  70,  96, 354, 215, 354, 121],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([146], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([133, 399, 302,   9], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4055, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2192, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6247, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146,  71, 390, 401], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([183, 325, 415, 124, 124,  51,   8, 385,  47, 109, 195,  47, 256],
       device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411, 286, 411, 286,  90], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4965, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8256, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([237,  83, 113, 301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453,
        424, 113, 150, 292, 415,  22], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([230, 142,  11, 441, 451], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([256], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385, 166], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6064, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3377, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9441, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([325, 100, 443, 281, 325, 124, 289, 100, 116, 296, 355, 182],
       device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([113, 430], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116], device='cuda:0'), tensor([ 93, 128,  93, 215, 141, 294, 399, 135, 307, 400], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6344, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3756, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0100, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([436,  49, 159, 224, 121,  70, 224,  70,  22,  52, 257, 234,  63],
       device='cuda:0'), tensor([296, 439], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
       device='cuda:0'), tensor([441, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4058, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2548, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6605, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437,
        310, 399, 415, 399, 302], device='cuda:0'), tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([437, 286], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4169, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2239, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6408, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [013][00040/00055]	Time 0.66 (0.68)	Loss 0.64 (0.79)
		cls_loss 0.42 (0.48)	reg_loss 0.22 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438,
        213], device='cuda:0'), tensor([319, 319, 121, 224, 147], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([255,  31,  63,  82, 255,  82, 165,  82, 165, 385, 107, 255],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([264, 218, 264, 433, 121, 264, 415, 417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5934, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3176, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9111, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([357, 398, 412, 357, 412, 357, 398, 357, 412], device='cuda:0'), tensor([306, 392, 392, 392], device='cuda:0'), tensor([319, 351, 319, 316, 441], device='cuda:0'), tensor([417, 221], device='cuda:0'), tensor([436, 280, 193, 163, 304, 437, 436, 279, 296, 302, 422],
       device='cuda:0'), tensor([31], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3491, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5427, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 121, 305], device='cuda:0'), tensor([197, 197, 197, 334, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([268], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([306, 306, 268, 306, 268, 268, 306, 268, 306, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3958, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2174, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6132, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([93], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([371, 201,  90, 371], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3440, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2311, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5752, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313],
       device='cuda:0'), tensor([ 63, 177, 380, 209,  88, 354,  88,  80], device='cuda:0'), tensor([256, 385, 354,  47, 354, 256, 116, 116, 116, 116, 325, 116, 147, 105,
        325,  51], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([89], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5750, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3113, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8863, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([398], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([2, 2, 2, 2, 2], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4056, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2683, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([163], device='cuda:0'), tensor([  9,  83,  93, 104, 294,  83, 279, 107, 181, 107], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3353, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3132, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6485, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 142, 436, 142], device='cuda:0'), tensor([408], device='cuda:0'), tensor([187,  87], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([351, 197, 351, 197, 351, 121, 394, 443, 394,  70], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2433, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1419, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3853, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([100], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([394, 453, 100,  93,  86, 413, 384, 177, 309,  13, 437, 413],
       device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100], device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8447, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4666, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3112, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 452, 437, 300], device='cuda:0'), tensor([ 63, 234, 215], device='cuda:0'), tensor([284], device='cuda:0'), tensor([406], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([436, 294, 294, 436, 294], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2887, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1702, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4589, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [013][00050/00055]	Time 0.66 (0.67)	Loss 0.46 (0.72)
		cls_loss 0.29 (0.45)	reg_loss 0.17 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([392,   5, 146, 182, 392, 146], device='cuda:0'), tensor([14, 30], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([244], device='cuda:0'), tensor([447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3531, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2071, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32, 121,  37,  43, 121, 124,  44, 197, 121,  11, 121, 215],
       device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([100, 100, 294, 429, 354, 121], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([406,  11, 441], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4652, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3001, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7653, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294, 289],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([181,  30, 181, 181,   9], device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([37], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4077, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3165, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7242, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([441,  44,  22, 384, 436, 384, 438, 121, 113, 438, 385],
       device='cuda:0'), tensor([100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354,
        100, 392, 129, 100], device='cuda:0'), tensor([436, 316,  93, 191, 436,  44, 451, 221, 284, 436, 394],
       device='cuda:0'), tensor([399, 121, 356, 279, 273, 453, 196, 397, 279, 100, 296, 415, 100, 121],
       device='cuda:0'), tensor([21], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([ 16,  88,  73,  88, 298,  16, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6426, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4040, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0466, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 13 finished with lr=0.00009785


[Train]: Epoch 14 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([350, 204, 143, 302], device='cuda:0'), tensor([286, 411, 286,  90, 312,  37,  82,  90,  37, 445, 286,  90, 316,  22,
        294,  90, 411,  90, 316, 286, 121], device='cuda:0'), tensor([216, 436,  82, 103, 385, 385, 103,   8, 365, 103, 302, 103, 436, 103],
       device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([ 50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121, 384],
       device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 93, 283], device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6526, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3668, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0194, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([215], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([ 96,  96, 121, 348,  96, 191,  96,  96, 215, 313,  96, 294,  96,  70,
         96], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3346, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2188, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5534, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  64,  64,  64,  64, 305,  64], device='cuda:0'), tensor([ 93, 437, 121, 280,  93,  12, 121, 432, 408, 286, 283, 280, 279, 121,
        345, 121, 437,  93, 437, 294, 345], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([225], device='cuda:0'), tensor([268], device='cuda:0'), tensor([213, 436, 224, 436, 213,  19, 436, 384,  19, 182, 121, 430, 436,  80,
         47, 436, 325], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5670, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9272, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([ 89, 319, 406], device='cuda:0'), tensor([137,  22,  52, 137, 385,  50, 137], device='cuda:0'), tensor([305, 315,  73, 401, 441, 451, 305, 451, 121, 315, 451],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 108],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3569, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8896, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  71, 362], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([15], device='cuda:0'), tensor([294,  65, 124, 144,  23,  82,  65,  82], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3664, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2221, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5885, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  44,  11, 436], device='cuda:0'), tensor([ 93, 396,  50,  50, 399], device='cuda:0'), tensor([301,  91, 294, 137, 294, 229, 434, 401,  93, 431], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([268, 447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5,
        392, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392,
        268, 268, 268, 268, 268], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 439],
       device='cuda:0'), tensor([ 59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7202, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5132, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2334, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 63, 234, 215,  50,  50, 217], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([47], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3211, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2083, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5294, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([148], device='cuda:0'), tensor([316, 411,  82, 411, 207, 284,  90, 197, 215,  63, 385,  82,  14],
       device='cuda:0'), tensor([ 44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,
         37, 424,  37, 411, 411], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4800, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3450, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8251, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  32, 453,  31, 300, 436,  31, 436, 200, 208, 121, 264, 336, 436],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([430, 371, 424, 371, 371, 420, 420], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256,
        116, 195, 325], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5339, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8756, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([22, 50], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285, 405, 294,
         21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3153, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2223, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5375, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([187], device='cuda:0'), tensor([80, 80], device='cuda:0'), tensor([163], device='cuda:0'), tensor([439, 133, 121, 187, 305], device='cuda:0'), tensor([113, 430], device='cuda:0'), tensor([247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417, 411, 417, 417,
        417, 314, 417, 417, 417, 436, 417, 150,  50], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5264, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8136, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [014][00010/00055]	Time 0.76 (0.76)	Loss 0.81 (0.81)
		cls_loss 0.53 (0.53)	reg_loss 0.29 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  5, 146, 182, 392, 146, 146], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([315], device='cuda:0'), tensor([362, 105, 362], device='cuda:0'), tensor([256], device='cuda:0'), tensor([354, 398, 376,  71, 354, 398], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2498, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1391, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3889, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 384, 215, 215], device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345, 167], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436,
        305, 407, 280], device='cuda:0'), tensor([219, 448], device='cuda:0'), tensor([283, 436], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([116, 116, 306, 306, 116, 306, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6309, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3809, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0118, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80, 443,  93, 166], device='cuda:0'), tensor([ 88, 298,  16, 298,  73,  71, 136], device='cuda:0'), tensor([345, 215], device='cuda:0'), tensor([451, 142, 142], device='cuda:0'), tensor([309, 429, 451, 215, 177, 294, 215, 150,  71,  71], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([441, 383, 441,  63], device='cuda:0'), tensor([ 11,  90,  11, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4454, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2750, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7204, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 80, 142, 182, 359,  44, 359, 201, 359, 451], device='cuda:0'), tensor([ 88, 100,  88, 100, 209], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([121, 415, 345, 309, 279, 309, 299,  32,  93, 121, 120],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 71, 302, 218, 305], device='cuda:0'), tensor([256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3447, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2122, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5569, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 256, 256, 256], device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 37, 201, 345, 359, 359, 436, 359, 436, 436], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([399], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([197, 121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3711, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2413, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6125, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([240, 436, 240], device='cuda:0'), tensor([ 37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37,
        217, 329,  37, 282, 121,  37, 447, 385], device='cuda:0'), tensor([65], device='cuda:0'), tensor([313,  83, 436, 280, 193, 163, 304, 437, 436, 279, 296],
       device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150,  50], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7700, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4696, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2396, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181,   9, 155, 121,  43,  17, 147], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([408], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([405, 302, 405], device='cuda:0'), tensor([ 47, 260,  44], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0')]
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats
feats torch.Size([2705, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([5196, 1536])
yes3 {'cls_loss': tensor(0.4018, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2445, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([249, 294, 294, 205,  15,  71, 436], device='cuda:0'), tensor([ 44, 304, 217, 201,  88, 430,  88,  72,  88], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([267,  93, 267,  93], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338,
        294, 116], device='cuda:0'), tensor([ 22, 384, 436, 384, 438, 121, 113, 438, 385,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6696, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0771, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158, 120, 181, 158, 158], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([224, 246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([131,  22, 296, 108], device='cuda:0'), tensor([277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,
         50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6438, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4158, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0596, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([420, 451, 420,  95], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275], device='cuda:0'), tensor([408], device='cuda:0'), tensor([93], device='cuda:0'), tensor([436], device='cuda:0'), tensor([107, 107, 453, 107, 107, 107], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2925, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4658, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [014][00020/00055]	Time 0.65 (0.71)	Loss 0.47 (0.64)
		cls_loss 0.29 (0.41)	reg_loss 0.17 (0.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,
         50, 436, 221, 121], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([319, 351, 319, 316, 441], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([451, 121, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4462, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3202, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7664, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 392, 345], device='cuda:0'), tensor([296, 402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181],
       device='cuda:0'), tensor([116, 388, 232, 116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362],
       device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([ 47,  98, 447,  47, 213,  80,  80, 121,   8, 217,  47,  55, 453,  47,
        294, 294, 385], device='cuda:0'), tensor([406], device='cuda:0'), tensor([255], device='cuda:0'), tensor([245, 413, 245, 413, 319, 394, 453, 100,  93,  86], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5880, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3707, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9587, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([330,  80,  80, 338,  80,  47, 354, 443,  88], device='cuda:0'), tensor([316, 433, 316, 100], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([268, 430, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3938, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2391, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6330, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([197, 283,  46, 108, 209, 338, 401], device='cuda:0'), tensor([436, 443,  82, 436, 124, 223, 196, 221, 196, 316, 286, 310,  50,  50,
        310,  50,  50], device='cuda:0')]
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([2231, 1536])
yes3 {'cls_loss': tensor(0.6903, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4646, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1548, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438,
        213], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([100], device='cuda:0'), tensor([439], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2670, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4481, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([408], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([264, 292, 399, 142,  80, 142,  80], device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236, 279],
       device='cuda:0'), tensor([405, 121, 415, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3142, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2007, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5149, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357, 357], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 22, 254, 224, 399], device='cuda:0'), tensor([107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16],
       device='cuda:0'), tensor([398, 435, 398], device='cuda:0'), tensor([247, 436, 230, 142,  11, 441], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2741, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7656, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 105,  31], device='cuda:0'), tensor([58], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([441, 359, 203, 359, 279, 302, 359, 294, 359, 313, 359],
       device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4110, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2503, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6613, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 100], device='cuda:0'), tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([430, 315,  93, 244, 432], device='cuda:0'), tensor([256], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([408, 399, 408], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4171, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6886, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146,  83, 294], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([295,  82, 295], device='cuda:0'), tensor([395, 326, 395, 395,   8, 395, 205, 326, 395,  85, 417, 159,  31, 121,
        114, 326, 224], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([423, 423, 333, 423], device='cuda:0'), tensor([356, 279,  96, 100, 294, 351, 294,  62,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4913, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2826, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7739, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [014][00030/00055]	Time 0.66 (0.69)	Loss 0.77 (0.68)
		cls_loss 0.49 (0.44)	reg_loss 0.28 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([269], device='cuda:0'), tensor([181, 436, 181,  32, 238, 408, 408, 181, 181, 205, 436],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([256], device='cuda:0'), tensor([268], device='cuda:0'), tensor([181, 220, 181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220,
        137, 357, 431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294,
        357, 431, 447, 357, 431], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4982, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3241, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8223, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 408, 127, 142, 127, 337], device='cuda:0'), tensor([439], device='cuda:0'), tensor([ 85, 408, 408, 249, 302, 121, 294, 121, 453,  71, 408, 380, 436,  71],
       device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([437, 332, 437,  95,  83, 286, 407, 437,  21, 168, 100,  21, 437,  21,
        329, 292,  21, 437,  21,  42,  21, 237, 443,  21, 437],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([441, 301, 433, 294, 385, 385, 217, 385, 121, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6405, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3719, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0124, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([ 93, 270, 328,  59, 436, 224,  71, 385,  62, 451,  62],
       device='cuda:0'), tensor([453,  36, 453, 392,  51, 392, 100, 201,  47, 116,  47, 303, 363, 281,
        183], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 44, 223, 223, 223, 223, 223], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6921, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4031, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0951, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279,  90, 279,  90], device='cuda:0'), tensor([9], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,  82,
        313], device='cuda:0'), tensor([  4, 358, 294], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4194, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7400, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([90], device='cuda:0'), tensor([ 11,  96, 105, 226,  71, 338,  16, 197,  11,  71], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 91,  88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,
         88,  91,  44,  88,  91, 247], device='cuda:0'), tensor([89], device='cuda:0'), tensor([269, 269, 433, 323, 323, 121], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5172, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2696, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7869, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([121,  70, 224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([ 80, 142, 121,  80, 142, 121, 436, 121, 398], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4117, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2552, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6670, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([251, 251], device='cuda:0'), tensor([439, 439, 257,   9], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([209, 225], device='cuda:0'), tensor([105,  95, 273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351,
        217, 351, 217, 305,  32, 305], device='cuda:0'), tensor([411, 268, 146, 411, 268, 146, 411, 268,  73, 268, 411, 268, 146],
       device='cuda:0'), tensor([ 15, 294,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4003, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2581, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6583, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146], device='cuda:0'), tensor([ 71, 424, 269,  94, 269, 269, 203, 332, 269, 407, 121, 407, 437, 286],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([436, 120], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209,
        302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5512, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3368, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8880, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([120, 249,  31, 345,  96,  46,  72, 415, 108], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37,  37, 257], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([363, 305, 426, 426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426,
        252, 367], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6366, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3765, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0131, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([351, 399, 351, 245, 351, 142, 351, 142, 279, 201, 142,  11],
       device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([232, 116, 116, 138, 294, 362, 362], device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5372, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3329, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8702, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [014][00040/00055]	Time 0.65 (0.68)	Loss 0.87 (0.73)
		cls_loss 0.54 (0.46)	reg_loss 0.33 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([357, 296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9,
        298, 279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279, 197],
       device='cuda:0'), tensor([ 90, 279,  90, 258,  90,  11, 279,  11,  11, 279,  11, 121, 201,  93,
        279, 283, 279, 121, 283,  98, 283], device='cuda:0'), tensor([9], device='cuda:0'), tensor([341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50],
       device='cuda:0'), tensor([ 73, 105, 283, 280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150,
        394, 150, 437, 425, 150, 437, 150, 397], device='cuda:0'), tensor([ 71,  81, 306, 306, 306, 268, 306, 268, 268, 306, 268],
       device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5227, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2782, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([116, 116, 116, 116, 404, 138, 100], device='cuda:0'), tensor([ 82, 255], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402, 223,  50], device='cuda:0'), tensor([283, 304, 280], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4398, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2548, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6946, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([ 11,  44, 351, 121, 351, 127, 351, 351, 351, 351, 231],
       device='cuda:0'), tensor([451], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([ 31,  50, 262,  31,  50, 365, 215, 305, 298, 292,  73, 399,  49],
       device='cuda:0'), tensor([315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181,
        315, 181, 315, 181, 382,  96], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4991, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3474, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 214,  11, 226, 351, 197, 351, 197, 351, 121, 394],
       device='cuda:0'), tensor([379, 430, 309], device='cuda:0'), tensor([319], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 93, 295, 351, 325, 295, 351, 351, 295], device='cuda:0'), tensor([298,  71, 247,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3603, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1882, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5486, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 294, 345], device='cuda:0'), tensor([451, 399, 411, 439, 296, 411, 280, 411, 405, 411], device='cuda:0'), tensor([ 87, 140, 316, 424,  83, 402, 298], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([130, 100, 284, 197, 214, 294, 391, 120], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100,
        392, 100, 392, 100, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7393, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3905, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([248, 340, 236], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([285,  80, 121, 166, 182, 385], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([100, 116, 232, 116, 399,  80], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2398, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1431, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3828, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([4], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([366], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4212, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2586, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6797, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([ 81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([100, 383, 109, 388, 330,   8, 383, 385, 281, 183, 325, 415, 124, 124,
         51,   8, 385,  47, 109, 195,  47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4910, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3923, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8833, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443],
       device='cuda:0'), tensor([31], device='cuda:0'), tensor([284], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([319, 319], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([415, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2538, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6496, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 43, 351, 197,  37, 120,  37,  43,  37,  37, 436,  96, 159, 441],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([333, 354, 100, 298, 268, 146], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([440, 441, 279, 441], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4177, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6690, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [014][00050/00055]	Time 0.66 (0.68)	Loss 0.67 (0.72)
		cls_loss 0.42 (0.45)	reg_loss 0.25 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([209, 215, 108], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436], device='cuda:0'), tensor([98], device='cuda:0'), tensor([330, 249, 443, 105,  16, 302, 124, 443, 377,  93, 443],
       device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3756, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2181, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5936, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([295, 295, 295, 195, 295, 295], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([436, 105, 436,  83, 181, 415,  32, 181, 436, 447, 436],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([256, 116, 116, 302, 116, 388, 338, 362, 338, 256], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4314, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2649, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302,
        441], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([256], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([173, 125, 341], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2140, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5285, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([21], device='cuda:0'), tensor([244], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([408], device='cuda:0'), tensor([218,  22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270, 386,
          9, 386, 184, 195], device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4958, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2421, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7380, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 14 finished with lr=0.00009659


[Train]: Epoch 15 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([384,  81, 384, 100, 384, 385], device='cuda:0'), tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([176, 176, 176,  46, 120, 120,  46, 197, 283,  46, 108, 209],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4494, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2892, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7386, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91],
       device='cuda:0'), tensor([156, 279, 451,  50], device='cuda:0'), tensor([256, 302, 256], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3518, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2570, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6088, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([268, 268, 268, 268], device='cuda:0'), tensor([215], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([215,  50,  50, 217, 436, 294, 215, 415], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2806, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1982, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4787, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0'), tensor([283, 283,  87, 283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280],
       device='cuda:0'), tensor([181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4658, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8499, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 80, 116, 404, 116,  47, 116], device='cuda:0'), tensor([399, 121, 294], device='cuda:0'), tensor([304, 217, 201,  88, 430,  88,  72,  88, 436,  88,  72,  88,  91, 411,
        209,  88], device='cuda:0'), tensor([93], device='cuda:0'), tensor([116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([451], device='cuda:0'), tensor([319, 408, 127, 142, 127], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3284, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2412, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5696, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 447, 402,  50, 181,  30, 181], device='cuda:0'), tensor([392, 436, 392, 404, 385], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0'), tensor([31], device='cuda:0'), tensor([309,  50], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2542, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1811, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4353, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([312, 121,  50,  10], device='cuda:0'), tensor([ 88, 229], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([255], device='cuda:0'), tensor([325, 100, 443, 281, 325, 124, 289, 100, 116, 296, 355, 182],
       device='cuda:0'), tensor([436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436, 164,
        282, 195], device='cuda:0'), tensor([100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3670, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2375, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6045, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([371, 201,  90], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([89], device='cuda:0'), tensor([136, 423, 305], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 68,  47, 131, 303,  47, 447,  47, 100, 453, 388, 257, 370,  80],
       device='cuda:0'), tensor([120, 201, 430, 201, 316, 316, 316, 305, 366], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4322, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2927, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([406], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([215], device='cuda:0'), tensor([137, 294, 229, 434, 401,  93, 431, 436, 385, 220,  50, 431, 385, 329,
        294, 431], device='cuda:0'), tensor([240], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2081, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5055, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215,
        226], device='cuda:0'), tensor([215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294, 399,
        279], device='cuda:0'), tensor([181, 181, 181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([313, 172, 441, 438, 441, 138, 415, 270, 441, 247, 219, 138, 438, 436,
         85, 342, 286], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([359, 313, 359,  87,  96, 359, 415, 138,  50, 294, 302],
       device='cuda:0'), tensor([215, 345, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6087, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4230, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0318, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315, 244], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215, 409],
       device='cuda:0'), tensor([142, 142, 280], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116, 195, 325], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2910, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6465, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [015][00010/00055]	Time 0.75 (0.75)	Loss 0.65 (0.65)
		cls_loss 0.36 (0.36)	reg_loss 0.29 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([399, 385, 399, 437,  50, 166, 166, 276, 437], device='cuda:0'), tensor([232, 388, 232, 388, 232, 116], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([88, 16, 88, 73], device='cuda:0'), tensor([ 62, 301,  82, 294, 298, 441], device='cuda:0'), tensor([408], device='cuda:0'), tensor([424, 225, 215,  91,  63, 113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4306, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2492, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6798, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([159, 354, 423,  83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257,
        436], device='cuda:0'), tensor([191], device='cuda:0'), tensor([436, 305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,
         21,  21, 224], device='cuda:0'), tensor([356, 245,  67,  96,  22, 276, 453, 416, 424], device='cuda:0'), tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6956, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3975, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0931, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([176, 345, 399,  90, 399, 230, 277, 305], device='cuda:0'), tensor([225, 108, 155, 247], device='cuda:0'), tensor([451,  62, 451, 264, 233, 385, 436, 415, 264, 218, 264, 433],
       device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([295, 351,  63,  80], device='cuda:0'), tensor([447,  44, 383, 294, 224, 201, 121, 447, 438, 121, 215,  76,  37],
       device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385, 415],
       device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5621, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3134, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8755, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223, 305, 436],
       device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0'), tensor([182, 392, 146, 146, 182, 392], device='cuda:0'), tensor([100, 121, 388, 359, 338,  30, 338, 338, 354, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4626, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2822, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7448, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408, 408], device='cuda:0'), tensor([148], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([225], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([146,  71, 390, 401], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2229, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1542, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3771, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233],
       device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([255], device='cuda:0'), tensor([146], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([327,  52,  14, 436], device='cuda:0'), tensor([ 96, 294,  96,  70,  96, 354, 215, 354, 121,  11, 390,  11],
       device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3539, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2068, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5607, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([103, 436,  48, 365, 161, 121, 436, 103], device='cuda:0'), tensor([ 58, 399], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80,
        268], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326, 395,  85, 417], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5738, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3550, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9288, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([316, 436, 316, 433], device='cuda:0'), tensor([415, 441,  49, 408,  22,  50], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217],
       device='cuda:0'), tensor([316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3472, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2975, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6447, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  4, 134,   4, 358], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([420, 436, 407, 410, 280, 270], device='cuda:0'), tensor([ 63, 436,  80], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([430,  44,  11], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1752, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4708, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([325,  47, 195], device='cuda:0'), tensor([348, 268], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([131, 119, 131, 121], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([439, 439, 257,   9, 439], device='cuda:0'), tensor([ 47,  80, 404, 116,  88, 189, 388, 404, 116, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3190, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2086, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5276, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [015][00020/00055]	Time 0.65 (0.70)	Loss 0.53 (0.59)
		cls_loss 0.32 (0.34)	reg_loss 0.21 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294, 289],
       device='cuda:0'), tensor([ 80, 100, 100,  80, 100,  80, 166,  71, 354], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63],
       device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([413, 245, 413, 319, 394, 453, 100,  93,  86, 413, 384],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7782, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5186, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2968, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 354, 438, 268, 256, 268, 256, 268, 396, 138,  70, 398, 396, 268,
        268, 121, 268, 158, 138, 214,  44, 340, 354, 256, 316, 256, 441, 268,
        268, 138, 302,  76], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([295, 295, 436, 295], device='cuda:0'), tensor([441], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6543, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4236, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0779, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([195, 415, 296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([296], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([354, 385, 354, 100, 121, 404,  93, 257, 385, 453, 110],
       device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,
         50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6195, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4073, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0268, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269, 437],
       device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([121,  37, 280, 262, 121, 262,  37,  31], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451, 451, 451], device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4999, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3394, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8392, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([181, 181, 205, 436, 345], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399],
       device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([246, 436,  82,   0], device='cuda:0'), tensor([433, 323, 323, 121, 269], device='cuda:0'), tensor([268, 146, 430, 411, 268, 105, 268, 280, 268, 411, 268, 280, 268,  72,
        329, 411,  47,  78, 411, 138,  78, 411, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5124, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3109, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8233, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 351, 390, 420, 385, 122,  21, 305,  21,  30,  21, 286,  21, 286,
        105,  95, 273, 135], device='cuda:0'), tensor([ 11, 121, 201,  93, 279, 283, 279, 121, 283,  98, 283, 301, 283, 329,
        301, 283], device='cuda:0'), tensor([436, 408, 108, 408, 294], device='cuda:0'), tensor([420, 405, 168, 405,  82, 213, 285, 405, 294,  21], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([408], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([262, 100, 262, 100, 430, 384, 262, 339,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6019, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3648, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9667, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([354], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 93, 283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4288, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([267,  93, 267,  93], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([408, 399, 408,  50], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2651, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2492, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5143, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 256, 256], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([399], device='cuda:0'), tensor([121, 442, 451, 279, 442,  93, 345, 437, 115, 437, 415, 436, 313, 442,
        399], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394,  70],
       device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3048, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6917, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([417, 221], device='cuda:0'), tensor([302, 248,  71, 224], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([201, 345, 359, 359, 436, 359, 436, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3878, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2467, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6345, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [015][00030/00055]	Time 0.66 (0.69)	Loss 0.63 (0.60)
		cls_loss 0.39 (0.35)	reg_loss 0.25 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 402, 158], device='cuda:0'), tensor([ 22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247,
        270, 394, 279, 421, 150, 302, 415, 184, 302, 296], device='cuda:0'), tensor([451, 451, 436,  15, 294], device='cuda:0'), tensor([ 22, 121], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([269, 301, 436], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5645, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3577, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9222, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50, 365, 215, 305, 298, 292,  73, 399,  49, 440], device='cuda:0'), tensor([451, 121, 305], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([231, 196, 280, 280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302,
        305, 217, 305, 402], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([110, 197, 316], device='cuda:0'), tensor([100,  96,  71,  30,  71], device='cuda:0'), tensor([338,  36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5557, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3268, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8824, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445, 286,
         90, 316,  22, 294,  90, 411,  90, 316], device='cuda:0'), tensor([305, 256, 256, 256, 256], device='cuda:0'), tensor([ 61, 253, 313,  14], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6327, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4778, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1106, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 52, 436,  52,  44, 302,  52, 131,  40, 121,  75], device='cuda:0'), tensor([376], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37,  37], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3433, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2357, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5790, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([402, 225, 441, 285, 108, 441], device='cuda:0'), tensor([408], device='cuda:0'), tensor([174, 256, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([301, 439, 436, 439, 439, 436, 439], device='cuda:0'), tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100,
        392, 100, 392, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4124, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2417, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6541, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315, 436, 315, 108,   8,   8, 294,   8], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([ 10, 436,  10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175,
        436,  10, 436,  10, 315], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([220, 181,  80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181,
        220, 181, 217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357,
        431, 220, 409, 220, 357, 431, 294, 357], device='cuda:0'), tensor([113], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6165, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4584, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0748, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314, 407,  85,
        314,  95], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4758, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3217, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7975, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([139, 115, 121], device='cuda:0'), tensor([ 22, 452,  90, 159, 279,  90, 121,  22, 254, 254, 254],
       device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47], device='cuda:0'), tensor([220, 292,  49], device='cuda:0'), tensor([181,   9, 181, 382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181,
        315, 181, 315, 181], device='cuda:0'), tensor([385,  16, 385, 107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286,
        294,  71], device='cuda:0'), tensor([65], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5311, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3296, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8607, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([9], device='cuda:0'), tensor([ 87,  93, 120, 453,  44,  87, 436, 405, 100, 385, 436,  93, 291, 121,
        291, 121, 115, 436,  10, 357, 296], device='cuda:0'), tensor([315, 305, 315,  73, 401, 441, 451, 305, 451, 121, 315],
       device='cuda:0'), tensor([216, 408], device='cuda:0'), tensor([80], device='cuda:0'), tensor([47], device='cuda:0'), tensor([404, 330,  57,  93, 100, 100, 100, 131], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3830, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2128, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5958, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 436, 215,  83, 405], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([  7,   7,   7,   7,   7, 436, 247, 247, 100, 181,   9],
       device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127], device='cuda:0'), tensor([412, 357, 398, 412, 357, 412, 357, 398, 357], device='cuda:0'), tensor([268], device='cuda:0'), tensor([424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3280, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5559, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [015][00040/00055]	Time 0.45 (0.63)	Loss 0.56 (0.59)
		cls_loss 0.33 (0.35)	reg_loss 0.23 (0.24)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 384, 215, 215], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([430, 315,  93, 244, 432], device='cuda:0'), tensor([305], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([415, 163], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3575, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2338, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5913, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15, 121, 312, 334,  15], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425], device='cuda:0'), tensor([ 10, 436,  44, 108, 431, 436, 220, 329, 220, 165, 220],
       device='cuda:0'), tensor([100, 305, 305,  71, 390, 453,  93, 393, 100, 393, 385],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5377, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3087, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([244], device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 71,  71, 215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93],
       device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3266, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2705, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5971, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256], device='cuda:0'), tensor([142,  80, 114,  80], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352],
       device='cuda:0'), tensor([440, 441, 279, 441], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3656, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2816, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6472, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204], device='cuda:0'), tensor([438, 291, 438, 291, 438, 291, 396, 438, 291, 438, 385, 291, 336, 396,
        438, 310, 438, 294, 438, 436, 385, 438,  52, 438,  44, 396,  50, 108],
       device='cuda:0'), tensor([441, 301,  43, 351, 197], device='cuda:0'), tensor([107, 107, 107, 453, 107], device='cuda:0'), tensor([ 93, 127, 294, 394, 411], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5812, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3802, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9614, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([ 82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82,
        436, 124, 223, 196], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385],
       device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4336, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7988, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([443], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91],
       device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([305, 187, 305], device='cuda:0'), tensor([306, 268, 268, 306, 268, 306, 306, 306], device='cuda:0'), tensor([ 80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385, 166,  19,
        121, 137, 286, 434], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([98], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4044, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2931, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6975, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 89, 319, 406], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0'), tensor([183, 354, 254, 116, 415, 121,  88,   8, 354,   8, 430,   8, 325, 385,
        385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4250, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2712, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6962, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 443, 100, 120, 415,  15,  30], device='cuda:0'), tensor([256], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([93], device='cuda:0'), tensor([436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5124, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2886, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8011, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([116, 183, 325, 354,  47, 294, 302, 116, 256, 116, 116, 302, 116, 388,
        338], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([280, 302, 402,  12, 302, 345,  30, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3998, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2389, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6387, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [015][00050/00055]	Time 0.43 (0.59)	Loss 0.64 (0.60)
		cls_loss 0.40 (0.36)	reg_loss 0.24 (0.24)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 82,  14, 121,  14], device='cuda:0'), tensor([187], device='cuda:0'), tensor([280, 451], device='cuda:0'), tensor([100, 121,  29, 453, 249, 356,  11,  44, 351, 121, 351, 127, 351],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([294, 319, 319], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417,
        411, 417, 417, 417, 314, 417, 417, 417, 436, 417, 150],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4862, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3246, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8108, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([80, 88], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([366,  10], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100],
       device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([362], device='cuda:0'), tensor([451], device='cuda:0'), tensor([146,  83], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1560, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0941, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2501, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 221, 436, 411, 223, 345, 115, 436, 115, 436, 357, 436, 313],
       device='cuda:0'), tensor([ 37, 436,  37,  22,  22,  37,  49, 122,  37,  37, 217, 329,  37, 282,
        121,  37, 447, 385, 407], device='cuda:0'), tensor([ 12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437,
        294, 345, 294, 437], device='cuda:0'), tensor([320, 320, 404, 447, 217,  80], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([256], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5531, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3385, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8917, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 197, 197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([284], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([283], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4095, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6552, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 15 finished with lr=0.00009506


[Train]: Epoch 16 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 430, 316, 436], device='cuda:0'), tensor([295, 295, 294, 345], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([256], device='cuda:0'), tensor([246, 224, 246, 224, 316, 195,  50], device='cuda:0'), tensor([392, 100], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176], device='cuda:0'), tensor([ 47, 392, 436, 392,  47, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3147, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1895, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5042, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([392, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,  50, 268,
        268, 392, 268, 268, 268,   5, 392, 268, 268, 268, 268,   5, 392, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([138,  70, 256, 354, 268, 256, 268, 256, 268, 354, 138,  70, 398, 438,
        268, 268, 256, 138, 438, 256, 438, 354, 268, 268, 256, 268, 256, 268,
        438, 138, 398, 354, 268, 256, 438, 268, 138,  70, 256, 354, 438, 268,
        268, 256, 430, 438, 268, 256, 138,  70, 398, 441, 302],
       device='cuda:0'), tensor([269], device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([ 47, 260,  44], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8982, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5954, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4936, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([ 47, 330, 217,  47, 232, 281, 388, 392, 404,  47,  88,   9, 327, 325,
         63], device='cuda:0'), tensor([191], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([301, 215], device='cuda:0'), tensor([194, 415, 109, 325, 183,  47, 404], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191, 301], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4902, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3045, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7947, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 131,  22], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306, 306], device='cuda:0'), tensor([309,  50, 309, 279, 121, 309], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([436,  16, 408,  16, 108, 234, 294, 108, 408], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([224,  70,  22,  52, 257, 234,  63], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4058, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2286, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6345, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([ 49,  22, 270, 399, 279, 121, 383, 121, 399, 293, 385, 184,   8],
       device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 76,  31, 131, 365, 131, 425,  76,  85, 292, 385, 155],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([62, 10], device='cuda:0'), tensor([215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345,
        167, 108, 436, 241, 387,  85, 436, 167], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4911, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2915, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7825, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 441, 316, 441], device='cuda:0'), tensor([  9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314, 407,
         85, 314,  95], device='cuda:0'), tensor([80], device='cuda:0'), tensor([90], device='cuda:0'), tensor([213, 430, 183, 388, 338, 281, 116, 138, 311, 303, 183, 138],
       device='cuda:0'), tensor([283, 424, 283, 191,  73, 105, 283, 280, 437, 283, 280, 437, 150, 283,
        286, 283, 150, 150, 394, 150], device='cuda:0'), tensor([174, 256], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4453, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2617, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7070, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([124,  44, 197, 121,  11, 121, 215,  32, 121, 120, 351,  89, 351,  37],
       device='cuda:0'), tensor([240, 436, 240], device='cuda:0'), tensor([181,   9, 155, 121,  43,  17, 147], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63, 131], device='cuda:0'), tensor([ 76,  98,  91, 302, 451, 286, 424,  91, 451,  91], device='cuda:0'), tensor([215], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4475, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3126, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7601, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21, 269],
       device='cuda:0'), tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88], device='cuda:0'), tensor([400, 415, 121], device='cuda:0'), tensor([187, 187], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2419, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5604, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  75, 451], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([225], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([441, 405, 444, 405, 113, 405,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2929, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1841, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4770, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([ 47, 116,  47, 116, 263, 116, 116,  47, 116,  47], device='cuda:0'), tensor([354, 121, 108], device='cuda:0'), tensor([408], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([408, 399, 408,  50], device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2484, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1646, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4130, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 256, 256], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([230, 351,  90, 351,  90,  43, 436, 441], device='cuda:0'), tensor([408], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([415, 345, 309, 279, 309, 299,  32,  93, 121, 120, 302],
       device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2910, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2059, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4969, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [016][00010/00055]	Time 0.51 (0.51)	Loss 0.50 (0.50)
		cls_loss 0.29 (0.29)	reg_loss 0.21 (0.21)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15, 294,  15,  15], device='cuda:0'), tensor([ 82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,  82,
        436, 124, 223, 196], device='cuda:0'), tensor([182, 392, 146, 146,  51, 100], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([354, 385, 354, 100, 121, 404,  93, 257, 385, 453, 110],
       device='cuda:0'), tensor([ 93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351, 217, 305,  32,
        305, 438, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3466, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8752, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([ 68,  47, 443,  93,  19, 389,  47, 200,  49,  49, 138, 194, 388],
       device='cuda:0'), tensor([280,  96, 298], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([ 82, 181,  82, 181, 436,  82, 313,  82, 181], device='cuda:0'), tensor([234, 215,  50,  50, 217], device='cuda:0'), tensor([249, 153, 121, 213, 270,  93, 270, 328,  59, 436, 224,  71, 385,  62],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5605, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3064, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8669, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 215, 225, 424, 225, 215,  91], device='cuda:0'), tensor([ 10, 366,  10, 436, 121], device='cuda:0'), tensor([385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121,
        100, 436, 366, 215,  83, 436,  71, 436], device='cuda:0'), tensor([399], device='cuda:0'), tensor([ 50, 137,  50, 291, 438, 396, 438], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269, 203, 332,
        269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5032, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3023, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8055, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([21], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([268, 268, 268, 268], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([306, 306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268],
       device='cuda:0'), tensor([181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3041, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1859, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4900, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441], device='cuda:0'), tensor([ 93, 443], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([108, 441, 247], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2719, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2054, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4773, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([451, 121, 305, 424, 305], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 31, 121, 114, 326, 224, 224, 305,  32, 305, 434, 326, 224],
       device='cuda:0'), tensor([ 11, 121,  11, 197,  44, 385, 441, 385, 441,  93,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4172, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3121, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7293, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([173, 125, 341, 411, 319, 399, 279], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310,  50], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([451, 300, 451], device='cuda:0'), tensor([442,  93, 345, 437, 115, 437, 415, 436, 313, 442, 399, 436, 357],
       device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([142, 351, 142, 351, 142, 351, 196, 351, 429, 351, 429, 351, 231, 196,
        280, 280, 280, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6869, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4536, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1405, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 436, 349, 408, 415, 408, 349, 399],
       device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([436, 359, 436, 436], device='cuda:0'), tensor([431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220,
        181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357,
        431, 137, 220, 220, 357, 431, 220, 409, 220], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6248, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4628, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0876, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 93, 441], device='cuda:0'), tensor([302,  80, 116,  80,  80,  93, 325, 388, 232, 338], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138], device='cuda:0'), tensor([14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2916, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2148, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5064, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44],
       device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([451, 436, 316,  93, 191, 436,  44, 451, 221, 284, 436, 394],
       device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36], device='cuda:0'), tensor([ 93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0'), tensor([408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3859, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2635, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6493, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [016][00020/00055]	Time 0.44 (0.48)	Loss 0.65 (0.57)
		cls_loss 0.39 (0.34)	reg_loss 0.26 (0.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([249, 316, 436, 316], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5227, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3449, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8676, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300, 294],
       device='cuda:0'), tensor([424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417, 388, 417,
        411, 417, 417, 417, 314, 417, 417, 417, 436, 417, 150],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([315], device='cuda:0'), tensor([255], device='cuda:0'), tensor([93], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0')] torch.Size([2348, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats 
yes3 {'cls_loss': tensor(0.3685, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2451, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6137, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([113], device='cuda:0'), tensor([215,  44, 215,  37,  37,  37,  37,  37,  37,  37, 150,  37,  45,  37,
         45,  37, 424,  37, 411], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([365, 215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302, 357, 399,
         16, 401,  96, 399, 302], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([ 96, 121, 348,  96, 191,  96,  96, 215, 313,  96, 294,  96,  70,  96],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5100, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3289, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8389, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 216, 447, 408], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325],
       device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1694, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([148], device='cuda:0'), tensor([  4,   4, 134], device='cuda:0'), tensor([436,  10, 315], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([120,  82, 255,  82, 294,  82, 134, 255,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1991, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1222, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3212, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 120, 399, 156, 253], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16],
       device='cuda:0'), tensor([ 83,  16,  22, 215, 441, 415], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4934, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3416, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8350, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([ 63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405],
       device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([223, 223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([384, 215, 215, 215, 402, 215], device='cuda:0'), tensor([436, 436, 436, 436], device='cuda:0'), tensor([407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 54, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4015, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2544, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6560, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([100, 209], device='cuda:0'), tensor([436, 431, 415, 431, 431, 436, 431, 165,  44, 436,  93],
       device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411, 286, 411, 286,
         90, 312,  37,  82,  90,  37, 445, 286], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4526, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2827, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7353, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([234, 415], device='cuda:0'), tensor([93], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([283, 304, 280], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1690, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1149, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2838, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: torch.Size([745, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([2705, 1536]) 32
gt_label [tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93, 437], device='cuda:0'), tensor([268], device='cuda:0'), tensor([248, 340, 236, 121, 312], device='cuda:0'), tensor([268,  73, 268, 411, 268, 146, 430, 411, 268, 105, 268, 280, 268, 411,
        268, 280, 268,  72, 329, 411,  47,  78, 411, 138], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([399], device='cuda:0'), tensor([304, 437, 436, 279, 296, 302, 422, 121,  30], device='cuda:0'), tensor([351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7706, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4858, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2564, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [016][00030/00055]	Time 0.43 (0.46)	Loss 1.26 (0.80)
		cls_loss 0.77 (0.48)	reg_loss 0.49 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([ 32,  95, 415, 152], device='cuda:0'), tensor([9], device='cuda:0'), tensor([201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254,
        115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357], device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2744, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1946, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4691, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([268], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([120,  11,  96, 105, 226,  71, 338], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1845, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1416, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3261, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  88,  72,  88, 436,  88,  72,  88,  91, 411, 209,  88, 424,  88,
        247,  80], device='cuda:0'), tensor([264, 292, 399, 142,  80, 142,  80], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([225,  50], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([116,  47,  80, 404, 116,  88, 189, 388, 404, 116], device='cuda:0'), tensor([ 50, 250, 432, 250, 244], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4545, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2814, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7359, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([409, 201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82,
        302,  50, 302, 247, 270, 394, 279, 421, 150, 302, 415],
       device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([436, 105, 436,  83, 181, 415,  32, 181, 436, 447, 436],
       device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6153, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4447, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0600, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([439, 133, 121, 187, 305, 354], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([215], device='cuda:0'), tensor([132], device='cuda:0'), tensor([  9, 305], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
       device='cuda:0'), tensor([315, 108,   8,   8, 294,   8, 436, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2442, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1614, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4056, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 100, 305, 305,  71, 390, 453,  93, 393], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([323, 121, 269, 323], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([121, 404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0'), tensor([411,  50, 254, 415, 147, 421, 421,  82, 421, 228, 415, 155],
       device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430], device='cuda:0'), tensor([90, 11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4060, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2456, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6515, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([412, 412,  87, 398, 116, 412, 412,  87, 412], device='cuda:0'), tensor([249, 316, 142], device='cuda:0'), tensor([ 93,  93, 197, 452,  15, 436], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116, 195], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4095, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3607, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7703, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0'), tensor([399,  63, 398, 376, 398, 354, 398, 354,  71, 376, 398, 354],
       device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([ 30, 451, 100, 100, 294, 429], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([256, 174, 256, 369, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([294, 196, 215, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4835, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8570, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0'), tensor([399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123, 123, 123,
        350], device='cuda:0'), tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([398, 436, 398,  51], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7549, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5614, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3163, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146,  83], device='cuda:0'), tensor([451], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407, 333,
        121], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 47, 256,  19, 109,  47, 388, 260, 256,  47, 256, 388],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([107, 107, 107, 107, 107,   2], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3804, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2253, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6057, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [016][00040/00055]	Time 0.43 (0.45)	Loss 0.61 (0.75)
		cls_loss 0.38 (0.46)	reg_loss 0.23 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([232, 388, 232, 388, 232], device='cuda:0'), tensor([416, 424, 181, 445, 236, 181, 236, 181, 107, 181, 352],
       device='cuda:0'), tensor([445, 441, 385, 286, 441,   8, 441, 286], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4752, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7687, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([251, 251], device='cuda:0'), tensor([63], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([255], device='cuda:0'), tensor([253,  87, 140, 316, 424,  83], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([219], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294,
        399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2055, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1348, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([ 71, 329,  27,  27, 135, 451, 107,  93, 128,  93, 215, 141, 294, 399],
       device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([244], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3314, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2261, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5575, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231, 270, 231],
       device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80],
       device='cuda:0'), tensor([430, 315,  82, 431, 385, 431, 315, 213, 216, 436,  82, 103, 385, 385,
        103,   8, 365, 103, 302], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([58], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5889, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3882, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9771, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 13,   9, 436], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([440,  82, 440, 441, 279], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([267,  93, 267,  93], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3532, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2815, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6347, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([159, 384, 299, 384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3384, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2066, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5450, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 146], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93, 100, 100], device='cuda:0'), tensor([15], device='cuda:0'), tensor([ 12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100,
        279], device='cuda:0'), tensor([406], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([121, 249, 371, 201], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3499, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2482, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5982, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220, 292], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19, 121, 137], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([384, 177, 309,  13, 437, 413, 197, 380, 413, 424,  90, 413],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3762, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2996, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6757, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([411,  70, 411,  44, 200, 258, 226, 411, 226, 453, 197, 436, 340, 121,
        351, 318, 351, 436], device='cuda:0'), tensor([383, 430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([98], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4455, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2723, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7178, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([305, 116, 124, 436], device='cuda:0'), tensor([451], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([256], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2752, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1817, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4569, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [016][00050/00055]	Time 0.54 (0.47)	Loss 0.46 (0.69)
		cls_loss 0.28 (0.42)	reg_loss 0.18 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 315, 181, 315, 181, 315, 181, 382,  96, 382], device='cuda:0'), tensor([316, 159, 365,  31,  19,  31, 424,  31], device='cuda:0'), tensor([187, 305, 187, 305, 187, 305], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121, 120, 249], device='cuda:0'), tensor([121,  80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([295, 351, 325, 295, 351, 351, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4916, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2896, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7813, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 181,  52, 436,  52], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([181, 296, 181, 219, 424, 181], device='cuda:0'), tensor([354, 100, 392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100,
        392, 354, 256, 100], device='cuda:0'), tensor([215,  50], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([220, 441, 220, 181, 441, 431,  50, 431, 441, 220, 441, 431, 219, 399,
        220, 217, 431, 397, 431,  73], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6753, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4394, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1147, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([  7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,  82, 152,
        164, 121, 251, 164, 121, 415,  93, 270, 279, 385], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([ 80, 142, 182, 359,  44, 359, 201, 359, 451,  71, 201],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3215, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7940, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([255], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([408], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438, 441, 138],
       device='cuda:0'), tensor([108,  70, 447,  44, 383, 294, 224, 201, 121, 447, 438, 121, 215,  76],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4163, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2655, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6818, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 16 finished with lr=0.00009325


[Train]: Epoch 17 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 100, 294, 351, 294,  62,  10], device='cuda:0'), tensor([ 14, 316], device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249], device='cuda:0'), tensor([315], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0'), tensor([279, 385, 121,  87, 120, 201, 430, 201, 316, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3460, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2228, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5688, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([280, 270, 270, 436,  95, 313, 436, 313, 181], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([173, 125, 341, 411, 319, 399, 279], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([122,  30,  93, 100,  93, 100], device='cuda:0'), tensor([298,  73,  71, 136,  73, 424, 298, 425], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3795, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2503, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([296], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3567, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2660, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6227, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 408, 313], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([201, 442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50,
        223, 402, 313, 223, 402, 115, 310], device='cuda:0'), tensor([100,  32, 430, 441, 257, 415, 385, 441, 301, 385, 399],
       device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310, 310], device='cuda:0'), tensor([294,  65, 124, 144,  23,  82,  65], device='cuda:0'), tensor([408], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4953, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3353, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8306, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([351, 436, 351, 436, 359, 436, 359, 441], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([215, 149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215,
        219], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([113, 430], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4080, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6747, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([351, 399, 351, 245, 351, 142, 351, 142, 279, 201, 142],
       device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([9], device='cuda:0'), tensor([268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3333, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2825, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6158, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([217, 249, 217,  93, 201,  93,  71,  93,  96,  22, 197, 351, 226, 351,
        226,  93, 351, 390, 420, 385], device='cuda:0'), tensor([ 62, 130, 100, 284, 197, 214, 294, 391, 120], device='cuda:0'), tensor([  8, 217,  47,  55, 453,  47, 294, 294, 385,   8, 404,  47, 435, 124,
        447, 335,  82], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325],
       device='cuda:0'), tensor([362, 105], device='cuda:0'), tensor([ 80, 142,  80, 114,  80], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7459, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4509, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1969, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295], device='cuda:0'), tensor([121], device='cuda:0'), tensor([219], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([300, 451, 451], device='cuda:0'), tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93, 396],
       device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2369, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1656, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4025, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([451, 142, 142], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([ 82, 295, 181], device='cuda:0'), tensor([294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5070, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2777, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7847, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392, 100, 392, 354,
        100, 392, 129, 100], device='cuda:0'), tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437],
       device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([ 90, 413, 437, 394, 213, 437, 394,  93, 394,  30, 437],
       device='cuda:0'), tensor([88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44,
        88, 91], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([ 75, 451], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4993, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3467, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8460, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,
         21, 224,  21], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 87, 137], device='cuda:0'), tensor([58], device='cuda:0'), tensor([158, 408, 402], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3737, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2133, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5870, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [017][00010/00055]	Time 0.75 (0.75)	Loss 0.59 (0.59)
		cls_loss 0.37 (0.37)	reg_loss 0.21 (0.21)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 294, 264, 294, 329,  93], device='cuda:0'), tensor([431, 131, 247, 108,  96,  96, 121, 348,  96, 191,  96,  96],
       device='cuda:0'), tensor([280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437,
        425, 150, 437, 150, 397, 249], device='cuda:0'), tensor([100,  88, 100, 209], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([436, 105, 436,  83, 181, 415,  32, 181, 436, 447, 436],
       device='cuda:0'), tensor([385, 283, 122, 121, 385,  83, 401, 301,  83, 283,  83, 270, 415,  49,
        301, 119, 430, 336,  93, 301, 387, 290, 301, 283, 210, 225],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7191, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3674, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0864, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417, 159,  31, 121, 114, 326, 224, 224, 305], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([268, 376, 268, 376, 268,  80, 268], device='cuda:0'), tensor([166], device='cuda:0'), tensor([430,  81, 127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,   5,
        392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,
         50, 268, 268, 392, 268, 268, 268], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([402,  12, 302, 345,  30, 345, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5238, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3261, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8499, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([244], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349], device='cuda:0'), tensor([268, 268, 306, 268, 306, 306, 306, 268], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3122, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2208, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5330, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 10, 366,  10], device='cuda:0'), tensor([ 70, 256, 354, 438, 268, 268, 256, 430, 438, 268, 256, 138,  70, 398,
        441, 302, 249,  93, 399, 441, 385, 302], device='cuda:0'), tensor([431, 294], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3475, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5700, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([176, 176, 176, 176, 176,  46, 120, 120,  46, 197, 283,  46, 108],
       device='cuda:0'), tensor([436], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([142,  80, 298, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3122, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1782, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4903, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([220], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([ 93, 430,  10, 220, 242, 357, 431,  10, 220, 436,  71,  93],
       device='cuda:0'), tensor([105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50,  16, 436, 385,
         16], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([146,  71, 390, 401, 121], device='cuda:0'), tensor([191,   9, 385,  71, 314, 105, 407, 385, 436, 407, 436, 407, 407, 314,
        407], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4801, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3100, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7901, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([215, 296, 215, 105, 215, 340, 215, 217, 215, 215], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233],
       device='cuda:0'), tensor([441, 113, 441], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291, 438], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3651, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2321, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5972, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([325, 354, 370, 213, 183, 354, 404, 124, 130, 446, 166, 130, 378],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([217, 329,  37, 282, 121,  37, 447, 385, 407,  95,  21, 210, 407],
       device='cuda:0'), tensor([225,  16,  76,  16, 402, 225, 441, 285], device='cuda:0'), tensor([ 11, 441, 451, 441, 451], device='cuda:0'), tensor([332, 332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5228, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2722, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7950, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146, 182, 392, 146], device='cuda:0'), tensor([385, 286, 385, 437, 166, 286, 238,  31, 437,  31, 437,  31],
       device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([ 14, 436,  14, 327], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([146], device='cuda:0'), tensor([348, 354, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2422, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6194, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 306], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([424, 371, 371, 420, 420, 424, 371], device='cuda:0'), tensor([131,  22], device='cuda:0'), tensor([309, 429, 451, 215, 177, 294, 215, 150,  71,  71], device='cuda:0'), tensor([201,  11,  78, 175,  71, 121, 436, 402], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([294, 436, 294, 315, 436, 315, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3737, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5961, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [017][00020/00055]	Time 0.59 (0.67)	Loss 0.60 (0.59)
		cls_loss 0.37 (0.37)	reg_loss 0.22 (0.22)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 166, 268], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([302, 121,  96, 294,  52, 294,  52, 119,  52, 294,  52, 447,  52, 385,
         52, 409,  52,  44,  52,  44,  96, 155], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([402, 108, 415], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4253, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3025, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7278, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146,  83, 294], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([316, 100, 257], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([ 93, 408, 216, 447, 408], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([146, 345, 183,  47, 232, 404, 354, 194, 453, 415, 116, 389, 182,  80],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3527, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2035, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5563, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294,  71,  16, 286, 105,  16,   8,  16, 219], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 369, 174, 256, 174],
       device='cuda:0'), tensor([2, 2, 2, 2], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2827, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2221, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5048, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269, 301, 436], device='cuda:0'), tensor([50], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0'), tensor([298, 441,  96, 441, 298, 441, 298], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([105,  16, 302, 124, 443, 377,  93, 443], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2430, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([15], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([294], device='cuda:0'), tensor([436, 326, 436, 208, 279, 415, 121, 184, 436, 224, 213, 436, 224, 436,
        213,  19, 436, 384,  19, 182], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([408], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3245, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2405, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5651, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([189, 189, 313], device='cuda:0'), tensor([ 91, 411, 209,  88, 424,  88, 247,  80,  91, 411,  88,  80],
       device='cuda:0'), tensor([ 96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213,
        285, 405, 294], device='cuda:0'), tensor([187,  87], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([412,  87, 398, 116, 412, 412,  87], device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4083, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2660, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6743, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 398, 412, 138, 398, 256, 412, 354, 412, 138, 398, 256, 412, 354,
        412, 138, 398, 256, 412, 411, 138, 398, 411, 412, 294, 354, 429, 138,
         60,  83, 436, 411, 411, 436, 411, 436, 411, 436,  59, 411,  59, 316,
        430], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([385, 103,   8, 365, 103, 302, 103, 436, 103, 436, 103],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0'), tensor([269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407, 269,  21, 269],
       device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([121, 316, 316, 316, 294,  82, 292], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7537, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4874, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2411, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([408, 408, 408, 408, 408, 436, 408, 415, 408, 385, 384, 279, 436],
       device='cuda:0'), tensor([ 16,  22, 215, 441, 415], device='cuda:0'), tensor([232, 388, 232, 388, 232, 116, 116], device='cuda:0'), tensor([ 47, 260], device='cuda:0'), tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([398, 357, 412, 357, 357, 398, 412, 357, 357, 398, 357],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4254, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2424, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6678, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([301, 439, 439, 436, 439, 436, 439], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0'), tensor([423, 423], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345, 167], device='cuda:0'), tensor([47], device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5327, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3636, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([ 49, 424, 218, 436, 120, 218, 436, 436, 424, 436,  87, 316],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([268], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([  9, 218,  22,  86,  74, 121,  93, 159, 384, 299, 384, 411, 177, 270,
        386,   9, 386, 184], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4816, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3402, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8217, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [017][00030/00055]	Time 0.65 (0.67)	Loss 0.82 (0.67)
		cls_loss 0.48 (0.41)	reg_loss 0.34 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 436, 383,  50], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279, 421,
        150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([399, 159, 177], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4121, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2851, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6972, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([417], device='cuda:0'), tensor([ 44,  22, 384, 436, 384, 438, 121, 113, 438, 385,  90],
       device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([295, 295, 294, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2242, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1424, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3666, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63, 446,  44,
        152, 437], device='cuda:0'), tensor([451, 451, 451, 451, 436,  15], device='cuda:0'), tensor([225], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4191, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2739, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6930, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([370,  80,  80, 443,  93, 166], device='cuda:0'), tensor([90, 11], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([215,  50,  50, 217, 436, 294], device='cuda:0'), tensor([256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260,
        256,  47, 256, 116, 195], device='cuda:0'), tensor([ 12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437,
        294, 345, 294, 437, 294], device='cuda:0'), tensor([247, 234, 247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417,
        311, 417, 388, 417, 411, 417, 417, 417, 314, 417], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6047, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3954, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0001, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([132], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([215], device='cuda:0'), tensor([268], device='cuda:0'), tensor([109, 325,  47, 256, 195,  47, 388, 260, 256, 109,   8, 325,  82, 436,
        325], device='cuda:0'), tensor([280, 268, 411, 268, 280, 268,  72, 329, 411,  47,  78, 411, 138,  78,
        411, 138, 138, 138,  73, 298], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316, 231],
       device='cuda:0'), tensor([105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5644, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3002, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8647, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([90], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3816, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3480, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7296, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([309, 279, 309, 299,  32,  93, 121, 120, 302, 121, 302],
       device='cuda:0'), tensor([386, 437, 386, 385, 121, 166,  93, 120], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([188, 430, 425, 411, 207, 108,  70, 447,  44], device='cuda:0'), tensor([408, 399, 408], device='cuda:0'), tensor([256], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3403, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2122, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5525, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,
         50], device='cuda:0'), tensor([436], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([148], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([201], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2142, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1532, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3674, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([93], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294],
       device='cuda:0'), tensor([143, 302, 180,  16], device='cuda:0'), tensor([256], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0'), tensor([223, 345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280],
       device='cuda:0'), tensor([234, 415, 163], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3831, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2244, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6076, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 267,  93, 267,  93, 267,  93], device='cuda:0'), tensor([ 83, 121, 436, 436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436,
        399], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([181], device='cuda:0'), tensor([256], device='cuda:0'), tensor([224, 316, 195,  50, 451, 251,  22, 251, 279, 121,  59],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3796, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2617, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6413, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [017][00040/00055]	Time 0.65 (0.66)	Loss 0.64 (0.66)
		cls_loss 0.38 (0.40)	reg_loss 0.26 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 304, 280], device='cuda:0'), tensor([430, 384, 262, 339,  31, 445, 340, 277, 279], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([269, 203, 332, 269, 407, 121, 407, 437, 286], device='cuda:0'), tensor([ 51,  68, 370, 404, 404,  47, 285, 333, 362,  22, 263,  80, 116],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4417, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2229, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6646, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([406], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([305, 215, 121, 215, 100], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3535, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6927, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 155, 451, 451, 451, 451, 451], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223,
        223,  82, 248, 138], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([436,  23, 408, 436, 436, 408], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5272, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3193, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8465, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([376,  71, 354, 398, 354, 398, 354, 357, 376, 146, 398,  44, 338,  71,
        116, 398, 354], device='cuda:0'), tensor([116, 338, 116,  68, 183,  80, 116, 116, 116], device='cuda:0'), tensor([256], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([451], device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3308, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2095, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5403, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([21], device='cuda:0'), tensor([365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([295, 351,  63,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2356, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1589, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3945, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([98], device='cuda:0'), tensor([187], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75], device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2520, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2219, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 229, 434, 401,  93, 431, 436, 385, 220,  50, 431, 385, 329, 294,
        431,  82], device='cuda:0'), tensor([226, 383], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([399], device='cuda:0'), tensor([215], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2839, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1651, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4490, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237], device='cuda:0'), tensor([436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10, 436,
         10, 315], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394], device='cuda:0'), tensor([256], device='cuda:0'), tensor([408], device='cuda:0'), tensor([398, 436, 398,  51, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2694, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1812, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4506, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([373, 234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385,
        393, 382, 234, 303, 382, 181,   9, 181, 315, 181], device='cuda:0'), tensor([200, 258, 226, 411, 226, 453, 197, 436, 340, 121, 351, 318, 351, 436,
         43, 351, 296], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411, 286,
        411, 286,  90, 312,  37,  82,  90], device='cuda:0'), tensor([ 11, 420, 451, 420], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.9112, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5136, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4248, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0'), tensor([215, 305, 298, 292,  73, 399,  49, 440, 440], device='cuda:0'), tensor([240], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([392, 436, 392,  47, 392], device='cuda:0'), tensor([166, 166], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4483, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2407, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6890, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [017][00050/00055]	Time 0.66 (0.66)	Loss 0.69 (0.67)
		cls_loss 0.45 (0.41)	reg_loss 0.24 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 394, 121,   4], device='cuda:0'), tensor([402, 436, 402, 181, 181, 181, 181, 181, 181, 296, 181, 219],
       device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([356, 245,  67,  96,  22, 276, 453, 416, 424], device='cuda:0'), tensor([436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100, 385,
        436,  93, 291, 121, 291, 121, 115], device='cuda:0'), tensor([100, 100], device='cuda:0'), tensor([194, 415, 109, 325, 183,  47, 404], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6161, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3683, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9844, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([248, 340, 236], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([383, 383, 430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([ 90,  43, 436, 441, 301], device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3202, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2029, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5230, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([9], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,
         22,  50, 268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,
         50], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([367, 426, 252, 367, 426, 252, 367, 426, 252, 367,  62, 183,  70, 426,
        426, 426, 252, 367, 426], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5357, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3519, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8876, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439, 439], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([215,  83, 405, 302, 405], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3562, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2594, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6156, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 17 finished with lr=0.00009119


[Train]: Epoch 18 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([267,  93, 267,  93], device='cuda:0'), tensor([ 44, 430, 224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0'), tensor([ 10, 366,  10, 436, 121, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3292, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2865, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6157, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201, 268, 146], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([397, 385, 302, 286], device='cuda:0'), tensor([217, 255,  50,  85, 365, 215, 292,  16, 292,  49,  16,  96, 215,  49,
        215], device='cuda:0'), tensor([415, 296, 121,  32,  49, 411,  50, 415,  93], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([ 51, 238,  47, 404, 388,  36, 302, 209, 121,  23, 121,  82,   1,  47,
        116, 256, 354,  47,  36], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6242, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3257, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9499, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([9], device='cuda:0'), tensor([304, 280], device='cuda:0'), tensor([385, 436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121,
        100, 436, 366, 215,  83, 436,  71, 436,  10,   9, 298],
       device='cuda:0'), tensor([398,  51, 398,  51, 398, 435, 398], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([181, 181, 205, 436, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3594, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2217, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5811, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19, 121, 137], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([359, 436, 359, 441, 359, 203, 359, 279], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([221, 284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,
         50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4091, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2762, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6853, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 411], device='cuda:0'), tensor([135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351, 217,
        305,  32, 305, 438, 215], device='cuda:0'), tensor([201, 329,   8, 191,  32, 350, 257, 350, 257,  20,  52,  32, 124, 296,
        100, 301, 436, 441, 436, 441, 143, 279], device='cuda:0'), tensor([252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426, 252,
        367, 426, 252, 367, 426, 252, 367,  62, 183], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 88, 404, 116, 392, 116,  47,  80, 404], device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.7251, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4647, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1898, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([148], device='cuda:0'), tensor([249, 155], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167, 108,
        436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([451], device='cuda:0'), tensor([362, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2615, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1747, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4362, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268,  85], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215,
        409], device='cuda:0'), tensor([ 44,  82, 436, 315, 447, 436, 181, 430, 315,  82, 431, 385, 431, 315,
        213, 216, 436,  82, 103], device='cuda:0'), tensor([417], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285, 213, 430, 183,
        388, 338, 281, 116, 138], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5862, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3861, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9723, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 319, 121, 224], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([315], device='cuda:0'), tensor([351, 196, 351, 429, 351, 429, 351, 231, 196, 280, 280, 280, 305, 345,
        201, 305, 305], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([408], device='cuda:0'), tensor([411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445, 286,  90, 316,
         22, 294,  90, 411,  90, 316, 286, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5020, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3372, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8392, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([90, 11], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([408], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2145, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1749, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3894, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0'), tensor([138, 294, 362, 362, 146, 100, 355], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3289, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2525, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5814, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 356, 279,  76, 399,  76, 396, 441, 316, 302, 441, 302],
       device='cuda:0'), tensor([295, 295, 436, 295], device='cuda:0'), tensor([430], device='cuda:0'), tensor([201], device='cuda:0'), tensor([284], device='cuda:0'), tensor([  8, 399, 385, 436, 436, 408, 279, 408, 436, 408, 436, 408, 436],
       device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3120, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1928, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5048, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [018][00010/00055]	Time 0.76 (0.76)	Loss 0.50 (0.50)
		cls_loss 0.31 (0.31)	reg_loss 0.19 (0.19)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  98, 451, 121, 305], device='cuda:0'), tensor([90], device='cuda:0'), tensor([ 12,  93,  35, 249,  93,  12,  93, 437,  93, 437,  93, 437, 121, 437,
         93, 437], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46, 249, 430, 436], device='cuda:0'), tensor([191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313,
        313, 447, 138,  93], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([88, 16, 88, 73], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4103, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3276, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7379, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([121, 294], device='cuda:0'), tensor([58], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181], device='cuda:0'), tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([392, 146,   5, 378, 146, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2979, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1733, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4712, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96,  96, 215, 313,  96, 294,  96,  70,  96, 354, 215],
       device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([100,   7,   7,   7,   7,   7, 436, 247, 247, 100, 181],
       device='cuda:0'), tensor([181], device='cuda:0'), tensor([249, 316, 436, 316], device='cuda:0'), tensor([ 83, 405, 302, 405], device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116,  47], device='cuda:0'), tensor([402, 215, 215, 215, 402, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4121, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2613, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6734, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,   9, 404, 330,  57,  93, 100], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([ 93, 441], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([164, 147,  93,  25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421,
        421,  82, 421, 228, 415], device='cuda:0'), tensor([283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2190, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5745, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451,  49, 424], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93, 283], device='cuda:0'), tensor([244, 409, 346, 409, 315], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([166, 385, 378, 388, 302,  80, 116,  80,  80], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1259, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3244, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349,  82],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([255], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326, 395], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4069, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3669, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 301,  43, 351, 197,  37, 120], device='cuda:0'), tensor([166], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([436, 436, 436, 436,  22], device='cuda:0'), tensor([430,  81, 127, 242, 415, 436, 242, 415, 121, 242], device='cuda:0'), tensor([116, 116, 306, 306, 116, 306], device='cuda:0'), tensor([431, 224, 220, 167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268,
        415,  22,  50, 268,  50, 412, 415, 356, 251, 138], device='cuda:0'), tensor([228,   9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4685, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3314, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7999, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([215,  50,  50, 217, 436, 294, 215, 415], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([173, 125], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2724, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1677, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4401, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 195, 109, 325, 195, 325, 325, 257, 354,  47,  23, 183,  23, 183,
        260], device='cuda:0'), tensor([215], device='cuda:0'), tensor([31], device='cuda:0'), tensor([ 71,  18,  44,  12,  14,  71, 316], device='cuda:0'), tensor([195, 201, 195, 442, 121, 442, 451, 279, 442,  93], device='cuda:0'), tensor([ 80, 268,  80], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([142, 182, 359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5822, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3025, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8846, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([  9, 294,  62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0'), tensor([93], device='cuda:0'), tensor([215, 345, 215], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2764, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2138, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4902, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [018][00020/00055]	Time 0.65 (0.71)	Loss 0.49 (0.50)
		cls_loss 0.28 (0.29)	reg_loss 0.21 (0.20)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([ 96, 382], device='cuda:0'), tensor([270, 270, 436,  95, 313, 436, 313, 181,  82, 181,  82, 181],
       device='cuda:0'), tensor([191], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([305, 120, 305, 187, 305], device='cuda:0'), tensor([137,  10, 436,  44, 108, 431, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2987, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6605, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([ 96, 301,  91, 294, 137, 294, 229, 434, 401,  93], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([447, 402,  50, 181,  30, 181], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4136, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2672, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6808, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([451, 451, 319], device='cuda:0'), tensor([ 11, 121,  11, 197,  44, 385, 441, 385, 441,  93,  93],
       device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294],
       device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301, 119, 430, 336,  93, 301, 387],
       device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([107, 107, 107, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5655, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3711, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9366, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 354, 432, 354], device='cuda:0'), tensor([15], device='cuda:0'), tensor([223, 223, 223, 223, 223, 144, 223], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269, 294,  62, 294], device='cuda:0'), tensor([ 63, 279, 121, 411, 401, 100], device='cuda:0'), tensor([255, 394, 255, 394, 217], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286, 294], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4414, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3097, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7512, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([405, 121, 415], device='cuda:0'), tensor([306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([244], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3260, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2167, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5427, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([269], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([332, 156, 156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,
         11, 420, 451], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([ 40, 121,  75,  52], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3776, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1981, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5757, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([315, 108,   8,   8, 294,   8, 436, 294], device='cuda:0'), tensor([15], device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75,  91],
       device='cuda:0'), tensor([187,  96, 108,  96, 294,  96, 385,  50, 385], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([319, 319, 120, 319,  46], device='cuda:0'), tensor([ 11,  44,  71, 351,  82, 351, 424, 166,  82, 196, 286, 231],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4949, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3286, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8235, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([264, 233, 385, 436, 415, 264, 218, 264, 433, 121, 264, 415],
       device='cuda:0'), tensor([313, 165, 205, 156, 121, 156,  63,  93, 396,  50], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([50, 10], device='cuda:0'), tensor([240], device='cuda:0'), tensor([436,  22, 436, 316,  22, 452,  90, 159, 279,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3885, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2567, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6452, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([2682, 1536])
yes2torch.Size([1978, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2823, 1536]) BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352],
       device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441, 401], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4506, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3462, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7967, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 394, 453, 100,  93,  86, 413, 384, 177], device='cuda:0'), tensor([319, 408, 127, 142, 127, 337], device='cuda:0'), tensor([176, 345, 399,  90, 399, 230, 277], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 47,  93,  23, 443,  49,  47,  98, 447,  47, 213,  80,  80, 121,   8,
        217,  47,  55, 453,  47], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([430, 406,  11], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5425, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8532, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [018][00030/00055]	Time 0.66 (0.69)	Loss 0.85 (0.62)
		cls_loss 0.54 (0.38)	reg_loss 0.31 (0.24)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 189, 189, 313], device='cuda:0'), tensor([215, 121, 215, 100,  37, 257, 430], device='cuda:0'), tensor([399, 216], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3363, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2968, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6331, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([65], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([121, 404,  93, 257, 385, 453, 110, 394, 257, 441,  44,  22, 384, 436],
       device='cuda:0'), tensor([50], device='cuda:0'), tensor([ 14, 327,  52,  14], device='cuda:0'), tensor([298, 441, 298, 441, 298, 441, 298, 441,  96], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([328, 209, 311, 385, 205], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3719, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2555, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6274, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166, 294],
       device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([ 71, 224], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([182, 453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80, 116,
         19, 182], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4748, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3129, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7877, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 142], device='cuda:0'), tensor([98], device='cuda:0'), tensor([295,  82, 295], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([269, 269, 433, 323, 323, 121, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3332, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2656, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5988, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([405, 420, 405, 168, 405,  82, 213, 285, 405, 294,  21],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([146], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46], device='cuda:0'), tensor([ 15,  15, 305, 181], device='cuda:0'), tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269,  71],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3056, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2064, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5120, device='cuda:0', grad_fn=<AddBackward0>)} torch.Size([7176, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([2024, 1536])
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44,  44, 144], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([301, 436, 439, 439, 436, 439, 436], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([283, 436, 383,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2374, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1977, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4351, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([416, 248, 258, 132], device='cuda:0'), tensor([ 16,  16, 219, 155], device='cuda:0'), tensor([108, 305, 285, 305, 441, 225,  16,  76,  16, 418], device='cuda:0'), tensor([295, 351, 295, 351,  63], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([ 91, 345,  91,  91, 345,  91, 247,  91,  37, 201, 345, 359],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5149, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3188, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8337, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 345, 309, 279, 309, 299,  32,  93, 121, 120, 302, 121],
       device='cuda:0'), tensor([424, 181, 305, 280, 415, 415, 238,  12, 415, 453, 415, 385, 210, 415,
        279, 453, 385,  32, 399, 121, 356, 279], device='cuda:0'), tensor([452, 284,  90,  80], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([316, 412, 138, 138, 354, 256, 354, 398, 354, 412, 256, 354, 412, 138,
        398, 256, 354, 398, 412, 138, 398, 256, 412, 354, 412, 138, 398, 256,
        412, 354, 412, 138, 398, 256, 412, 411, 138, 398, 411, 412, 294, 354,
        429], device='cuda:0'), tensor([37], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([131, 365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8019, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3754, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([93], device='cuda:0'), tensor([ 44, 383, 294, 224, 201, 121, 447, 438, 121, 215,  76,  37],
       device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127],
       device='cuda:0'), tensor([256, 256, 256, 256, 256], device='cuda:0'), tensor([ 49,  22, 270, 399, 279, 121, 383, 121, 399, 293, 385],
       device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4708, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2774, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7481, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90,  50,  90,  50,  90,  50, 121, 159, 121, 384, 279, 385, 121],
       device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100,
        392, 100, 392], device='cuda:0'), tensor([451], device='cuda:0'), tensor([256], device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3738, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2907, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6645, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [018][00040/00055]	Time 0.66 (0.68)	Loss 0.66 (0.63)
		cls_loss 0.37 (0.38)	reg_loss 0.29 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 177, 294, 249, 399], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([255], device='cuda:0'), tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([430, 270, 436, 430], device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223],
       device='cuda:0'), tensor([150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397,
        249, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3631, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2272, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5903, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([292, 399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([ 51, 116,  19, 116,  93, 447,  68,  47, 443,  93,  19, 389,  47],
       device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([255], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279,
        421, 150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([417, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3445, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2418, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5863, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  13, 221,  44], device='cuda:0'), tensor([296, 108, 258,  71, 159, 280], device='cuda:0'), tensor([ 44, 221, 436, 411, 223, 345, 115, 436, 115, 436, 357, 436, 313],
       device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([249,  31, 345,  96,  46,  72, 415, 108], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([234], device='cuda:0'), tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4391, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2687, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7078, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 404, 385], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425], device='cuda:0'), tensor([451, 304, 451], device='cuda:0'), tensor([100,  88,  88,  88, 100,  88, 100], device='cuda:0'), tensor([ 37, 257, 215, 313, 411,  70, 411,  44, 200, 258, 226, 411, 226, 453,
        197, 436, 340, 121], device='cuda:0'), tensor([350, 204, 143, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3745, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2229, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5974, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181, 220,
        181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137, 357,
        431, 137, 220, 220, 357, 431, 220, 409, 220], device='cuda:0'), tensor([294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([392, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,  50,
        268, 268, 392, 268, 268, 268,   5, 392, 268, 268, 268, 268,   5, 392,
        268, 268, 268, 268], device='cuda:0'), tensor([391, 120,  96, 451], device='cuda:0'), tensor([309, 249,  44, 436, 120, 279,  43, 296, 279, 121, 296, 436,   9, 436,
        305], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7233, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5113, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2346, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 209,  96], device='cuda:0'), tensor([398, 256, 398, 398, 376, 398,   9, 398,  82], device='cuda:0'), tensor([158], device='cuda:0'), tensor([100, 393, 385, 393, 305, 393, 305, 393, 305, 159, 393, 100, 393,  87,
        437, 332, 437,  95,  83, 286], device='cuda:0'), tensor([47], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([436, 105, 436,  83, 181, 415,  32, 181, 436, 447, 436],
       device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3950, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2321, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6272, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([406], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 16,  22, 215, 441, 415], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1600, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1346, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2947, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([47], device='cuda:0'), tensor([268], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,
         90, 157,  37, 247], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2176, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5362, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([399, 408,  50, 399], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([399], device='cuda:0'), tensor([408,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2110, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1403, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3513, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220, 292], device='cuda:0'), tensor([62, 10], device='cuda:0'), tensor([187], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371, 420], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2157, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1307, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3465, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [018][00050/00055]	Time 0.66 (0.68)	Loss 0.35 (0.57)
		cls_loss 0.22 (0.34)	reg_loss 0.13 (0.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 37, 447,  37, 331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,
         37,  37, 217, 329,  37, 282, 121,  37, 447], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([354, 159, 354, 423,  83, 121, 436, 436, 108,  44], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([398, 116, 357, 412, 357, 412, 357, 398, 412], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4002, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3250, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7252, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 121], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([305], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2452, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2000, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4451, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93],
       device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([ 27,  27, 135, 451, 107,  93, 128,  93, 215, 141, 294, 399],
       device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([ 83, 113, 301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424,
        113, 150, 292, 415,  22], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5106, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2891, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7997, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([21], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 91, 411, 209,  88, 424,  88, 247,  80,  91, 411,  88,  80],
       device='cuda:0'), tensor([ 64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([113, 441, 279, 248], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3515, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1777, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5292, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 18 finished with lr=0.00008889


[Train]: Epoch 19 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21,  32,  95, 415], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([351, 121, 351, 127, 351, 351, 351, 351, 231, 351, 150],
       device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([267,  93, 158,  93], device='cuda:0'), tensor([108, 354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3481, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2764, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6246, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215], device='cuda:0'), tensor([ 14,  61, 253, 313], device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183, 354, 138, 285],
       device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([142, 316,  12, 121, 120, 249,  31, 345,  96,  46,  72],
       device='cuda:0'), tensor([ 37,  45,  37, 424,  37, 411, 411, 411,  50, 157,  90, 157,  37, 247,
        225,  91,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4317, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2673, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6990, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([451,  49, 424], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([100], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1750, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1924, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3675, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([204, 143, 302, 180], device='cuda:0'), tensor([182, 100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([100, 121, 404,  93, 257, 385, 453, 110, 394, 257, 441,  44,  22],
       device='cuda:0'), tensor([431], device='cuda:0'), tensor([283, 436, 383,  50], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([127, 337, 345, 332, 337, 337, 214, 316, 121, 322, 204, 127, 316],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4452, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2511, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6963, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 116, 392], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([249, 305, 175, 223], device='cuda:0'), tensor([220, 292,  49,  85], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181], device='cuda:0'), tensor([431, 100, 294,   4], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2468, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2001, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4469, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([ 44, 304, 217, 201,  88], device='cuda:0'), tensor([ 93, 351, 325, 351, 294, 351,  93,  93, 351,  93], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([238, 378, 231, 100, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3357, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3242, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6599, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279,  90, 279,  90], device='cuda:0'), tensor([302, 408, 399], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([319, 319, 121, 224, 147, 438], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([257,  31,  49,  24,  49, 181,  49,  22, 270], device='cuda:0'), tensor([ 62, 451,  62, 451, 264, 233, 385, 436, 415], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3169, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2110, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5279, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 384, 385,  11, 121,  11, 197], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([116, 116, 116, 404, 138, 100], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([294, 425,  93, 283, 283, 283, 225, 385], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([452,  15, 436, 225, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2898, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2240, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5137, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([268, 333, 354, 100, 298], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305], device='cuda:0'), tensor([408], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([406, 451, 406, 140, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4285, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3453, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7739, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([338,  36, 354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260],
       device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([  8, 354,   8, 430,   8, 325, 385, 385, 183, 361, 203, 385, 325],
       device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([298, 215, 187,   8, 187,  96,  96, 226,  83], device='cuda:0'), tensor([399, 441, 301, 433, 294, 385, 385, 217, 385, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7197, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4549, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1747, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399, 159], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([441, 268, 268, 138, 302,  76, 345,  70, 441, 356, 279,  76, 399,  76,
        396, 441, 316, 302, 441], device='cuda:0'), tensor([182, 121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183,
        121, 385], device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4973, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2936, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7908, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [019][00010/00055]	Time 0.75 (0.75)	Loss 0.79 (0.79)
		cls_loss 0.50 (0.50)	reg_loss 0.29 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80, 268,  80],
       device='cuda:0'), tensor([256, 306, 256, 306], device='cuda:0'), tensor([294,  15,  15,  15,  15], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([215], device='cuda:0'), tensor([394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279, 159,
        314, 184, 147,  95], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3641, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2759, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6400, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([415, 385, 210, 415, 279, 453, 385,  32, 399, 121, 356, 279, 273, 453,
        196, 397, 279, 100], device='cuda:0'), tensor([150, 292, 415,  22, 247, 234, 247, 294, 424, 150, 433, 247, 218, 214,
        417, 294,  83, 417, 311], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([402, 225, 441, 285, 108, 441], device='cuda:0'), tensor([340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415,
        100], device='cuda:0'), tensor([ 43,  32, 309, 429, 451, 215, 177, 294, 215, 150,  71],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5232, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3551, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8782, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392,
        129, 100, 392, 100, 392], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([197, 197, 197, 334, 197, 197, 197, 197, 197], device='cuda:0'), tensor([305, 187, 305, 436, 187, 305, 187, 305, 187], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3536, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2989, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6525, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([189, 313, 415], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([ 63, 234, 215,  50], device='cuda:0'), tensor([197, 440, 121, 316,  32,  63, 121,  32, 453,  31, 300, 436],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([305, 298, 292,  73, 399,  49, 440, 440], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3716, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2442, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6158, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([ 90, 399, 230, 277, 305, 175, 197], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([9], device='cuda:0'), tensor([255], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2634, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1623, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4258, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([413, 424,  90, 413,  90, 121, 437, 124,   9], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([10], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([430, 319, 319, 120, 319,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1984, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1467, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3451, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215,
        385,  90, 223, 402, 223], device='cuda:0'), tensor([ 91,  91,  37, 201, 345, 359,  91, 345,  91,  91], device='cuda:0'), tensor([430, 183, 388, 338, 281, 116, 138, 311, 303, 183, 138,  47],
       device='cuda:0'), tensor([436, 294, 294, 436, 294], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([142, 121, 436, 121, 398, 384, 436,  80], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4225, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2937, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7162, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([451], device='cuda:0'), tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93, 270, 279],
       device='cuda:0'), tensor([294, 196, 215, 215, 215], device='cuda:0'), tensor([408], device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2437, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4372, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([294, 249, 316], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0'), tensor([309, 279, 121, 309,  42, 257, 330, 399,  76, 399], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([283, 301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83,
        283,  83, 270, 415,  49, 301, 119, 430, 336,  93, 301],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3756, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2521, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6277, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 13,   9, 436], device='cuda:0'), tensor([294, 394, 411], device='cuda:0'), tensor([406], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338,
        294, 116], device='cuda:0'), tensor([ 90, 371, 430, 371, 424, 371, 371, 420], device='cuda:0'), tensor([301, 439, 436, 439, 436, 439], device='cuda:0'), tensor([408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2703, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2361, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5064, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [019][00020/00055]	Time 0.66 (0.70)	Loss 0.51 (0.65)
		cls_loss 0.27 (0.38)	reg_loss 0.24 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37,
        331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122,  37],
       device='cuda:0'), tensor([415,  82,  76,  93, 424,  82, 399,  44, 237, 405], device='cuda:0'), tensor([ 14, 436,  14], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4323, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3091, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7414, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 302], device='cuda:0'), tensor([408, 436], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([269], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([451, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2608, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1328, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3936, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([ 58, 333,  58], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([158], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3130, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2753, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5883, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 296, 302, 422, 121,  30,  30,  30, 385], device='cuda:0'), tensor([121], device='cuda:0'), tensor([15], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294, 289],
       device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([283, 304, 280], device='cuda:0'), tensor([399], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2727, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1540, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 215, 215, 402, 108], device='cuda:0'), tensor([408, 399], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([ 36,  47, 256, 256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,
         93, 260, 256,  47], device='cuda:0'), tensor([159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279,
        421, 150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([215, 436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350],
       device='cuda:0'), tensor([392,  47, 392, 436, 392], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80,  71, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5643, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3866, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9509, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,
         50, 415,  93], device='cuda:0'), tensor([436, 399, 121, 209, 302, 123, 430, 123, 123, 152, 123, 287, 123],
       device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([392, 146, 146,  51, 100], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325, 127, 325, 430, 127, 224],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5343, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3251, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8595, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 31, 131, 365, 131, 425,  76,  85, 292, 385, 155], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([205], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([258, 345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([107, 107, 107, 107, 107], device='cuda:0'), tensor([ 11, 214,  11, 226, 351, 197, 351], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2363, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5964, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 163], device='cuda:0'), tensor([ 62, 301,  82, 294, 298, 441, 298, 441, 298], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0'), tensor([430,  11, 452, 284,  90], device='cuda:0'), tensor([90], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2230, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1564, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3794, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310, 310], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([121, 436, 103, 385, 103], device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430, 384, 262], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([382,  96, 382], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3735, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2365, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6100, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 436, 402, 452, 437, 300], device='cuda:0'), tensor([280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437,
        425, 150, 437, 150, 397, 249, 394], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([ 47, 256, 195,  47, 388, 260, 256, 109,   8, 325,  82, 436, 325],
       device='cuda:0'), tensor([407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,  21,
        224,  21,  21, 411,  21], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([392, 116,  47,  80, 404, 116,  88, 189], device='cuda:0'), tensor([354, 398, 376,  71], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6452, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3654, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0106, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [019][00030/00055]	Time 0.67 (0.69)	Loss 1.01 (0.77)
		cls_loss 0.65 (0.47)	reg_loss 0.37 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 345,  93, 215], device='cuda:0'), tensor([ 90, 312,  37,  82,  90,  37, 445, 286,  90, 316,  22, 294,  90, 411,
         90, 316, 286, 121, 436, 286, 316, 143], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([451, 258,  71, 411, 399, 188, 430, 425, 411, 207], device='cuda:0'), tensor([205, 436, 345,  30, 443, 436, 294], device='cuda:0'), tensor([256], device='cuda:0'), tensor([93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4442, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2590, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7032, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([438, 396, 438, 291, 438, 291, 438, 291, 396, 438, 291, 438, 385, 291,
        336, 396, 438, 310, 438, 294, 438], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([295], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0'), tensor([166], device='cuda:0'), tensor([ 96,  22, 197, 351, 226, 351, 226,  93, 351, 390, 420, 385, 122,  21,
        305,  21,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5702, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3783, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9486, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([268, 146, 430, 411, 268, 105, 268, 280, 268, 411, 268, 280, 268,  72,
        329, 411,  47,  78, 411, 138,  78, 411], device='cuda:0'), tensor([319, 255], device='cuda:0'), tensor([366, 436, 366], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([ 93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4569, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2949, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7518, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([130, 100, 284, 197, 214, 294, 391, 120], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([220, 137, 357, 431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431,
        294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3769, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3091, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6860, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 47, 260,  17, 116, 388,  93,  19, 109,  80, 303, 116],
       device='cuda:0'), tensor([268, 376], device='cuda:0'), tensor([398, 436, 398], device='cuda:0'), tensor([ 93, 315, 244], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([257, 234,  63, 399, 121, 294], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3571, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2337, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5908, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181,  82, 181, 436,  82, 313,  82, 181,  82, 181], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([226,  71, 338,  16, 197,  11,  71, 305, 286,  31,  31],
       device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([431, 385, 329, 294, 431,  82, 431, 441, 431,   9, 431, 441, 431, 385,
        431, 441, 220,  49, 441, 431], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([240], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3180, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7603, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([159,  15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451],
       device='cuda:0'), tensor([396, 108], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223,  50, 310], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([21], device='cuda:0'), tensor([ 98, 451, 121, 305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3517, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3011, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6527, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  83, 405, 302], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([ 90,  11, 429], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([197,  50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2880, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2406, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5285, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([369, 369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
       device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159], device='cuda:0'), tensor([305], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2239, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1851, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4090, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 412, 412, 354, 412, 138, 398, 256, 412, 412, 412, 354, 412, 354,
        412, 138, 398, 256, 412, 412, 412, 138, 398, 354, 412, 256, 412, 412,
        354, 412, 138, 398, 256, 412, 412, 412, 411, 412, 411, 138, 429, 398,
        429, 412, 411, 412, 354, 412, 138, 256, 398, 354, 412, 256, 412, 412,
        354, 412, 412, 354, 412, 138, 256, 398, 256, 412, 412, 354, 412, 354,
        412, 138, 398, 354, 412, 256], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([332, 156, 156,  71,  83,  93, 420, 254,  40,  11, 217,  11,  11,  71,
         11, 420], device='cuda:0'), tensor([93], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([191], device='cuda:0')]
yes3 {'cls_loss': tensor(0.8467, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5886, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.4353, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [019][00040/00055]	Time 0.65 (0.68)	Loss 1.44 (0.94)
		cls_loss 0.85 (0.56)	reg_loss 0.59 (0.37)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([213,  96, 280, 121, 385,  16, 385, 107, 415,  16, 399, 121,  16, 286,
         16, 436,  16, 286, 294], device='cuda:0'), tensor([ 16, 219, 155, 219], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([47], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2639, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1978, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4617, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  83,  16,  22, 215, 441], device='cuda:0'), tensor([256, 325, 354, 404,  47, 116,  47, 256, 388, 109, 116, 183, 325, 354],
       device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([436,  52,  44, 302,  52, 131,  40, 121,  75], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4614, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2976, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7590, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([437,  87, 137], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([332, 399,  59,  63,  59, 257, 279,  30], device='cuda:0'), tensor([403,  63, 319,  30,  50, 201, 451, 201, 280], device='cuda:0'), tensor([65], device='cuda:0'), tensor([284], device='cuda:0'), tensor([15], device='cuda:0'), tensor([451, 176, 176, 176, 176, 176,  46, 120, 120,  46], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2542, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1592, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4134, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([  9, 305], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([253,  87, 140, 316], device='cuda:0'), tensor([436, 385, 436, 282, 226, 279, 226, 279, 197,  10,  93,  10,  87, 436,
        441, 436,  93, 441, 436, 345, 100, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3282, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2257, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5538, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 301,  43, 351, 197], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268,  85], device='cuda:0'), tensor([408], device='cuda:0'), tensor([220, 137,  93, 430,  10, 220, 242, 357, 431,  10], device='cuda:0'), tensor([215], device='cuda:0'), tensor([110, 197, 316], device='cuda:0'), tensor([121, 138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436,
        215, 344,  85, 293,  84,  85,  44, 438], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3937, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6809, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146, 268], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([256], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([89], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2468, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1764, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4232, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([31], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399],
       device='cuda:0'), tensor([116, 116, 138, 294, 362, 362, 146], device='cuda:0'), tensor([98], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0'), tensor([451, 191, 108], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2627, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1866, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4493, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([108, 348, 354], device='cuda:0'), tensor([399, 142,  80, 142,  80, 114], device='cuda:0'), tensor([142, 351, 142, 351, 142, 351, 196, 351, 429, 351, 429, 351, 231, 196,
        280, 280, 280, 305, 345], device='cuda:0'), tensor([ 80,  80, 121,   8, 217,  47,  55, 453,  47, 294, 294, 385,   8, 404,
         47, 435], device='cuda:0'), tensor([264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([ 44,  73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437, 315, 437,
        315, 120], device='cuda:0'), tensor([385, 385, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6821, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4647, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1468, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([362], device='cuda:0'), tensor([407, 437,  21, 168, 100,  21, 437,  21, 329, 292,  21, 437,  21,  42,
         21, 237, 443,  21, 437, 407, 302,  95], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([437,  93, 437, 294, 345, 294, 437, 294, 437, 286, 280, 437, 286, 345,
        437, 286], device='cuda:0'), tensor([268], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4616, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2967, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7583, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([ 65, 294,  65, 124, 144,  23], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 50, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([120,  82, 255,  82, 294,  82, 134, 255,  31], device='cuda:0'), tensor([431,  71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22,
        167, 220,  71, 167,   5], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4393, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3086, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7479, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [019][00050/00055]	Time 0.65 (0.68)	Loss 0.75 (0.90)
		cls_loss 0.44 (0.54)	reg_loss 0.31 (0.36)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 268], device='cuda:0'), tensor([219, 181], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([256], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([392, 392, 392, 306], device='cuda:0'), tensor([ 88, 100,  88, 100, 209], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2075, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1349, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3424, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 443], device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44],
       device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([447, 436, 246, 436,  82,   0], device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4247, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2899, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7147, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,   8, 395,
        205, 326, 395,  85, 417, 159], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([405, 420, 405, 168, 405,  82, 213, 285, 405, 294,  21],
       device='cuda:0'), tensor([116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([224], device='cuda:0'), tensor([392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4631, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3558, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8189, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([268], device='cuda:0'), tensor([113, 441, 279, 248, 415,  23, 217, 441], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([228, 430, 223,  93, 223, 436, 399, 384, 270, 241, 415, 430, 294, 223,
        223,  82, 248, 138, 164, 147,  93], device='cuda:0'), tensor([316, 436, 316], device='cuda:0'), tensor([295, 295, 295, 295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4036, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2650, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6686, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 19 finished with lr=0.00008635

dataset_name None

Start testing model LocPointTransformer ...
eval <libs.utils.metrics.ANETdetection object at 0x7f8410d8be50>
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00010/00444]	Time 0.46 (0.46)
loss {'cls_loss': tensor(0.0628, device='cuda:0'), 'reg_loss': tensor(0.0624, device='cuda:0'), 'final_loss': tensor(0.1252, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00020/00444]	Time 0.42 (0.44)
loss {'cls_loss': tensor(0.2147, device='cuda:0'), 'reg_loss': tensor(0.1641, device='cuda:0'), 'final_loss': tensor(0.3787, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00030/00444]	Time 0.40 (0.43)
loss {'cls_loss': tensor(0.1661, device='cuda:0'), 'reg_loss': tensor(0.1011, device='cuda:0'), 'final_loss': tensor(0.2673, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00040/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.3545, device='cuda:0'), 'reg_loss': tensor(0.2266, device='cuda:0'), 'final_loss': tensor(0.5811, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00050/00444]	Time 0.41 (0.42)
loss {'cls_loss': tensor(0.8419, device='cuda:0'), 'reg_loss': tensor(0.4399, device='cuda:0'), 'final_loss': tensor(1.2818, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00060/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.1731, device='cuda:0'), 'reg_loss': tensor(0.1472, device='cuda:0'), 'final_loss': tensor(0.3203, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00070/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.3059, device='cuda:0'), 'reg_loss': tensor(0.1460, device='cuda:0'), 'final_loss': tensor(0.4518, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00080/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.0616, device='cuda:0'), 'reg_loss': tensor(0.0298, device='cuda:0'), 'final_loss': tensor(0.0914, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00090/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.4899, device='cuda:0'), 'reg_loss': tensor(0.2644, device='cuda:0'), 'final_loss': tensor(0.7543, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00100/00444]	Time 0.43 (0.42)
loss {'cls_loss': tensor(0.3316, device='cuda:0'), 'reg_loss': tensor(0.3056, device='cuda:0'), 'final_loss': tensor(0.6373, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00110/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.6426, device='cuda:0'), 'reg_loss': tensor(0.5776, device='cuda:0'), 'final_loss': tensor(1.2202, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00120/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.5544, device='cuda:0'), 'reg_loss': tensor(0.3371, device='cuda:0'), 'final_loss': tensor(0.8915, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00130/00444]	Time 0.39 (0.42)
loss {'cls_loss': tensor(0.0265, device='cuda:0'), 'reg_loss': tensor(0.0381, device='cuda:0'), 'final_loss': tensor(0.0646, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00140/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.1270, device='cuda:0'), 'reg_loss': tensor(0.0953, device='cuda:0'), 'final_loss': tensor(0.2223, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00150/00444]	Time 0.42 (0.42)
loss {'cls_loss': tensor(0.0930, device='cuda:0'), 'reg_loss': tensor(0.0994, device='cuda:0'), 'final_loss': tensor(0.1923, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00160/00444]	Time 0.39 (0.41)
loss {'cls_loss': tensor(0.1550, device='cuda:0'), 'reg_loss': tensor(0.0996, device='cuda:0'), 'final_loss': tensor(0.2546, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00170/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.8839, device='cuda:0'), 'reg_loss': tensor(0.5634, device='cuda:0'), 'final_loss': tensor(1.4473, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00180/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.5228, device='cuda:0'), 'reg_loss': tensor(0.4798, device='cuda:0'), 'final_loss': tensor(1.0027, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00190/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.3297, device='cuda:0'), 'reg_loss': tensor(0.1916, device='cuda:0'), 'final_loss': tensor(0.5213, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00200/00444]	Time 0.39 (0.41)
loss {'cls_loss': tensor(0.0591, device='cuda:0'), 'reg_loss': tensor(0.0282, device='cuda:0'), 'final_loss': tensor(0.0873, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00210/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.1930, device='cuda:0'), 'reg_loss': tensor(0.2025, device='cuda:0'), 'final_loss': tensor(0.3955, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00220/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.0928, device='cuda:0'), 'reg_loss': tensor(0.0594, device='cuda:0'), 'final_loss': tensor(0.1522, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00230/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.0678, device='cuda:0'), 'reg_loss': tensor(0.0267, device='cuda:0'), 'final_loss': tensor(0.0945, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00240/00444]	Time 0.38 (0.41)
loss {'cls_loss': tensor(0.0488, device='cuda:0'), 'reg_loss': tensor(0.0300, device='cuda:0'), 'final_loss': tensor(0.0788, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00250/00444]	Time 0.39 (0.41)
loss {'cls_loss': tensor(0.0906, device='cuda:0'), 'reg_loss': tensor(0.0883, device='cuda:0'), 'final_loss': tensor(0.1790, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00260/00444]	Time 0.43 (0.41)
loss {'cls_loss': tensor(0.6422, device='cuda:0'), 'reg_loss': tensor(0.5746, device='cuda:0'), 'final_loss': tensor(1.2168, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00270/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.1892, device='cuda:0'), 'reg_loss': tensor(0.1414, device='cuda:0'), 'final_loss': tensor(0.3305, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00280/00444]	Time 0.39 (0.41)
loss {'cls_loss': tensor(0.1597, device='cuda:0'), 'reg_loss': tensor(0.1825, device='cuda:0'), 'final_loss': tensor(0.3422, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00290/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.1630, device='cuda:0'), 'reg_loss': tensor(0.0782, device='cuda:0'), 'final_loss': tensor(0.2413, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00300/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.8906, device='cuda:0'), 'reg_loss': tensor(0.6100, device='cuda:0'), 'final_loss': tensor(1.5006, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00310/00444]	Time 0.39 (0.41)
loss {'cls_loss': tensor(0.4553, device='cuda:0'), 'reg_loss': tensor(0.4183, device='cuda:0'), 'final_loss': tensor(0.8736, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00320/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.0249, device='cuda:0'), 'reg_loss': tensor(0.0274, device='cuda:0'), 'final_loss': tensor(0.0523, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00330/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.7369, device='cuda:0'), 'reg_loss': tensor(0.6492, device='cuda:0'), 'final_loss': tensor(1.3861, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00340/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.1710, device='cuda:0'), 'reg_loss': tensor(0.1260, device='cuda:0'), 'final_loss': tensor(0.2970, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00350/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.1259, device='cuda:0'), 'reg_loss': tensor(0.0569, device='cuda:0'), 'final_loss': tensor(0.1828, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00360/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.2037, device='cuda:0'), 'reg_loss': tensor(0.1690, device='cuda:0'), 'final_loss': tensor(0.3726, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00370/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.0812, device='cuda:0'), 'reg_loss': tensor(0.0466, device='cuda:0'), 'final_loss': tensor(0.1278, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00380/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.0434, device='cuda:0'), 'reg_loss': tensor(0.0384, device='cuda:0'), 'final_loss': tensor(0.0817, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00390/00444]	Time 0.41 (0.41)
loss {'cls_loss': tensor(0.7120, device='cuda:0'), 'reg_loss': tensor(0.3423, device='cuda:0'), 'final_loss': tensor(1.0543, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00400/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.5437, device='cuda:0'), 'reg_loss': tensor(0.3481, device='cuda:0'), 'final_loss': tensor(0.8917, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00410/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.2198, device='cuda:0'), 'reg_loss': tensor(0.1216, device='cuda:0'), 'final_loss': tensor(0.3414, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00420/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.1963, device='cuda:0'), 'reg_loss': tensor(0.1292, device='cuda:0'), 'final_loss': tensor(0.3256, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00430/00444]	Time 0.42 (0.41)
loss {'cls_loss': tensor(0.5000, device='cuda:0'), 'reg_loss': tensor(0.4723, device='cuda:0'), 'final_loss': tensor(0.9723, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
Test: [00440/00444]	Time 0.40 (0.41)
loss {'cls_loss': tensor(0.1779, device='cuda:0'), 'reg_loss': tensor(0.0648, device='cuda:0'), 'final_loss': tensor(0.2427, device='cuda:0')}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
t-start,end [162.16107   86.37828  131.44386  106.657326 418.2802    94.36229
 171.90236  312.605    199.85425  284.04645  454.20822  441.07376
 393.57852  414.15735  176.51642   -0.       143.41087  375.93158
  98.88456   82.78377 ] [170.87909 106.40123 163.1167  125.79409 446.13788 141.05183 185.51636
 349.60217 232.31049 322.05045 528.24817 550.7743  411.86914 420.29044
 203.48676  80.05852 159.72287 399.3563  107.61941  90.64896]
label [436  88  88  72  88  88  88  88  88  88 354  80  88  88  88 354  88 268
  88  88]
label_len 888000
gt [430  88  72  88 436  88  72  88  91 411 209  88 424  88 247  80   9 430
 120 253]
gt_len 3205
score [0.526493   0.32780376 0.2821333  0.24985768 0.24165905 0.2403343
 0.2329247  0.23271798 0.22588454 0.2255107  0.21806312 0.20625669
 0.20526598 0.20473531 0.19906285 0.19856307 0.18832868 0.18660891
 0.185744   0.18185307]
gt_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f8410c6efd0>
pre_label <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7f8410c6e6a0>
pred_label
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '92' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '317' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '364' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '428' were provdied.
Warning: No predictions of label '3' were provdied.
Warning: No predictions of label '26' were provdied.
Warning: No predictions of label '28' were provdied.
Warning: No predictions of label '39' were provdied.
Warning: No predictions of label '66' were provdied.
Warning: No predictions of label '92' were provdied.
Warning: No predictions of label '97' were provdied.
Warning: No predictions of label '106' were provdied.
Warning: No predictions of label '112' were provdied.
Warning: No predictions of label '145' were provdied.
Warning: No predictions of label '154' were provdied.
Warning: No predictions of label '160' were provdied.
Warning: No predictions of label '170' were provdied.
Warning: No predictions of label '178' were provdied.
Warning: No predictions of label '179' were provdied.
Warning: No predictions of label '261' were provdied.
Warning: No predictions of label '265' were provdied.
Warning: No predictions of label '266' were provdied.
Warning: No predictions of label '297' were provdied.
Warning: No predictions of label '317' were provdied.
Warning: No predictions of label '321' were provdied.
Warning: No predictions of label '347' were provdied.
Warning: No predictions of label '364' were provdied.
Warning: No predictions of label '368' were provdied.
Warning: No predictions of label '372' were provdied.
Warning: No predictions of label '375' were provdied.
Warning: No predictions of label '381' were provdied.
Warning: No predictions of label '428' were provdied.
ap[0] [1.47841252e-01 3.33333333e-01 0.00000000e+00 0.00000000e+00
 7.24195725e-02 6.49160789e-03 5.00000000e-01 1.34925366e-01
 4.79558147e-02 3.83192254e-02 3.85861199e-02 8.10353065e-02
 6.94444444e-03 2.00000000e-01 0.00000000e+00 4.94181472e-02
 9.04858842e-03 0.00000000e+00 0.00000000e+00 0.00000000e+00
 5.00000000e-01 8.57811964e-02 1.80523706e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 2.00000000e-01
 0.00000000e+00 0.00000000e+00 1.13980369e-02 1.54747265e-02
 3.71988493e-02 5.00000000e-01 0.00000000e+00 1.20931747e-01
 1.83139989e-02 1.00000000e+00 0.00000000e+00 9.09090909e-02
 0.00000000e+00 1.48809524e-03 5.06094617e-02 4.35777316e-02
 0.00000000e+00 9.52380952e-02 9.09470002e-02 0.00000000e+00
 1.32391880e-04 7.70316688e-03 0.00000000e+00 6.52175266e-03
 0.00000000e+00 1.00000000e+00 9.61538462e-03 9.09090909e-02
 3.33333333e-01 2.53159041e-01 2.94117647e-02 2.50000000e-01
 1.02145046e-03 1.05211364e-01 3.02867384e-01 4.64474084e-01
 0.00000000e+00 0.00000000e+00 1.78571429e-02 1.00000000e+00
 5.36049317e-02 9.33287785e-04 4.16666667e-02 5.63123436e-04
 0.00000000e+00 0.00000000e+00 1.93956429e-02 1.00000000e+00
 0.00000000e+00 5.00000000e-01 1.28873862e-01 0.00000000e+00
 2.75999199e-02 1.80199737e-02 0.00000000e+00 0.00000000e+00
 1.17845118e-01 1.30930299e-03 2.59178266e-02 2.28571429e-01
 6.80592149e-02 1.79800222e-01 0.00000000e+00 3.82036371e-02
 0.00000000e+00 6.12745098e-02 1.73428138e-02 0.00000000e+00
 6.66666667e-02 0.00000000e+00 2.37807034e-02 0.00000000e+00
 0.00000000e+00 4.16666667e-02 6.50505893e-02 0.00000000e+00
 2.84154402e-02 2.42327600e-02 3.22446950e-02 8.57632933e-05
 0.00000000e+00 1.46320518e-03 0.00000000e+00 6.91073937e-03
 1.17397473e-01 1.75000000e-01 3.27653997e-04 5.06665924e-02
 6.04075407e-03 0.00000000e+00 0.00000000e+00 8.97886753e-02
 0.00000000e+00 4.92424242e-02 1.09610175e-02 0.00000000e+00
 1.00000000e-01 2.50000000e-02 8.81621296e-03 1.11111111e-01
 0.00000000e+00 3.10424426e-01 0.00000000e+00 0.00000000e+00
 4.38895658e-02 8.06610332e-02 1.00000000e+00 0.00000000e+00
 3.46645916e-01 1.38282707e-01 0.00000000e+00 1.71584699e-01
 0.00000000e+00 7.79138175e-02 0.00000000e+00 1.00000000e+00
 0.00000000e+00 1.34138162e-03 9.09090909e-02 1.94444444e-02
 0.00000000e+00 0.00000000e+00 6.14439324e-04 1.42857143e-01
 0.00000000e+00 1.00000000e-01 6.52717898e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.00000000e-01 1.12452652e-01
 1.29411765e-01 6.17723299e-02 8.16326531e-04 9.09090909e-02
 0.00000000e+00 0.00000000e+00 1.00000000e+00 0.00000000e+00
 1.00000000e-01 2.17293615e-02 0.00000000e+00 0.00000000e+00
 3.68421053e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 5.01208851e-02 1.49296237e-01 2.69493953e-02 1.53846154e-02
 3.23624595e-03 0.00000000e+00 7.00000000e-02 0.00000000e+00
 5.00000000e-01 1.38888889e-02 6.35928159e-02 5.00000000e-01
 0.00000000e+00 9.09090909e-02 4.07697326e-05 0.00000000e+00
 1.83083163e-01 0.00000000e+00 1.25000000e-01 2.29390536e-02
 1.00000000e+00 0.00000000e+00 5.05050505e-03 1.07142857e-01
 5.26315789e-02 1.00000000e-01 9.80392157e-02 2.35515780e-04
 2.69841270e-02 0.00000000e+00 4.94056888e-03 0.00000000e+00
 1.65385862e-02 4.19000934e-02 2.24603219e-02 1.07142857e-01
 1.22769044e-02 2.30754549e-02 3.09535379e-02 7.55714286e-01
 2.91317001e-02 2.34022421e-02 4.27005655e-02 1.80401658e-01
 2.59740260e-03 1.25000000e-01 9.09090909e-02 1.57894737e-01
 0.00000000e+00 0.00000000e+00 1.06844688e-03 0.00000000e+00
 2.03092784e-01 1.39705882e-01 1.68615984e-01 5.70622068e-01
 2.50000000e-01 2.13751710e-01 2.85714286e-02 5.14285714e-01
 9.19654620e-02 0.00000000e+00 8.09771608e-03 2.24939318e-01
 2.57052218e-02 2.50000000e-01 2.52717391e-01 0.00000000e+00
 3.47933884e-01 1.17647059e-02 3.02412394e-01 1.09756397e-01
 2.83039197e-03 1.20196980e-02 2.26154032e-01 9.17469627e-02
 0.00000000e+00 1.66974667e-01 1.38888889e-02 3.10777900e-02
 0.00000000e+00 0.00000000e+00 0.00000000e+00 2.08025373e-01
 1.10021278e-01 2.31290961e-02 4.00000000e-01 0.00000000e+00
 0.00000000e+00 5.46052632e-02 7.69230769e-02 0.00000000e+00
 0.00000000e+00 9.87790803e-03 5.10100432e-02 1.77304965e-03
 2.84090909e-03 2.83962144e-02 1.00000000e-01 7.05037665e-02
 1.00059764e-02 0.00000000e+00 2.50000000e-01 0.00000000e+00
 0.00000000e+00 2.42794486e-02 2.55555556e-02 0.00000000e+00
 2.49724676e-02 1.91717342e-01 1.93269644e-04 0.00000000e+00
 4.77842649e-02 0.00000000e+00 0.00000000e+00 6.37223951e-04
 9.93400056e-03 1.31787032e-04 0.00000000e+00 5.31519678e-02
 4.63482111e-01 4.16666667e-02 2.46940890e-02 1.29870130e-03
 2.08333333e-01 0.00000000e+00 8.46954182e-02 1.66666667e-01
 6.10803091e-04 6.90745039e-02 0.00000000e+00 0.00000000e+00
 8.47265162e-02 2.00000000e-02 0.00000000e+00 0.00000000e+00
 3.33333333e-01 1.80555556e-01 1.53219814e-03 1.45337302e-01
 0.00000000e+00 1.25000000e-01 5.95238095e-03 1.77296182e-01
 4.48933782e-03 8.80414313e-03 0.00000000e+00 8.33333333e-02
 0.00000000e+00 3.67647059e-03 0.00000000e+00 2.79039342e-01
 0.00000000e+00 1.99267943e-01 4.31778929e-04 0.00000000e+00
 2.50000000e-01 0.00000000e+00 3.73130542e-03 6.66666667e-02
 0.00000000e+00 6.66666667e-02 3.83141762e-03 2.42857143e-01
 1.01085585e-02 0.00000000e+00 4.70339070e-02 3.33333333e-01
 4.13034779e-03 4.41867645e-02 2.00000000e-01 5.15124042e-03
 2.00000000e-01 2.00000000e-01 1.48148148e-01 0.00000000e+00
 0.00000000e+00 4.73484848e-04 5.27233115e-03 0.00000000e+00
 0.00000000e+00 3.17127763e-01 0.00000000e+00 1.83150183e-03
 0.00000000e+00 0.00000000e+00 5.00000000e-01 0.00000000e+00
 1.00000000e-01 1.38888889e-02 2.00000000e-01 0.00000000e+00
 1.35610766e-03 0.00000000e+00 0.00000000e+00 5.67129630e-02
 4.81928694e-02 2.23689643e-02 3.16091954e-02 7.93650794e-03
 9.57168790e-03 3.14465409e-03 0.00000000e+00 0.00000000e+00
 3.75115996e-01 1.00000000e-01 3.78467823e-02 1.72438672e-01
 9.30377072e-03 8.40239411e-02 7.19079081e-02 2.11913450e-02
 1.33333333e-01 6.06696779e-02 2.71046909e-02 0.00000000e+00
 3.25306679e-02 4.91666667e-02 6.66666667e-02 1.32695310e-01
 3.90460586e-02 2.50000000e-02 4.16666667e-01 1.35542054e-02
 3.95945422e-02 6.73400673e-03 8.33333333e-02 2.10271966e-02
 2.52229654e-01 4.39814815e-02 7.78816199e-04 3.33333333e-01
 1.56186869e-01 2.10793863e-03 0.00000000e+00 2.27189967e-01
 1.50375743e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.10521662e-04 6.45745602e-02 6.47871092e-02 3.38211382e-01
 4.82198357e-04 0.00000000e+00 0.00000000e+00 1.16934707e-02
 3.92615612e-03 1.12823968e-02 3.24403004e-01 0.00000000e+00
 6.91468889e-02 3.92891239e-03 3.02493694e-02 0.00000000e+00
 0.00000000e+00 0.00000000e+00 2.29586020e-02 0.00000000e+00
 3.36363636e-01 2.99107143e-01 1.14316500e-01 2.52637131e-02
 6.89505234e-05]
[RESULTS] Action detection results on goalstep_train_withID_subset.

|tIoU = 0.30: mAP = 8.81 (%) Recall@1x = 10.35 (%) Recall@5x = 13.97 (%) 
|tIoU = 0.40: mAP = 7.78 (%) Recall@1x = 9.07 (%) Recall@5x = 12.44 (%) 
|tIoU = 0.50: mAP = 6.60 (%) Recall@1x = 7.79 (%) Recall@5x = 10.85 (%) 
|tIoU = 0.60: mAP = 5.46 (%) Recall@1x = 6.42 (%) Recall@5x = 9.00 (%) 
|tIoU = 0.70: mAP = 4.23 (%) Recall@1x = 4.94 (%) Recall@5x = 6.65 (%) 
Average mAP: 6.58 (%)
All done! Total time: 220.67 sec
dataset_name None

[Train]: Epoch 20 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 133, 388,  80, 183,  80,  80], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([142, 436, 443, 341, 443, 142, 443, 124, 142, 166, 294],
       device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([451], device='cuda:0'), tensor([229,  15, 249, 216], device='cuda:0'), tensor([ 93, 393, 100, 393, 385, 393, 305, 393, 305, 393, 305, 159, 393, 100],
       device='cuda:0'), tensor([ 52, 137, 385,  50, 137,  50, 291], device='cuda:0')]
yes3 {'cls_loss': tensor(2.7314, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(1.5444, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(4.2757, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268], device='cuda:0'), tensor([451,  37], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([255], device='cuda:0'), tensor([138, 361, 298,  80], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0'), tensor([ 96, 187,  96, 108,  96, 294,  96], device='cuda:0'), tensor([201, 286, 340, 286, 351, 197, 351, 286, 197, 157, 286, 411, 286, 411,
        286,  90, 312,  37,  82,  90,  37, 445], device='cuda:0')]
yes3 {'cls_loss': tensor(1.5250, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9856, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(2.5106, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([ 32,  95, 415], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([451, 436, 316,  93, 191, 436,  44, 451, 221, 284], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([123, 430, 123, 123, 152, 123, 287, 123, 123, 123, 350, 436, 436, 287,
         87], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0')]
yes3 {'cls_loss': tensor(1.1646, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.7445, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9091, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  50,  50, 217, 436, 294, 215, 415,  83,  23], device='cuda:0'), tensor([116, 138, 232, 388, 232, 388], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0'), tensor([440, 441, 279, 441], device='cuda:0'), tensor([256, 325, 354, 404,  47, 116,  47, 256, 388, 109, 116, 183, 325, 354,
         47], device='cuda:0'), tensor([ 90, 209, 215], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(1.2051, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.6964, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9015, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90,  11,  90,  11, 429], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([306, 256, 306, 256], device='cuda:0'), tensor([ 72, 415, 108], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([365, 131, 425,  76,  85, 292, 385, 155, 131], device='cuda:0'), tensor([406], device='cuda:0'), tensor([417], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4815, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3862, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8677, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 120], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426,
        252, 367, 426, 252, 367, 426, 252, 367,  62], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91, 280], device='cuda:0'), tensor([ 37,  37, 207,  70, 270,  44,  37, 310, 399, 247], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([437,  87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(1.0750, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.9219, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.9968, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([4], device='cuda:0'), tensor([301, 439,  11], device='cuda:0'), tensor([146], device='cuda:0'), tensor([ 91,  31, 294,  31, 294,  91, 150, 150, 302,  85], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4842, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2713, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7556, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([219], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([196, 397, 279, 100, 296, 415, 100, 121,  85, 453,  72, 399, 453, 270],
       device='cuda:0'), tensor([385,   8, 404,  47, 435, 124, 447, 335,  82, 320], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6796, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5126, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1922, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  83,  57, 399], device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19], device='cuda:0'), tensor([392, 100,  80, 100, 100,  80, 100,  80], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([305,  36, 177,  36, 305, 116,  36, 116, 305, 116, 385],
       device='cuda:0'), tensor([  0, 436, 447, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4945, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3353, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 294,   4,   4], device='cuda:0'), tensor([ 46, 197, 283,  46, 108, 209, 338], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([181], device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([15], device='cuda:0'), tensor([89], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2776, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2004, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4780, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([288, 249, 430, 313, 165, 205, 156, 121, 156,  63], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([ 46,  93, 215, 249, 134, 215, 134, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5833, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4300, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0133, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [020][00010/00055]	Time 0.75 (0.75)	Loss 1.01 (1.01)
		cls_loss 0.58 (0.58)	reg_loss 0.43 (0.43)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([398], device='cuda:0'), tensor([184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 76,  98,  91, 302, 451, 286, 424,  91, 451,  91], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4995, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3616, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8611, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415, 385],
       device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([305, 285, 305, 441, 225,  16,  76,  16, 418], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([58], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6076, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4332, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0408, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181, 219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([215], device='cuda:0'), tensor([441, 301,  43, 351, 197,  37, 120,  37,  43,  37], device='cuda:0'), tensor([437, 394,  93, 394,  30, 437, 394, 394,  44, 385, 288],
       device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2747, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6733, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([107, 107,   2,   2,   2], device='cuda:0'), tensor([451, 305, 451, 121, 315, 451, 441,  32, 315], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([264, 409,  44, 319], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4277, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3433, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7710, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  88, 100,  88, 100,  99,  88, 100,  88,  88, 100,  88, 100],
       device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([ 11, 452, 284,  90,  80], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([256], device='cuda:0'), tensor([392, 392, 268, 268, 268,  71, 268,   5, 392, 268, 268, 268, 268, 268,
          5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,
          5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447],
       device='cuda:0'), tensor([197,  50,  11,  50,  90,  50,  90,  50,  90,  50, 121, 159, 121],
       device='cuda:0'), tensor([90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6614, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5965, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2579, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([116, 116, 116, 116, 116, 404, 138], device='cuda:0'), tensor([453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2084, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2067, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4152, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([269, 433, 323, 323, 121, 269], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181], device='cuda:0'), tensor([408], device='cuda:0'), tensor([319, 121, 316,  15, 121, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2635, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2194, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4830, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121, 298], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([354, 370, 213, 183, 354, 404, 124, 130, 446, 166, 130, 378, 166],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([105,  31], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([295, 295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2702, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1628, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4330, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([191], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([ 80, 354], device='cuda:0'), tensor([423, 136, 423], device='cuda:0'), tensor([98], device='cuda:0'), tensor([371, 201,  90, 371, 430], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([284], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1800, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1325, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3124, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([201], device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([ 93, 384,  11,  43,  32, 309, 429, 451, 215], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453, 281], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3116, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2076, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5192, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [020][00020/00055]	Time 0.64 (0.70)	Loss 0.52 (0.77)
		cls_loss 0.31 (0.45)	reg_loss 0.21 (0.32)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 408, 408], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([379, 430, 309,  50], device='cuda:0'), tensor([ 93, 249, 305, 175, 223], device='cuda:0'), tensor([ 15, 294,  15,  15], device='cuda:0'), tensor([120, 453,  44,  87, 436, 405, 100, 385, 436,  93, 291, 121, 291, 121,
        115, 436,  10, 357, 296, 223], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4095, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2558, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6653, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([256, 438, 268, 138,  70, 256, 354, 438, 268, 268, 256, 430, 438, 268,
        256, 138,  70, 398, 441, 302, 249,  93, 399, 441, 385, 302],
       device='cuda:0'), tensor([215, 345, 215, 150, 215, 296, 215, 105, 215, 340, 215, 217, 215, 215],
       device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([436], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([404, 385], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6956, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4878, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1834, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([354, 108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([142,  80, 142,  80, 114,  80], device='cuda:0'), tensor([295], device='cuda:0'), tensor([264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329, 329, 441],
       device='cuda:0'), tensor([408, 402, 158], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3778, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2321, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6099, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 441,  49, 408,  22,  50], device='cuda:0'), tensor([412, 357, 398, 357, 412, 357, 357, 398, 412], device='cuda:0'), tensor([255], device='cuda:0'), tensor([404, 285, 213, 430, 183, 388, 338, 281, 116, 138, 311, 303],
       device='cuda:0'), tensor([268], device='cuda:0'), tensor([166], device='cuda:0'), tensor([250, 432, 250, 244], device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3187, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2061, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5249, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 163, 398, 163], device='cuda:0'), tensor([115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193, 163, 304],
       device='cuda:0'), tensor([  7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50,
        436, 221, 121, 191], device='cuda:0'), tensor([ 64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([65], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5226, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3200, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8426, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([113], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([255], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([ 90, 279,  90, 258,  90,  11, 279,  11,  11, 279,  11, 121, 201,  93,
        279, 283, 279, 121, 283,  98, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3000, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2844, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5844, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([ 63,  87, 121,   9,  12, 425,  63, 165], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([21], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([370,  80,  80, 443,  93, 166], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3485, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2837, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6322, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 354, 100, 392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354,
        256, 100, 392, 129], device='cuda:0'), tensor([240], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([441, 301, 433, 294, 385, 385, 217, 385, 121, 441], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([449, 449, 449, 449, 449], device='cuda:0'), tensor([408, 408, 436, 408, 415, 408, 385, 384, 279, 436,  11,  46],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.6807, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4754, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1561, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([351, 294, 351,  93,  93, 351,  93, 351,  93, 295, 351, 325],
       device='cuda:0'), tensor([257, 453, 424, 113, 150, 292, 415,  22, 247, 234, 247, 294, 424, 150,
        433, 247, 218, 214], device='cuda:0'), tensor([88], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4143, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2985, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7128, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([215, 121, 215, 100,  37, 257, 430, 451], device='cuda:0'), tensor([ 80, 177, 398, 385,  80], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2590, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2275, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4865, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [020][00030/00055]	Time 0.66 (0.68)	Loss 0.49 (0.67)
		cls_loss 0.26 (0.38)	reg_loss 0.23 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 40, 215, 294], device='cuda:0'), tensor([215, 292,  16, 292,  49,  16,  96, 215,  49, 215, 302, 357, 399,  16,
        401,  96, 399, 302, 294, 121,  16, 201, 217], device='cuda:0'), tensor([186, 325, 186, 404, 338,  47, 362, 325, 294, 294, 116, 404, 146, 325,
        146, 345], device='cuda:0'), tensor([234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385, 393,
        382, 234, 303, 382, 181,   9, 181, 315, 181], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9, 436], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116, 195, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.8296, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4827, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.3123, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234], device='cuda:0'), tensor([173, 125, 341, 411, 319], device='cuda:0'), tensor([215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85, 293,  84,  85,
         44, 438, 345, 167, 108, 436, 241, 387], device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([279, 236, 415, 415, 352, 445,  12, 415, 100, 279, 130, 258, 108,  50],
       device='cuda:0'), tensor([195, 201, 195, 442, 121, 442, 451, 279, 442,  93], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2639, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6535, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([267], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([286,  16, 436,  16, 286, 294,  71,  16, 286, 105,  16],
       device='cuda:0'), tensor([437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150,
        397, 249, 394], device='cuda:0'), tensor([294,  65, 124, 144,  23,  82,  65,  82], device='cuda:0'), tensor([224, 316, 195,  50, 451, 251,  22, 251, 279, 121,  59, 358],
       device='cuda:0'), tensor([430, 315,  82, 431, 385, 431, 315, 213, 216, 436,  82, 103, 385, 385,
        103,   8], device='cuda:0'), tensor([316, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4725, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2910, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7635, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([269, 279, 269, 269, 315, 269, 437, 269,  71, 424, 269,  94, 269, 269,
        203, 332], device='cuda:0'), tensor([80], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71, 314, 105, 407], device='cuda:0'), tensor([344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270,
        394, 279, 421, 150, 302, 415, 184, 302, 296, 302], device='cuda:0'), tensor([196, 127, 363, 430, 407, 394, 441, 394, 113,  21, 294,  21],
       device='cuda:0'), tensor([116, 412, 412,  87, 398, 116, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4446, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3188, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7634, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([366, 436, 366,  10], device='cuda:0'), tensor([136, 121, 224, 451, 309, 249,  44, 436, 120, 279,  43, 296, 279, 121],
       device='cuda:0'), tensor([327], device='cuda:0'), tensor([436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([50, 10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2177, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1591, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3768, device='cuda:0', grad_fn=<AddBackward0>)}
feats torch.Size([2502, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([420, 451, 420], device='cuda:0'), tensor([256], device='cuda:0'), tensor([399, 302, 408], device='cuda:0'), tensor([436, 407, 410, 280, 270], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2388, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1577, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3965, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([260,  44, 447, 294, 392, 100], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([220, 292,  49, 415,  85], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 78, 279, 223, 228, 430, 223,  93, 223, 436, 399, 384, 270],
       device='cuda:0'), tensor([294, 429, 354, 121,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4066, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2647, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6713, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 315, 436, 315, 108,   8], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([436,  10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,
         10, 436,  10, 315], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([440,  71,  37], device='cuda:0'), tensor([404, 116,  47, 116, 116, 100], device='cuda:0'), tensor([225], device='cuda:0'), tensor([15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2380, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1933, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4313, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([134, 301, 294,  71,  79, 294,  82], device='cuda:0'), tensor([280], device='cuda:0'), tensor([268, 268, 268, 268], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76, 385],
       device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([436, 137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([256], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2989, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1734, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4723, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([399], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([177, 270, 386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,  50,
        415,  93], device='cuda:0'), tensor([438, 121, 113, 438, 385,  90, 438, 396, 411, 342, 415, 309, 415, 309,
        201,  32, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3998, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2588, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6586, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [020][00040/00055]	Time 0.67 (0.68)	Loss 0.66 (0.67)
		cls_loss 0.40 (0.39)	reg_loss 0.26 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([320, 124, 100, 383, 109, 388, 330,   8, 383, 385, 281, 183, 325, 415,
        124, 124,  51,   8, 385,  47, 109, 195], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([451], device='cuda:0'), tensor([406, 140, 451, 300], device='cuda:0'), tensor([264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223,
        215, 385,  90], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([436, 351, 436, 359, 436, 359, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4717, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3497, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8214, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 256, 256], device='cuda:0'), tensor([405, 294,  21, 302,  95], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332, 337, 337], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325], device='cuda:0'), tensor([182, 182, 453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80,
        116], device='cuda:0'), tensor([269], device='cuda:0'), tensor([316, 142, 436, 142, 142], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3870, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2321, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6191, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 121], device='cuda:0'), tensor([268], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 37, 436,  37,  22,  22,  37,  49, 122,  37,  37, 217, 329,  37, 282,
        121,  37, 447, 385, 407], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2683, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1979, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4661, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([384, 385,  11, 121,  11, 197,  44, 385, 441, 385], device='cuda:0'), tensor([408], device='cuda:0'), tensor([439, 439, 257,   9, 439, 439, 439], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([ 96, 392, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1724, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1318, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3042, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([362, 105], device='cuda:0'), tensor([121, 351, 127, 351, 351, 351, 351, 231, 351, 150, 215, 385, 100],
       device='cuda:0'), tensor([431, 431, 181, 329, 137, 220, 220, 181,  80, 357, 431,  80, 220, 181,
        220, 181, 220, 451,  71, 181, 220, 181, 217, 137, 357, 431, 220, 137,
        357, 431, 137, 220, 220, 357, 431, 220], device='cuda:0'), tensor([121, 280,  93,  12, 121, 432, 408, 286, 283, 280, 279, 121, 345, 121,
        437,  93, 437, 294, 345, 294], device='cuda:0'), tensor([167, 231,  22, 167, 220,  71, 167,   5, 167, 431, 268, 415,  22,  50,
        268,  50, 412, 415, 356, 251, 138,  50, 152, 360, 436, 282,  50,  50],
       device='cuda:0'), tensor([146, 182, 392,   5, 146, 182], device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0')]
yes3 {'cls_loss': tensor(0.7471, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.5509, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.2980, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([ 50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221,
        196, 316], device='cuda:0'), tensor([228,   9], device='cuda:0'), tensor([296], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([402, 384, 215, 215], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([268, 268,   5, 430, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2923, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2226, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5149, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 96, 105, 226,  71, 338,  16, 197,  11,  71, 305, 286],
       device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([445, 340, 277, 279, 236,  31, 415,  63], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([  8,  32, 385, 430,   7, 121,   7,   7, 121,   7, 437,   7, 437],
       device='cuda:0'), tensor([295, 181], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394,  70],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3648, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2600, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6248, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([50], device='cuda:0'), tensor([305], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([255], device='cuda:0'), tensor([215], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([429, 398, 429, 412, 411, 412, 354, 412, 138, 256, 398, 354, 412, 256,
        412, 412, 354, 412, 412, 354, 412, 138, 256, 398, 256, 412, 412, 354,
        412, 354, 412, 138, 398, 354, 412, 256, 412, 412, 354, 412, 138, 398,
        256, 412, 412, 412, 354, 412, 138, 398, 256, 412, 354, 412, 138, 398,
        354, 412, 256, 412, 412, 412, 138, 398, 354, 412, 256, 138, 398, 354],
       device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5992, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9707, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([351, 390, 420, 385, 122,  21, 305,  21,  30,  21, 286,  21, 286, 105,
         95, 273, 135, 135], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([44], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([93], device='cuda:0'), tensor([209, 225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2636, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1832, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4468, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 116, 116, 306, 306], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([377,  93, 443], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([354, 389,  93,  36,  36, 116, 116,  36, 260,  36, 260,  36, 116, 133,
        404, 389], device='cuda:0'), tensor([316, 433, 316, 100, 257], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3791, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2183, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5974, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [020][00050/00055]	Time 0.66 (0.68)	Loss 0.60 (0.65)
		cls_loss 0.38 (0.39)	reg_loss 0.22 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 108],
       device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([447, 438, 121, 215,  76,  37, 399, 113,  37,  37, 150],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([215,  83, 405], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3385, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3002, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6388, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 15,  71, 436, 120, 399, 156], device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([9], device='cuda:0'), tensor([239, 120, 295, 295, 295, 295], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([451, 279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3621, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6272, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434, 438],
       device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([306, 306, 306, 268, 306, 268, 268, 306, 268, 306, 306],
       device='cuda:0'), tensor([116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,
         47, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3986, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3429, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7415, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([220, 137,  93, 430,  10, 220, 242, 357, 431,  10], device='cuda:0'), tensor([256], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([ 37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411,
        411,  50, 157,  90, 157,  37], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([ 43, 402, 305, 128, 236, 128, 128, 241, 305, 394,  50,  50,  50, 402,
        294], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5050, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3332, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8383, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 20 finished with lr=0.00008360


[Train]: Epoch 21 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 121], device='cuda:0'), tensor([376, 268, 376, 268,  80, 268,  80], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0'), tensor([120, 201, 430, 201, 316, 316, 316, 305, 366], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([248, 340, 236, 121], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2572, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1772, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4345, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([408], device='cuda:0'), tensor([191], device='cuda:0'), tensor([215,  83, 405, 302], device='cuda:0'), tensor([ 44, 416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([280, 280, 305, 345, 201, 305, 305, 394, 201, 305, 302, 305, 217, 305,
        402, 305, 149, 302], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2944, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2149, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5093, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 249, 316], device='cuda:0'), tensor([116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([215,  83, 436,  71, 436,  10,   9, 298, 279,  71, 282, 436, 385, 436,
        282, 226, 279, 226, 279, 197,  10,  93,  10,  87, 436],
       device='cuda:0'), tensor([121,  83,  57, 399], device='cuda:0'), tensor([264, 292, 399, 142,  80, 142,  80], device='cuda:0'), tensor([  4, 358, 294], device='cuda:0'), tensor([80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3740, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2692, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6432, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([379, 430, 309,  50], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([384, 411, 177, 270, 386,   9, 386, 184, 195, 415, 296, 121],
       device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([ 30, 408, 408, 408], device='cuda:0'), tensor([219, 181, 181, 181, 219, 181], device='cuda:0'), tensor([298, 441, 298, 441, 298, 441,  96, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3640, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3024, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6663, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 430,  11, 452, 284,  90], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([451, 406, 140, 451, 300], device='cuda:0'), tensor([173, 125, 341, 411], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([148], device='cuda:0'), tensor([441,  49, 408,  22,  50], device='cuda:0'), tensor([269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1539, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1150, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2689, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([ 22, 276, 453, 416, 424, 181, 445, 236, 181], device='cuda:0'), tensor([442,  16, 121, 223, 385, 223, 215, 385,  90, 223, 402, 223,  50, 223,
        402, 313, 223, 402, 115, 310,  50], device='cuda:0'), tensor([431, 220, 409, 220, 357, 431, 294, 357, 431, 447, 357, 431, 294],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([181, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4795, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3532, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8327, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([21], device='cuda:0'), tensor([404, 257, 385,  80, 116,  19, 182, 100, 294, 279, 325],
       device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50, 430,
        302, 421, 421, 421], device='cuda:0'), tensor([408], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([ 15,  30, 451, 100, 100, 294, 429], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3062, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2402, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([240], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([316], device='cuda:0'), tensor([90, 11], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1365, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1316, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2681, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([ 96, 315], device='cuda:0'), tensor([ 63, 234, 215,  50,  50, 217], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3107, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2763, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5870, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([127, 142, 127, 337, 345, 332, 337, 337, 214], device='cuda:0'), tensor([301, 436, 439, 436, 439,  11], device='cuda:0'), tensor([292,  16, 292,  49,  16,  96, 215,  49, 215, 302, 357, 399,  16, 401,
         96, 399, 302, 294, 121,  16, 201, 217], device='cuda:0'), tensor([88, 16, 88, 73, 88], device='cuda:0'), tensor([436,  15], device='cuda:0'), tensor([134, 215, 134, 108, 431], device='cuda:0'), tensor([436,  44,  37,  37,  37, 207,  70, 270,  44], device='cuda:0'), tensor([ 46,  72, 415, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4547, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2901, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7448, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 246, 224, 316, 195,  50, 451, 251,  22, 251, 279],
       device='cuda:0'), tensor([93], device='cuda:0'), tensor([451, 436, 316,  93, 191, 436,  44, 451, 221, 284, 436],
       device='cuda:0'), tensor([215, 436, 400, 430, 351, 430, 430, 351, 430, 351,  93],
       device='cuda:0'), tensor([47], device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([ 10, 218], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3651, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2534, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6185, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [021][00010/00055]	Time 0.75 (0.75)	Loss 0.62 (0.62)
		cls_loss 0.37 (0.37)	reg_loss 0.25 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([286, 280, 437, 286, 345, 437, 286, 329, 294,  87, 380, 385,  87, 279,
        437, 150, 294, 437, 108, 219, 432, 219], device='cuda:0'), tensor([451, 451, 451, 451, 451, 155, 451, 451], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([ 63, 177, 380, 209,  88, 354,  88,  80], device='cuda:0'), tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5386, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3650, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9037, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 392,  47, 392, 436, 392], device='cuda:0'), tensor([441, 383, 415, 313, 172, 441, 438, 441, 138, 415, 270, 441],
       device='cuda:0'), tensor([ 63, 436,  80, 354,  93, 120,  93, 183], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([295, 356], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3011, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2169, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5181, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([436, 108,  44, 394, 279, 287,  50, 257, 436, 408, 436, 399, 121, 209,
        302], device='cuda:0'), tensor([116, 256, 354,  47,  36, 354, 183,  36, 256, 256, 325, 354, 404,  47,
        116,  47], device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([249, 340,  21,  21, 441,  72,  21,  21, 201,  21], device='cuda:0'), tensor([256,  80, 109, 325,  47, 256, 195,  47, 388, 260, 256, 109,   8],
       device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4604, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3232, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7837, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([103, 436, 103, 249, 103], device='cuda:0'), tensor([100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100, 392,
        100, 392, 354, 100], device='cuda:0'), tensor([107, 416, 248, 258, 132], device='cuda:0'), tensor([15, 72], device='cuda:0'), tensor([305, 305, 330, 249, 443, 105,  16, 302, 124, 443, 377],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3555, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2282, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5837, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([359, 436, 436], device='cuda:0'), tensor([415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394,
        279, 421, 150, 302, 415, 184, 302, 296, 302, 231], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291, 438, 291, 396, 438],
       device='cuda:0'), tensor([116, 392, 116,  47,  80, 404, 116], device='cuda:0'), tensor([137, 137, 256], device='cuda:0'), tensor([120, 253, 279, 253, 253, 142, 230, 121, 171,  61], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([397, 249, 394], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3487, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2773, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6260, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([401, 424, 280], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([197, 283,  46, 108, 209, 338, 401], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([398], device='cuda:0'), tensor([294, 264, 294, 329,  93, 137,  71, 137,  71, 137, 294, 441, 329],
       device='cuda:0'), tensor([283], device='cuda:0'), tensor([249, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2865, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1985, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4850, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([417, 436], device='cuda:0'), tensor([204, 143, 302], device='cuda:0'), tensor([316, 301], device='cuda:0'), tensor([90], device='cuda:0'), tensor([268, 280, 268,  72, 329, 411,  47,  78, 411, 138,  78, 411, 138, 138,
        138,  73, 298, 138], device='cuda:0'), tensor([98], device='cuda:0'), tensor([359,  44, 359, 201, 359, 451,  71, 201, 359, 280, 402, 294, 249],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3258, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7161, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([423, 136, 423], device='cuda:0'), tensor([283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([14, 30], device='cuda:0'), tensor([417, 221], device='cuda:0'), tensor([311, 303, 183, 138,  47, 213, 281, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2958, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1887, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4844, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([412,  87, 398, 116, 412, 412,  87, 398, 116], device='cuda:0'), tensor([366,  10, 366,  10], device='cuda:0'), tensor([451, 142], device='cuda:0'), tensor([256], device='cuda:0'), tensor([58], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 63, 142, 224, 279, 136, 121, 224, 451, 309], device='cuda:0'), tensor([146, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1891, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1107, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2998, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([155,  22, 159, 159, 120, 415, 430, 257,  31,  49,  24,  49, 181],
       device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([268, 348], device='cuda:0'), tensor([256, 174, 256, 369, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([305], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5043, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4483, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9526, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [021][00020/00055]	Time 0.67 (0.71)	Loss 0.95 (0.79)
		cls_loss 0.50 (0.43)	reg_loss 0.45 (0.35)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([215], device='cuda:0'), tensor([385,  16, 385, 107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286,
        294,  71], device='cuda:0'), tensor([399, 436, 349, 408, 415, 408, 349, 399, 349, 399], device='cuda:0'), tensor([440,  71,  37, 224,  37,  82, 257,  37,  37, 257], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([187, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2831, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2179, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5010, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([392, 100,  80, 100], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([269, 294, 121, 269,  81, 269], device='cuda:0'), tensor([451, 399, 411, 439, 296, 411, 280, 411, 405, 411, 282],
       device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([ 11,  44,  71, 351,  82, 351, 424, 166,  82, 196], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4004, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2478, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6482, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([406], device='cuda:0'), tensor([431, 385, 329, 294, 431,  82, 431, 441, 431,   9, 431, 441, 431, 385,
        431, 441, 220,  49, 441, 431, 436], device='cuda:0'), tensor([244], device='cuda:0'), tensor([294], device='cuda:0'), tensor([390, 453,  93, 393, 100, 393, 385, 393, 305, 393, 305, 393],
       device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3078, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2108, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5187, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([451, 121, 305, 424, 305], device='cuda:0'), tensor([438, 249, 105,  50,  73,  82], device='cuda:0'), tensor([208, 121, 264, 336, 436, 305, 215], device='cuda:0'), tensor([ 15, 436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2975, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2125, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5100, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 214,  11, 226, 351, 197, 351, 197, 351], device='cuda:0'), tensor([316, 302, 441, 302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302],
       device='cuda:0'), tensor([225], device='cuda:0'), tensor([279, 309, 299,  32,  93, 121, 120, 302, 121, 302], device='cuda:0'), tensor([ 93, 215, 225, 424, 225], device='cuda:0'), tensor([ 80, 121, 423, 294,  63,  22, 127, 325, 325], device='cuda:0'), tensor([256], device='cuda:0'), tensor([256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3331, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2238, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5570, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([197, 157, 286, 411, 286, 411, 286,  90, 312,  37,  82,  90,  37, 445,
        286,  90, 316,  22, 294,  90, 411], device='cuda:0'), tensor([ 22, 451,  53, 424, 451], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([319, 121, 224, 147, 438, 147, 224, 217], device='cuda:0'), tensor([354, 330,  80,  80, 338,  80,  47, 354, 443,  88], device='cuda:0'), tensor([441, 301,  43, 351, 197,  37, 120,  37,  43], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3701, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2355, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6055, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,  70,
         82, 152, 164, 121, 251, 164, 121, 415,  93, 270, 279],
       device='cuda:0'), tensor([225, 108, 155, 247, 436, 230], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([215], device='cuda:0'), tensor([ 47, 116, 116, 100, 116, 385, 124], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3884, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3128, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7012, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 73, 401, 441, 451, 305, 451, 121, 315, 451, 441,  32],
       device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([205], device='cuda:0'), tensor([105, 362], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([89], device='cuda:0'), tensor([451, 451, 436,  15, 294,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1645, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1180, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2825, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([  9, 155, 121,  43,  17, 147, 344, 379, 155, 279,  71, 279, 271],
       device='cuda:0'), tensor([159, 322, 383, 383, 430, 319, 319, 120, 319], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4410, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3035, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7445, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([440, 356, 384,  43, 110,  90,  44, 269, 279, 269], device='cuda:0'), tensor([183,  70, 426, 426, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426,
        252, 367], device='cuda:0'), tensor([  9, 294,  62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0'), tensor([284], device='cuda:0'), tensor([256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47,
        256, 116, 195, 325], device='cuda:0'), tensor([262, 121, 262, 100, 262, 100, 430, 384, 262], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4328, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3112, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7441, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [021][00030/00055]	Time 0.67 (0.70)	Loss 0.74 (0.77)
		cls_loss 0.43 (0.43)	reg_loss 0.31 (0.34)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([ 36,  73, 116,  82, 294, 305,  36, 177,  36, 305, 116,  36, 116, 305,
        116, 385], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134, 313, 313,
        447, 138,  93], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3122, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2851, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5973, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([399, 385, 436, 436, 408, 279, 408, 436, 408, 436, 408, 436],
       device='cuda:0'), tensor([385, 384,  81, 384, 100], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([399], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30,   9,
        310], device='cuda:0'), tensor([138, 298,  14], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3236, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2296, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5532, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215,
        344,  85, 293,  84,  85,  44, 438, 345], device='cuda:0'), tensor([405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,  82, 213, 285,
        405, 294], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([220], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443],
       device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([225,  16,  76,  16, 402, 225, 441, 285], device='cuda:0'), tensor([398, 354,  71, 376, 398, 354, 398, 256, 256, 398, 376],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4434, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3934, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8368, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158, 408], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([319, 394, 453, 100,  93,  86, 413, 384, 177, 309], device='cuda:0'), tensor([399, 279,  63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415],
       device='cuda:0'), tensor([144,  23,  82,  65,  82,  65,  82, 124], device='cuda:0'), tensor([402, 384, 215, 215, 215], device='cuda:0'), tensor([319, 100], device='cuda:0'), tensor([131, 117, 271, 121, 316], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2698, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2274, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4972, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([408, 399, 408], device='cuda:0'), tensor([100,  96,  71], device='cuda:0'), tensor([ 83, 181, 415,  32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([121, 223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331,
        450, 223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([ 93, 436, 345, 113, 105, 183, 121, 385, 166,  19, 121, 137, 286, 434,
         55, 385, 279, 121], device='cuda:0'), tensor([295], device='cuda:0'), tensor([305, 256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3723, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2878, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 441, 441], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0'), tensor([255], device='cuda:0'), tensor([305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91,
        257, 305], device='cuda:0'), tensor([394, 257, 441,  44,  22, 384, 436, 384, 438], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([37], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2297, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1590, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3887, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165,
        254, 115, 437, 310, 399, 415, 399], device='cuda:0'), tensor([294, 425,  93, 283, 283, 283, 225, 385], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([146, 182, 392, 146, 146, 182], device='cuda:0'), tensor([354, 447, 401, 399, 121, 408, 430], device='cuda:0'), tensor([313,  83, 436, 280, 193, 163, 304, 437, 436, 279, 296, 302],
       device='cuda:0'), tensor([116,  47, 116, 263, 116, 294, 338, 294, 116,  47, 116,  47, 116, 263],
       device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4846, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3397, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8243, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([412, 357, 412, 357, 398, 357, 412, 357, 357, 398], device='cuda:0'), tensor([ 22, 296, 108, 258,  71, 159], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296, 411],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3535, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2866, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6401, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408,  93], device='cuda:0'), tensor([9], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([80, 88], device='cuda:0'), tensor([256], device='cuda:0'), tensor([4], device='cuda:0'), tensor([294, 294, 298, 436, 294], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.1089, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0917, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2006, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([181], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([ 88, 430,  88,  72,  88, 436,  88,  72,  88,  91, 411, 209,  88, 424,
         88, 247], device='cuda:0'), tensor([296], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2401, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1928, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4329, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [021][00040/00055]	Time 0.66 (0.69)	Loss 0.43 (0.69)
		cls_loss 0.24 (0.39)	reg_loss 0.19 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([249, 155, 131, 191,   9], device='cuda:0'), tensor([408], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([116, 404, 138, 100,   9, 404], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1786, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1447, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3233, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268,   5, 430, 268], device='cuda:0'), tensor([ 80, 303, 116,  51, 116,  19, 116,  93, 447,  68,  47, 443,  93],
       device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3290, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2735, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6025, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([ 93,  32, 201,  11,  78, 175,  71, 121, 436, 402], device='cuda:0'), tensor([ 47,  47,  93,  23, 443,  49,  47,  98, 447,  47, 213,  80,  80, 121,
          8], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([395, 205, 326, 395,  85, 417, 159,  31, 121, 114, 326, 224, 224],
       device='cuda:0'), tensor([ 80, 354, 385, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5287, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3419, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8706, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([373, 234, 382,  30, 105, 436, 382,   8,  71, 234, 415, 282, 270, 385,
        393, 382, 234, 303, 382, 181,   9], device='cuda:0'), tensor([146], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([234, 415, 163], device='cuda:0'), tensor([116, 138,   8, 116, 138,   8, 116, 138, 232], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3462, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1864, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5326, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([421,  82, 421, 228, 415, 155, 155,  82], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425],
       device='cuda:0'), tensor([215,  71, 329,  27,  27, 135, 451, 107,  93, 128,  93, 215, 141],
       device='cuda:0'), tensor([107, 107, 453, 107, 107], device='cuda:0'), tensor([270, 430, 270, 436, 430, 314], device='cuda:0'), tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3803, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2604, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6407, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 88, 100,  88, 100,  88, 100,  88, 100,  88, 100,  99,  88, 100,  88,
         88, 100], device='cuda:0'), tensor([142, 142, 142, 142, 142, 244], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451, 420],
       device='cuda:0'), tensor([438, 305, 438, 305,  44, 305, 443, 434, 438, 220], device='cuda:0'), tensor([283, 304, 280], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([255,  63, 255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414,
        255, 275,   9, 436], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3210, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7600, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  13, 221,  44], device='cuda:0'), tensor([255], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([239, 120, 295, 295, 295, 295], device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1530, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1258, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2788, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([341, 443, 142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([354, 432, 354], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([ 93, 294, 332, 407, 407, 294, 407, 269, 217, 269,  30, 436, 447,  95,
        436], device='cuda:0'), tensor([323, 323, 121, 269, 323], device='cuda:0'), tensor([205, 436, 345,  30, 443, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3985, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2479, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181,  82, 181,  82, 181,  82, 181], device='cuda:0'), tensor([ 16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119, 168],
       device='cuda:0'), tensor([ 71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167,
        220,  71, 167,   5], device='cuda:0'), tensor([ 10, 220, 436,  71,  93,  10, 220, 220, 436, 357, 431],
       device='cuda:0'), tensor([113], device='cuda:0'), tensor([408], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4514, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3205, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7719, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 142, 121, 436, 121, 398, 384], device='cuda:0'), tensor([ 49, 122,  37,  37, 217, 329,  37, 282, 121,  37, 447, 385, 407,  95],
       device='cuda:0'), tensor([ 63, 305, 363, 305, 187, 305, 187, 305, 187, 305, 187, 305],
       device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([436, 334, 436], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([334, 120,  44, 430, 224, 399, 438,  22, 254, 224], device='cuda:0'), tensor([306, 392, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3749, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2814, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6564, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [021][00050/00055]	Time 0.66 (0.68)	Loss 0.66 (0.68)
		cls_loss 0.37 (0.38)	reg_loss 0.28 (0.30)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([  9, 436], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([268], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([359, 108, 354, 108, 121, 108, 392, 385, 281], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0'), tensor([ 50, 250, 432, 250], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2556, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2364, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4919, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 184, 411, 113, 408, 257, 408, 305, 294], device='cuda:0'), tensor([219, 448, 387, 127], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([351, 226,  93, 351, 390, 420, 385, 122,  21, 305,  21,  30,  21, 286,
         21, 286, 105,  95, 273], device='cuda:0'), tensor([433, 356], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([429, 142,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3619, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2620, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6239, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([247, 294, 424, 150, 433, 247, 218, 214, 417, 294,  83, 417, 311, 417,
        388, 417, 411, 417, 417, 417, 314, 417, 417, 417, 436, 417],
       device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([255,  82], device='cuda:0'), tensor([267], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([258, 226], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2583, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2046, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4629, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([205, 302,  52, 121,  52, 436,  52,  52], device='cuda:0'), tensor([234,  63, 399, 121, 294], device='cuda:0'), tensor([50], device='cuda:0'), tensor([436, 359, 436, 359, 441, 359, 203], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215, 204, 215],
       device='cuda:0'), tensor([201, 121, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3678, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2345, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6023, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 21 finished with lr=0.00008065


[Train]: Epoch 22 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([258, 226, 436], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 48, 122,  83, 120, 385, 159, 286, 199, 447,  93,  71,  93, 315, 315,
        447, 315, 431, 315, 315,  93,  48, 447, 365, 431,  83, 447, 447, 315,
         67, 431], device='cuda:0'), tensor([127, 294, 394, 411], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([394, 257, 441,  44,  22, 384, 436, 384, 438, 121], device='cuda:0'), tensor([424, 451, 191, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5931, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3280, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9212, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([225,  50], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([197, 121, 197, 305,  12, 436, 285, 301, 121,  44, 105, 345,  44,  63],
       device='cuda:0'), tensor([415, 163], device='cuda:0'), tensor([196, 294, 294,   9, 313,  52, 294, 181, 294], device='cuda:0'), tensor([436, 357, 436, 313,  83, 436, 280, 193, 163, 304, 437, 436, 279],
       device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4106, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2799, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6905, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([255, 255, 255, 255], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([408, 216, 447, 408], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([ 82,   0,  10,   0, 409], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([63], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1890, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1496, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3386, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 181, 436, 181, 436, 181, 436, 181,  32, 238, 408, 408, 181, 181],
       device='cuda:0'), tensor([302, 245, 385,  82, 188, 294,  30, 254, 302], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([158], device='cuda:0'), tensor([430, 270, 436, 430, 314, 436], device='cuda:0'), tensor([399,  49, 440, 440], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4186, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6901, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 354, 385], device='cuda:0'), tensor([306, 116, 306, 116, 306], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 369, 174, 256],
       device='cuda:0'), tensor([124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196, 221, 196,
        316, 286, 310,  50], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([304, 451, 363], device='cuda:0'), tensor([213, 436, 224, 436, 213,  19, 436, 384,  19, 182, 121, 430, 436,  80,
         47, 436, 325], device='cuda:0'), tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3976, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2960, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6936, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([385, 385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438],
       device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([223, 223, 223, 144, 223, 223], device='cuda:0'), tensor([268], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([240], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3843, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2924, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6767, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 50,  90,  50, 121, 159, 121, 384, 279, 385, 121,  87, 120],
       device='cuda:0'), tensor([ 50, 257, 436, 408, 436, 399, 121, 209, 302, 123, 430, 123, 123],
       device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436], device='cuda:0'), tensor([316, 142, 249, 142, 316,  12, 121], device='cuda:0'), tensor([9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3010, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2021, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5031, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([181, 181, 181, 219, 181], device='cuda:0'), tensor([356, 245,  67,  96,  22, 276, 453, 416, 424], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([121, 319, 121, 316,  15, 121], device='cuda:0'), tensor([439, 133, 121, 187, 305, 354,  96], device='cuda:0'), tensor([406], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2737, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1652, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4389, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([270, 241, 415, 430, 294, 223, 223,  82, 248, 138, 164, 147,  93,  25,
        336, 241, 184, 296, 411,  50, 254, 415, 147, 421, 421],
       device='cuda:0'), tensor([305], device='cuda:0'), tensor([371, 371, 420, 420, 424, 371,  91, 113], device='cuda:0'), tensor([142, 166, 294], device='cuda:0'), tensor([408], device='cuda:0'), tensor([165], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([44], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3996, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2214, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6210, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([408, 408, 408, 408], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([433, 356, 292, 383], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2663, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2239, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4902, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93, 100], device='cuda:0'), tensor([181,  82, 181,  82, 313, 181,  82, 181,  82, 181], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197], device='cuda:0'), tensor([398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11, 430], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2575, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2182, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4757, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [022][00010/00055]	Time 0.75 (0.75)	Loss 0.48 (0.48)
		cls_loss 0.26 (0.26)	reg_loss 0.22 (0.22)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283,  93, 283], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([ 14, 327,  52], device='cuda:0'), tensor([408], device='cuda:0'), tensor([431,  71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22,
        167, 220], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2855, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1828, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4683, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([4], device='cuda:0'), tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([354, 121,  80, 100], device='cuda:0'), tensor([242, 242, 431], device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71, 247,
        279,  50, 184, 247, 279,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3563, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3155, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6718, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([385, 354,  98,  98, 397, 113, 415, 183, 354, 254], device='cuda:0'), tensor([121], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([315, 436, 315, 108,   8,   8, 294,   8], device='cuda:0'), tensor([93], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3537, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2235, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5772, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 348], device='cuda:0'), tensor([138,   8, 116, 138,   8, 116, 138, 232], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([436, 436], device='cuda:0'), tensor([385, 224, 246, 224, 246, 224], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([408, 127, 142, 127, 337, 345, 332, 337, 337], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3174, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2410, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5583, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 295, 436, 295], device='cuda:0'), tensor([285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291, 424,
        433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204, 143], device='cuda:0'), tensor([215, 215,  18, 215, 345, 215], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82,  65], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([359, 203, 359, 279, 302, 359, 294, 359, 313, 359,  87,  96, 359, 415,
        138,  50, 294], device='cuda:0'), tensor([116,  47, 116, 263, 116, 116,  47, 116,  47, 116, 263],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5136, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3786, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8922, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100,  88,  88, 100,  88, 100,  88,  88, 100,  88, 100,  88, 100,  88,
        100,  88, 100,  88, 100,  99,  88], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453], device='cuda:0'), tensor([215,  83, 405, 302], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([141, 141], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 349, 399, 436],
       device='cuda:0'), tensor([ 37,  37,  37,  37,  37,  37, 150,  37,  45,  37,  45,  37, 424,  37,
        411, 411, 411,  50, 157], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4311, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3992, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8303, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 281,  47, 260,  17, 116, 388,  93,  19, 109,  80],
       device='cuda:0'), tensor([201], device='cuda:0'), tensor([398,  51, 398,  51, 398, 435, 398], device='cuda:0'), tensor([305, 292, 305, 399, 363, 305, 426], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254, 254],
       device='cuda:0'), tensor([305, 175, 223, 247], device='cuda:0'), tensor([  9, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3212, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2135, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5347, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215, 436, 400, 430, 351, 430, 430, 351, 430, 351,  93],
       device='cuda:0'), tensor([401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42, 257, 330, 399], device='cuda:0'), tensor([394, 201, 305, 302, 305, 217, 305, 402, 305, 149, 302,  72, 196,  43,
        402, 305, 128, 236], device='cuda:0'), tensor([366, 436, 366,  10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4695, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3296, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7991, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([177,  36, 305, 116,  36, 116, 305, 116, 385], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([89], device='cuda:0'), tensor([90], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([248, 394, 121,   4], device='cuda:0'), tensor([340,  13, 245,  71, 245,  13, 245, 413, 245, 413], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2624, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1848, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4472, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 330, 249, 443, 105,  16, 302, 124, 443, 377,  93, 443],
       device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([ 15,   9, 451, 142], device='cuda:0'), tensor([ 22, 319, 234, 319, 339, 402], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([392, 268, 138, 268,   5, 268, 447, 268, 313,   5, 392,  50, 268, 268,
        392, 268, 268, 268,   5, 392, 268, 268, 268, 268,   5, 392, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([249, 155, 131, 191,   9, 385], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4107, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3183, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7289, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [022][00020/00055]	Time 0.61 (0.68)	Loss 0.73 (0.60)
		cls_loss 0.41 (0.33)	reg_loss 0.32 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([249, 316], device='cuda:0'), tensor([  9, 181, 382, 315, 181, 315, 181, 315, 181, 315, 181, 315, 181, 315,
        181, 315, 181, 315, 181, 315, 181], device='cuda:0'), tensor([440,  82, 440, 441, 279], device='cuda:0'), tensor([215, 441, 415, 441], device='cuda:0'), tensor([383,  50, 291,  50], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3296, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2584, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5880, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9,  59],
       device='cuda:0'), tensor([436, 215, 215, 226,  50,  16, 436, 385,  16, 436, 312, 350, 387],
       device='cuda:0'), tensor([385, 385, 279], device='cuda:0'), tensor([ 47,  47,  93,  23, 443,  49,  47,  98, 447,  47, 213,  80,  80, 121,
          8], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4359, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3105, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7463, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([ 57,  93, 441], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([  0, 415, 279, 121, 415, 345, 309, 279, 309], device='cuda:0'), tensor([121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115, 437, 310,
        399, 415, 399, 302,  87], device='cuda:0'), tensor([430, 406,  11], device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([354, 138,  70, 398, 438, 268, 268, 256, 138, 438, 256, 438, 354, 268,
        268, 256, 268, 256, 268, 438, 138, 398, 354, 268, 256, 438, 268, 138,
         70, 256, 354, 438, 268, 268, 256, 430, 438, 268, 256, 138,  70, 398,
        441, 302, 249,  93, 399], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5984, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4480, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0464, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 16, 399, 121,  16, 286,  16, 436,  16, 286, 294,  71,  16, 286, 105],
       device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([300, 437,  90,  44], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3271, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3199, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6470, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100,
        392, 100, 392], device='cuda:0'), tensor([ 43, 436, 441, 301], device='cuda:0'), tensor([100,  96], device='cuda:0'), tensor([430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,  11,
        115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([98], device='cuda:0'), tensor([244], device='cuda:0'), tensor([436, 226, 221,  93, 411, 226], device='cuda:0'), tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269, 437, 269],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3025, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2269, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5294, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 282, 294, 264, 292, 399, 142,  80], device='cuda:0'), tensor([ 63, 340,  12, 292, 340,  12, 236, 279, 236, 415, 415, 352],
       device='cuda:0'), tensor([ 61, 253, 313], device='cuda:0'), tensor([37], device='cuda:0'), tensor([82], device='cuda:0'), tensor([191], device='cuda:0'), tensor([249, 385,  36,  71,  30,  80], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1638, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1020, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2658, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([248, 340, 236, 121, 312, 121], device='cuda:0'), tensor([351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215],
       device='cuda:0'), tensor([88], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([398, 412, 357, 412, 357, 398, 357, 412, 357], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([  9, 294,  62, 294,  62, 294, 294,  96, 392, 345], device='cuda:0'), tensor([315, 244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2877, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2398, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5274, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([411, 124,   7, 163,  50], device='cuda:0'), tensor([302, 451, 286, 424,  91, 451,  91, 225], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([220, 357, 431, 294, 357, 431, 447, 357, 431, 294], device='cuda:0'), tensor([181,  30, 181, 181,   9, 155, 121], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([215,  98], device='cuda:0'), tensor([430, 315,  93, 244, 432], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2321, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1564, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3884, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([232, 116, 116, 435,  36, 186, 325, 186, 404, 338,  47, 362, 325, 294,
        294, 116, 404], device='cuda:0'), tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([448, 387, 127, 155], device='cuda:0'), tensor([15], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([264, 218, 264, 433, 121, 264, 415, 417], device='cuda:0'), tensor([417], device='cuda:0'), tensor([441,  93, 441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37,
        331,  37, 436,  37, 436,  37,  22,  22,  37,  49, 122],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.5230, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3512, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8742, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([249, 430, 313, 165, 205, 156, 121, 156,  63,  93], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([183,  23, 183, 260,  36, 354,  47, 100,  47, 133, 256, 338, 109, 109],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([436, 246, 436,  82,   0], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([ 80, 183,  80,  80], device='cuda:0'), tensor([127, 363, 430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4073, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6481, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [022][00030/00055]	Time 0.43 (0.60)	Loss 0.65 (0.62)
		cls_loss 0.41 (0.36)	reg_loss 0.24 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([283, 280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150,
        437, 150, 397, 249, 394], device='cuda:0'), tensor([283,  91, 105,  91,  31, 294,  31, 294,  91, 150], device='cuda:0'), tensor([ 88, 298,  16, 298,  73,  71], device='cuda:0'), tensor([399, 159, 177, 294], device='cuda:0'), tensor([268], device='cuda:0'), tensor([113], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3210, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1962, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5172, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([225], device='cuda:0'), tensor([268, 432, 268, 268], device='cuda:0'), tensor([305], device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([139, 115, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1256, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0824, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2080, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249, 100, 407],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([399,  80, 121,   4, 385], device='cuda:0'), tensor([120, 424, 166, 385, 166], device='cuda:0'), tensor([362], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155, 313,  30],
       device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3341, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2688, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6029, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([225,   0, 301, 131, 121, 228,  71,  42, 201, 257, 430],
       device='cuda:0'), tensor([451, 176, 176, 176], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438], device='cuda:0'), tensor([268, 348, 268, 201, 268, 445, 268], device='cuda:0'), tensor([408], device='cuda:0'), tensor([436, 392,  47, 392, 436, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3475, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2303, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5779, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 285, 305, 441, 225,  16,  76,  16, 418], device='cuda:0'), tensor([ 21, 286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,  96, 155,
        351,  96, 121, 351, 217, 351, 217, 305], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([430, 436, 431, 415, 431, 431, 436, 431, 165,  44], device='cuda:0'), tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 37, 351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5425, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3690, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9115, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([298], device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50, 237], device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([269], device='cuda:0'), tensor([ 96, 191,  96,  96, 215, 313,  96, 294,  96,  70,  96, 354],
       device='cuda:0'), tensor([430], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3370, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2045, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5415, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([291, 269, 269], device='cuda:0'), tensor([305, 305, 120, 305], device='cuda:0'), tensor([  9, 163], device='cuda:0'), tensor([255], device='cuda:0'), tensor([399, 408,  50, 399,  50], device='cuda:0'), tensor([182, 182, 453, 385, 105, 100, 100, 210,  68, 121, 404, 257, 385,  80,
        116], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([408, 286, 283, 280, 279, 121, 345, 121, 437,  93, 437, 294, 345, 294,
        437, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3918, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2671, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6588, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 120], device='cuda:0'), tensor([451, 107,  93, 128,  93, 215, 141, 294, 399, 135], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([ 9, 15], device='cuda:0'), tensor([301, 439, 436, 439], device='cuda:0'), tensor([47], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2084, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1505, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3589, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([105, 405], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([436, 334, 436], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63, 415], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([319, 424, 424,  89], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3528, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2655, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6182, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63, 234, 215,  50,  50], device='cuda:0'), tensor([292, 385, 155, 131, 119], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354, 389,  93,  36],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([225, 247, 436, 294, 425,  93, 283, 283, 283], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399], device='cuda:0'), tensor([146, 268], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3047, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2177, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5224, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [022][00040/00055]	Time 0.42 (0.55)	Loss 0.52 (0.59)
		cls_loss 0.30 (0.35)	reg_loss 0.22 (0.25)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([219, 424, 181], device='cuda:0'), tensor([451, 294, 120, 436, 120,  35, 436, 383,  44], device='cuda:0'), tensor([175, 120,  98, 451, 121], device='cuda:0'), tensor([146, 182, 392,   5, 146], device='cuda:0'), tensor([47,  9], device='cuda:0'), tensor([393, 100, 393, 385, 393, 305, 393, 305, 393, 305, 159, 393, 100, 393],
       device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([90, 80], device='cuda:0')]
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([973, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([952, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([791, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([612, 1536])
yes2
feats torch.Size([5581, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([802, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([3869, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([722, 1536])
yes2
feats torch.Size([905, 1536])
yes2
feats torch.Size([3554, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([3169, 1536])
yes2
feats torch.Size([4286, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([2444, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1812, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([486, 1536])
yes2
feats torch.Size([565, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1246, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([3762, 1536])
yes2
feats torch.Size([240, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([5412, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([8742, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([542, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([3461, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([2621, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([230, 1536])
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([879, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([2825, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([2631, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([3413, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2743, 1536])
yes2
feats torch.Size([6213, 1536])
yes2
feats torch.Size([1132, 1536])
yes2
feats torch.Size([1814, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([1017, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1747, 1536])
yes2
feats torch.Size([1866, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([3704, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([5204, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([5423, 1536])
yes2
feats torch.Size([471, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([289, 1536])
yes2
feats torch.Size([2445, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([230, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([2335, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([3594, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1402, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([1330, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1056, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([1633, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([6185, 1536])
yes2
feats torch.Size([2956, 1536])
yes2
feats torch.Size([3086, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([9762, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([4548, 1536])
yes2
feats torch.Size([546, 1536])
yes2
feats torch.Size([6467, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([814, 1536])
yes2
feats torch.Size([1474, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([1605, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([811, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2207, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([3948, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([2350, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([2125, 1536])
yes2
feats torch.Size([847, 1536])
yes2
feats torch.Size([7458, 1536])
yes2
feats torch.Size([1786, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([956, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([75, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([6302, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1974, 1536])
yes2
feats torch.Size([1275, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([2254, 1536])
yes2
feats torch.Size([4802, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2473, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([2769, 1536])
yes2
feats torch.Size([3990, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1772, 1536])
yes2
feats torch.Size([1090, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([4389, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4577, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([642, 1536])
yes2
feats torch.Size([4022, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([7935, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1821, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([1717, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([8546, 1536])
yes2
feats torch.Size([1964, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([8671, 1536])
yes2
feats torch.Size([2480, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([1427, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([1341, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([252, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([4921, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([485, 1536])
yes2
feats torch.Size([1101, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([4906, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([2620, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([584, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([4515, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([855, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([1889, 1536])
yes2
feats torch.Size([2541, 1536])
yes2
feats torch.Size([9968, 1536])
yes2
feats torch.Size([426, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([6894, 1536])
yes2
feats torch.Size([1279, 1536])
yes2
feats torch.Size([3258, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([10326, 1536])
yes2
feats torch.Size([580, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([2502, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([122, 1536])
yes2
feats torch.Size([2275, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([3003, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1032, 1536])
yes2
feats torch.Size([697, 1536])
yes2
feats torch.Size([7120, 1536])
yes2
feats torch.Size([434, 1536])
yes2
feats torch.Size([5280, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([5793, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([825, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([195, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([3509, 1536])
yes2
feats torch.Size([1832, 1536])
yes2
feats torch.Size([997, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([764, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([1025, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([2813, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([3906, 1536])
yes2
feats torch.Size([73, 1536])
yes2
feats torch.Size([8431, 1536])
yes2
feats torch.Size([212, 1536])
yes2
feats torch.Size([2323, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([2231, 1536])
yes2
feats torch.Size([200, 1536])
yes2
feats torch.Size([1208, 1536])
yes2
feats torch.Size([2348, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([5863, 1536])
yes2
feats torch.Size([10793, 1536])
yes2
feats torch.Size([3400, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([552, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([1118, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([28, 1536])
yes2
feats torch.Size([2221, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([243, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([336, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([6602, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([1668, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([2199, 1536])
yes2
feats torch.Size([745, 1536])
yes2
feats torch.Size([2902, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([249, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([2431, 1536])
yes2
feats torch.Size([2653, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([7213, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([496, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([284, 1536])
yes2
feats torch.Size([2476, 1536])
yes2
feats torch.Size([1369, 1536])
yes2
feats torch.Size([882, 1536])
yes2
feats torch.Size([7176, 1536])
yes2
feats torch.Size([4924, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([4820, 1536])
yes2
feats torch.Size([800, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([7235, 1536])
yes2
feats torch.Size([1176, 1536])
yes2
feats torch.Size([2150, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1480, 1536])
yes2
feats torch.Size([4356, 1536])
yes2
feats torch.Size([455, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([5583, 1536])
yes2
feats torch.Size([83, 1536])
yes2
feats torch.Size([2308, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([4834, 1536])
yes2
feats torch.Size([2924, 1536])
yes2
feats torch.Size([559, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([968, 1536])
yes2
feats torch.Size([1293, 1536])
yes2
feats torch.Size([1148, 1536])
yes2
feats torch.Size([1525, 1536])
yes2
feats torch.Size([651, 1536])
yes2
feats torch.Size([5196, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([402, 1536])
yes2
feats torch.Size([2667, 1536])
yes2
feats torch.Size([1435, 1536])
yes2
feats torch.Size([1845, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([1422, 1536])
yes2
feats torch.Size([229, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([1281, 1536])
yes2
feats torch.Size([911, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([6241, 1536])
yes2
feats torch.Size([6267, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([2461, 1536])
yes2
feats torch.Size([919, 1536])
yes2
feats torch.Size([889, 1536])
yes2
feats torch.Size([1985, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([1644, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3350, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1972, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([393, 1536])
yes2
feats torch.Size([1797, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1685, 1536])
yes2
feats torch.Size([1097, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([1352, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([442, 1536])
yes2
feats torch.Size([1716, 1536])
yes2
feats torch.Size([13532, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([6678, 1536]) torch.Size([3042, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([6678, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([687, 1536])
yes2
feats torch.Size([3923, 1536])
yes2
feats torch.Size([433, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([10068, 1536])
yes2
feats torch.Size([368, 1536])
yes2
feats torch.Size([4954, 1536])
yes2
feats torch.Size([106, 1536])
yes2
feats torch.Size([2007, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1652, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([538, 1536])
yes2
feats torch.Size([3967, 1536])
yes2
feats torch.Size([1780, 1536])
yes2
feats torch.Size([1041, 1536])
yes2
feats torch.Size([562, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([1791, 1536])
yes2
feats torch.Size([530, 1536])
yes2
feats torch.Size([819, 1536])
yes2
feats torch.Size([1175, 1536])
yes2
feats torch.Size([1304, 1536])
yes2
feats torch.Size([1875, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2617, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1954, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([1531, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([323, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([8136, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([11903, 1536])
yes2
feats torch.Size([6078, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([2990, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([4857, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2024, 1536])
yes2
feats torch.Size([10142, 1536])
yes2
feats torch.Size([3042, 1536])
yes2
feats torch.Size([1332, 1536])
yes2
feats torch.Size([267, 1536])
yes2
feats torch.Size([420, 1536])
yes2
feats torch.Size([11867, 1536])
yes2
feats torch.Size([772, 1536])
yes2
feats torch.Size([1936, 1536])
yes2
feats torch.Size([1009, 1536])
yes2
feats torch.Size([451, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([1496, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([3878, 1536])
yes2
feats torch.Size([826, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([1129, 1536])
yes2
feats torch.Size([192, 1536])
yes2
feats torch.Size([2636, 1536])
yes2
feats torch.Size([3260, 1536])
yes2
feats torch.Size([286, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1205, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([9485, 1536])
yes2
feats torch.Size([5157, 1536])
yes2
feats torch.Size([1406, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([1234, 1536])
yes2
feats torch.Size([3489, 1536])
yes2
feats torch.Size([210, 1536])
yes2
feats torch.Size([3374, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([406, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([6047, 1536])
yes2
feats torch.Size([7255, 1536])
yes2
feats torch.Size([1686, 1536])
yes2
feats torch.Size([564, 1536])
yes2
feats torch.Size([39, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([257, 1536])
yes2
feats torch.Size([1123, 1536])
yes2
feats torch.Size([2682, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([4172, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([4255, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([1073, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([1993, 1536])
yes2
feats torch.Size([2705, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([706, 1536])
yes2
feats torch.Size([3460, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([5253, 1536])
yes2
feats torch.Size([506, 1536])
yes2
feats torch.Size([10678, 1536])
yes2
feats torch.Size([523, 1536])
yes2
feats torch.Size([4910, 1536])
yes2
feats torch.Size([31822, 1536])
yes2
feats torch.Size([10994, 1536])
yes2
feats torch.Size([2823, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([967, 1536])
yes2
feats torch.Size([4968, 1536])
yes2
feats torch.Size([1978, 1536])
yes2
feats torch.Size([2088, 1536])
yes2
feats torch.Size([228, 1536])
yes2
feats torch.Size([631, 1536])
yes2
feats torch.Size([430, 1536])
yes2
feats torch.Size([5256, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([950, 1536])
yes2
feats torch.Size([947, 1536])
yes2
feats torch.Size([1203, 1536])
yes2
feats torch.Size([1318, 1536])
yes2
feats torch.Size([1085, 1536])
yes2
feats torch.Size([331, 1536])
yes2
feats torch.Size([8244, 1536])
yes2
feats torch.Size([1937, 1536])
yes2
feats torch.Size([1451, 1536])
yes2
feats torch.Size([2967, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([278, 1536])
yes2
feats torch.Size([363, 1536])
yes2
feats torch.Size([5448, 1536])
yes2
feats torch.Size([59, 1536])
yes2
feats torch.Size([5951, 1536])
yes2
feats torch.Size([6696, 1536])
yes2
feats torch.Size([2766, 1536])
yes2
feats torch.Size([1533, 1536])
yes2
feats torch.Size([1327, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([1271, 1536])
yes2
feats torch.Size([482, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3986, 1536])
yes2
feats torch.Size([4625, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2428, 1536])
yes2
feats torch.Size([1169, 1536])
yes2
feats torch.Size([1983, 1536])
yes2
feats torch.Size([3140, 1536])
yes2
feats torch.Size([303, 1536])
yes2
feats torch.Size([1300, 1536])
yes2
feats torch.Size([380, 1536])
yes2
feats torch.Size([1166, 1536])
yes2
feats torch.Size([233, 1536])
yes2
feats torch.Size([3584, 1536])
yes2
feats torch.Size([5981, 1536])
yes2
feats torch.Size([1269, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([3643, 1536])
yes2
feats torch.Size([2245, 1536])
yes2
feats torch.Size([5842, 1536])
yes2
feats torch.Size([225, 1536])
yes2
feats torch.Size([2598, 1536])
yes2
feats torch.Size([1977, 1536])
yes2
feats torch.Size([1645, 1536])
yes2
feats torch.Size([8231, 1536])
yes2
feats torch.Size([6999, 1536])
yes2
feats torch.Size([2850, 1536])
yes2
feats torch.Size([1408, 1536])
yes2
feats torch.Size([1182, 1536])
yes2
feats torch.Size([66, 1536])
yes2
feats torch.Size([399, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([4338, 1536])
yes2
feats torch.Size([2619, 1536])
yes2
feats torch.Size([3375, 1536])
yes2
feats torch.Size([2676, 1536])
yes2
feats torch.Size([995, 1536])
yes2
feats torch.Size([4355, 1536])
yes2
feats torch.Size([3309, 1536])
yes2
feats torch.Size([10988, 1536])
yes2
feats torch.Size([1683, 1536])
yes2
feats torch.Size([4305, 1536])
yes2
feats torch.Size([307, 1536])
yes2
feats torch.Size([5151, 1536])
yes2
feats torch.Size([6445, 1536])
yes2
feats torch.Size([10689, 1536])
yes2
feats torch.Size([1437, 1536])
yes2
feats torch.Size([1991, 1536])
yes2
feats torch.Size([9919, 1536])
yes2
feats torch.Size([10032, 1536])
yes2
feats torch.Size([3756, 1536])
yes2
feats torch.Size([1597, 1536])
yes2
feats torch.Size([1958, 1536])
yes2
feats torch.Size([1071, 1536])
yes2
feats torch.Size([2170, 1536])
yes2
feats torch.Size([3660, 1536])
yes2
feats torch.Size([638, 1536])
yes2
feats torch.Size([996, 1536])
yes2
feats torch.Size([33169, 1536])
yes2
feats torch.Size([1735, 1536])
yes2
feats torch.Size([412, 1536])
yes2
feats torch.Size([626, 1536])
yes2
feats torch.Size([7835, 1536])
yes2
feats torch.Size([218, 1536])
yes2
feats torch.Size([8605, 1536])
yes2
feats torch.Size([446, 1536])
yes2
feats torch.Size([1093, 1536])
yes2
feats torch.Size([700, 1536])
yes2
feats torch.Size([1633, 1536])
yes3 {'cls_loss': tensor(0.3969, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2028, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5998, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([306, 256, 306, 256, 306], device='cuda:0'), tensor([ 15,  15,  15, 305, 181], device='cuda:0'), tensor([ 90,  37, 445, 286,  90, 316,  22, 294,  90, 411,  90, 316, 286, 121,
        436, 286, 316, 143, 283, 286, 430], device='cuda:0'), tensor([357, 296, 223, 121, 100, 436, 366, 215,  83, 436,  71, 436,  10,   9,
        298, 279,  71, 282, 436, 385, 436, 282, 226, 279, 226, 279, 197],
       device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([ 83, 113, 301, 301, 105, 294, 213, 294, 436, 331, 394, 257, 453, 424,
        113, 150, 292, 415,  22, 247], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 326, 395, 395,
          8, 395, 205, 326], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6712, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4737, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1448, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 257,   9, 439, 439, 439, 439], device='cuda:0'), tensor([256], device='cuda:0'), tensor([121, 138, 200, 159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436,
        215, 344,  85, 293,  84,  85,  44, 438], device='cuda:0'), tensor([ 74, 121,  93, 159, 384, 299, 384, 411, 177, 270, 386,   9, 386, 184,
        195, 415, 296], device='cuda:0'), tensor([430, 183, 388, 338, 281, 116, 138, 311, 303, 183, 138,  47],
       device='cuda:0'), tensor([271, 121, 316, 316, 316, 294], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394,  70],
       device='cuda:0'), tensor([166, 437, 385, 437, 385, 385, 437, 166, 385, 437, 385, 399, 385, 399,
        437,  50], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5388, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3783, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9171, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([296], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([ 93,  82, 249, 200,  44, 408, 155, 294,  63,  96,  96, 405, 407, 405],
       device='cuda:0'), tensor([346, 415, 269, 121, 279, 269, 269, 433, 323, 323], device='cuda:0'), tensor([173, 125, 341], device='cuda:0'), tensor([451,  49, 424, 218], device='cuda:0'), tensor([21], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3139, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2020, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5159, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 423], device='cuda:0'), tensor([442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223, 215, 385,  90,
        223, 402, 223,  50, 223, 402], device='cuda:0'), tensor([  9,  93, 267], device='cuda:0'), tensor([256, 174, 256, 174, 256], device='cuda:0'), tensor([262, 100, 262, 100, 430, 384, 262, 339,  31], device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([276, 419, 436, 121, 305, 416, 415, 305, 385, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3394, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2393, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5788, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([328, 209, 311, 385, 205], device='cuda:0'), tensor([305, 407, 280,  21,  40, 269,  44, 424, 407,  21,  21, 128, 436,  21,
         21, 224,  21], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([107, 107, 107, 107, 107], device='cuda:0'), tensor([ 52,   9,  52, 294,  52,  93,  52, 436,  52,  44, 302,  52, 131],
       device='cuda:0'), tensor([344, 415, 159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270,
        394, 279, 421, 150, 302, 415, 184, 302, 296, 302, 231],
       device='cuda:0'), tensor([315], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5487, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3439, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8927, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([ 10, 436,  10, 315], device='cuda:0'), tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([146,  83, 294], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([58], device='cuda:0'), tensor([295, 294, 345], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1927, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1461, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3388, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7, 437, 100],
       device='cuda:0'), tensor([399], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([148], device='cuda:0'), tensor([ 44,  73, 315, 437, 305, 437, 121, 441, 437,  50, 305, 437, 315, 437,
        315], device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294], device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3464, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2856, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6320, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([319, 319, 121, 224], device='cuda:0'), tensor([295, 356], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121], device='cuda:0'), tensor([436,   8,   8, 399, 385, 436, 436, 408, 279], device='cuda:0'), tensor([ 15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138, 436,
        164], device='cuda:0'), tensor([ 21,  32,  95, 415, 152], device='cuda:0'), tensor([392, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2589, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4664, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([239, 239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0'), tensor([451], device='cuda:0'), tensor([436, 248, 248,  11,  46, 234,  46], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1759, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3527, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [022][00050/00055]	Time 0.43 (0.53)	Loss 0.35 (0.55)
		cls_loss 0.18 (0.31)	reg_loss 0.18 (0.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([284], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([ 31, 408, 313], device='cuda:0'), tensor([256], device='cuda:0'), tensor([256, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1239, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0776, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2015, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 324, 200, 279], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([376,  71, 354, 398, 354, 398, 354, 357, 376, 146, 398,  44, 338,  71,
        116, 398, 354], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100], device='cuda:0'), tensor([451, 405, 258, 430, 411, 108], device='cuda:0'), tensor([416, 223,  93, 305, 223, 305, 399, 305, 223], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3874, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2209, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6083, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([257, 430, 451,  32], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([256, 388, 109, 116, 183, 325, 354,  47, 294, 302, 116, 256, 116, 116,
        302, 116, 388, 338], device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([441, 451, 441, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4248, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2771, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7019, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([417], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([244], device='cuda:0'), tensor([215,  50], device='cuda:0'), tensor([316, 436, 316, 433], device='cuda:0'), tensor([90, 11, 90, 11], device='cuda:0'), tensor([ 78, 411, 138, 138, 138,  73, 298, 138, 138, 361, 298,  80],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2484, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1783, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4267, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 22 finished with lr=0.00007751


[Train]: Epoch 23 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([240], device='cuda:0'), tensor([100,   7,   7,   7,   7,   7, 436, 247, 247, 100, 181],
       device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279, 165, 254, 115,
        437, 310, 399, 415, 399], device='cuda:0'), tensor([44], device='cuda:0'), tensor([268], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([ 15,  71, 436, 120, 399, 156], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2580, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1741, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4321, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 107, 416, 248, 258, 132], device='cuda:0'), tensor([201, 217,  71,  22, 344, 415, 159, 211, 121, 418, 270,  83,  82, 302,
         50, 302, 247, 270, 394, 279, 421, 150, 302, 415, 184],
       device='cuda:0'), tensor([ 52, 205, 302,  52, 121,  52, 436], device='cuda:0'), tensor([280, 437, 283, 280, 437, 150, 283, 286, 283, 150, 150, 394, 150, 437,
        425, 150, 437, 150, 397, 249], device='cuda:0'), tensor([436, 411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([ 93, 191, 436,  44, 451, 221, 284, 436, 394, 105, 385, 436, 215,  32,
        215, 436, 215], device='cuda:0'), tensor([ 31, 201, 121, 166,  44,  11,  44,  71, 351,  82, 351],
       device='cuda:0'), tensor([436,  59, 411,  59, 316, 430, 313, 411, 316, 411,  82, 411, 207, 284,
         90, 197, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6753, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4454, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.1207, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([146,  83, 294], device='cuda:0'), tensor([ 47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,  47, 256, 116,
        195, 325], device='cuda:0'), tensor([239, 239, 239, 239, 120, 295, 295, 295], device='cuda:0'), tensor([209, 311, 385, 205], device='cuda:0'), tensor([294, 229, 434, 401,  93, 431, 436, 385, 220,  50, 431, 385, 329, 294,
        431,  82, 431], device='cuda:0'), tensor([319, 319, 196], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3176, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2562, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5738, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([357, 431, 137, 220, 220, 357, 431, 220, 409, 220, 357, 431, 294, 357,
        431, 447, 357, 431, 294], device='cuda:0'), tensor([  9, 163], device='cuda:0'), tensor([301, 215], device='cuda:0'), tensor([ 63, 234, 215,  50,  50], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([197, 351, 197, 351, 121, 394, 443, 394,  70,  82, 296],
       device='cuda:0'), tensor([47], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2446, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1835, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4281, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 159, 354, 423,  83, 121, 436, 436, 108,  44, 394, 279, 287],
       device='cuda:0'), tensor([436,  23, 408, 436, 436, 408], device='cuda:0'), tensor([  5, 268, 268, 432, 268], device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411, 286, 411, 286], device='cuda:0'), tensor([263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294, 116,  47,
        116,  47, 116], device='cuda:0'), tensor([226, 201, 230, 201, 351,  90, 351,  90,  43, 436, 441],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([315], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4484, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3095, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7580, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138], device='cuda:0'), tensor([256], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([298,  73,  71, 136,  73, 424, 298, 425], device='cuda:0'), tensor([296, 296], device='cuda:0'), tensor([ 93, 437,  93, 437,  93, 437, 121, 280,  93,  12, 121, 432, 408, 286,
        283, 280, 279, 121, 345, 121, 437], device='cuda:0'), tensor([408, 216, 447, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3422, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2318, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5740, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([37], device='cuda:0'), tensor([89], device='cuda:0'), tensor([249, 316, 436], device='cuda:0'), tensor([431, 431, 165,  44, 436,  93, 137,  10, 436,  44], device='cuda:0'), tensor([268, 268, 268], device='cuda:0'), tensor([149, 215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219],
       device='cuda:0'), tensor([369, 174, 256, 174, 256, 174, 256, 174, 256, 174, 256],
       device='cuda:0'), tensor([225], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2322, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1705, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4027, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256], device='cuda:0'), tensor([249, 356,  11,  44, 351, 121, 351, 127, 351, 351, 351],
       device='cuda:0'), tensor([80, 80], device='cuda:0'), tensor([417], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([ 10, 218], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([244], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1409, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.0975, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2385, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 392], device='cuda:0'), tensor([380,  76, 441, 257,  12, 399,  76, 415,  76, 385,  76],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([131, 119, 131], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([305], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453, 294,  68],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.1896, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1933, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3829, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([354, 432, 354], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([113, 430], device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([436, 201, 436, 403, 403,  63], device='cuda:0'), tensor([121, 108,  90, 268,  37], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2915, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2105, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5020, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450, 223,
        219, 387, 184,  76, 247, 279, 223,  50, 310, 279,  70],
       device='cuda:0'), tensor([371, 201,  90, 371, 430], device='cuda:0'), tensor([411, 121, 411, 311,  70,  44], device='cuda:0'), tensor([398,  82, 256, 315, 256], device='cuda:0'), tensor([279, 121, 296, 436,   9, 436, 305, 407, 280,  21,  40, 269,  44, 424,
        407,  21,  21, 128], device='cuda:0'), tensor([201], device='cuda:0'), tensor([451], device='cuda:0'), tensor([224, 224, 305,  32, 305, 434, 326, 224, 286, 224, 326, 121, 415],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4504, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3291, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7796, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [023][00010/00055]	Time 0.51 (0.51)	Loss 0.78 (0.78)
		cls_loss 0.45 (0.45)	reg_loss 0.33 (0.33)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([158, 408], device='cuda:0'), tensor([447, 268, 313,   5, 392,  50, 268, 268, 392, 268, 268, 268,   5, 392,
        268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268, 268, 392, 268,
        268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([215], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([ 57, 399], device='cuda:0'), tensor([441, 302, 249,  93, 399, 441, 385, 302, 354, 438, 268, 256, 268, 256,
        268, 396], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3916, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3511, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7427, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187], device='cuda:0'), tensor([ 93,  81, 319, 408, 127, 142], device='cuda:0'), tensor([255,  31,  63,  82, 255,  82, 165,  82, 165], device='cuda:0'), tensor([ 44, 248, 302, 248,  71, 224], device='cuda:0'), tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([255], device='cuda:0'), tensor([354, 404, 124, 130, 446, 166, 130, 378, 166, 385, 378, 388],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4003, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2573, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6576, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 96, 411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443,
        124], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197, 197,  50, 197], device='cuda:0'), tensor([256], device='cuda:0'), tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([120, 201, 430, 201, 316, 316, 316, 305, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2811, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2344, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5155, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([316, 279, 301, 436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([436, 411, 223, 345, 115, 436, 115, 436, 357, 436, 313,  83, 436],
       device='cuda:0'), tensor([415, 238,  12, 415, 453, 415, 385, 210, 415, 279, 453, 385,  32, 399,
        121, 356, 279, 273, 453], device='cuda:0'), tensor([215,  50], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([392, 120,  93, 338, 182], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3278, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2421, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5699, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([195, 201, 195, 442, 121, 442, 451, 279, 442,  93], device='cuda:0'), tensor([399], device='cuda:0'), tensor([31], device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([384,  11,  43,  32, 309, 429, 451, 215, 177, 294], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([283,  93, 283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2815, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1872, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4687, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 63,  93, 396,  50,  50], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([436,  93,  44, 416, 223,  93, 305, 223, 305, 399, 305, 223],
       device='cuda:0'), tensor([ 37,  82, 257,  37,  37, 257, 215, 313, 411,  70, 411,  44, 200, 258,
        226, 411, 226, 453], device='cuda:0'), tensor([451, 121, 305, 424], device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([215,  83,  16,  22, 215, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3823, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2326, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6149, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([223, 223, 144, 223, 223, 310], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([451, 142, 142], device='cuda:0'), tensor([417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0'), tensor([295,  82], device='cuda:0'), tensor([116, 357, 412, 357, 412, 357, 398, 412, 357, 412], device='cuda:0'), tensor([451, 383], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2387, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1876, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4263, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181, 181, 181, 181, 181], device='cuda:0'), tensor([316, 430, 316, 436], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([291, 269, 269], device='cuda:0'), tensor([268], device='cuda:0'), tensor([426, 252, 367, 305, 426, 252, 367, 426, 252, 367, 426, 252, 367, 426,
        252, 367, 426, 252, 367, 426, 252, 367,  62, 183], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3052, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2968, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6020, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([47], device='cuda:0'), tensor([313, 181,  82, 181,  82, 181,  82, 181,  82, 313, 181,  82, 181],
       device='cuda:0'), tensor([313,  82,  75,  82, 443, 436,  50, 124, 223, 100, 436,  82, 436, 443,
         82, 436, 124, 223], device='cuda:0'), tensor([451, 451, 451, 155, 451, 451, 451, 451, 451, 451], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([100, 294, 279, 325, 100, 443, 281, 325, 124, 289, 100],
       device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2707, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2600, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5307, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([269], device='cuda:0'), tensor([430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 36,  36,  73, 116,  82, 294, 305,  36, 177,  36, 305, 116],
       device='cuda:0'), tensor([437,  87, 137], device='cuda:0'), tensor([242, 431], device='cuda:0'), tensor([319,  87, 105, 356, 279,  96, 100, 294, 351, 294,  62,  10],
       device='cuda:0'), tensor([121, 436,   7,  63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71,
        294,  50, 436, 221, 121], device='cuda:0'), tensor([286, 121, 187], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2835, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2206, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5042, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [023][00020/00055]	Time 0.43 (0.47)	Loss 0.50 (0.64)
		cls_loss 0.28 (0.37)	reg_loss 0.22 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47],
       device='cuda:0'), tensor([439, 439, 439, 439], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([142,  80, 142,  80, 114], device='cuda:0'), tensor([ 22, 319, 234, 319, 339, 402], device='cuda:0'), tensor([268], device='cuda:0'), tensor([47,  9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1928, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1469, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3397, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([302, 124, 443, 377,  93, 443], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([283, 436, 383], device='cuda:0'), tensor([451,  53, 424, 451, 191], device='cuda:0'), tensor([224, 115, 307, 115,  11, 115,  11, 115, 223,  11, 115, 190, 357,  50,
        430, 302, 421, 421, 421], device='cuda:0'), tensor([ 80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121, 385, 166,  19,
        121, 137, 286, 434], device='cuda:0'), tensor([436, 230, 142,  11, 441], device='cuda:0'), tensor([ 15, 294,  15,  15,  15,  15], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3434, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2342, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5776, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([316, 142, 436, 142, 142], device='cuda:0'), tensor([423, 423, 423], device='cuda:0'), tensor([215, 296, 215, 105, 215, 340, 215, 217, 215, 215], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201], device='cuda:0'), tensor([142, 443, 124, 142, 166, 294], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([100,  96,  71,  30], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4142, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1477, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5619, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([417], device='cuda:0'), tensor([325,  47, 195,  47, 256], device='cuda:0'), tensor([ 88,  91,  88,  91,  88,  91,  88,  91,  88,  91,  98,  88,  91,  88,
         91,  44,  88,  91, 247, 380,  88], device='cuda:0'), tensor([436,  15, 436, 121, 451, 436, 451,  12, 241, 451, 436, 138, 257, 138],
       device='cuda:0'), tensor([283, 301, 283, 329, 301, 283], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0'), tensor([398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3543, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2711, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6255, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 54, 398, 398], device='cuda:0'), tensor([98], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249],
       device='cuda:0'), tensor([100,  88, 100,  88, 100], device='cuda:0'), tensor([305, 354,  96, 187,  96, 108], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([93], device='cuda:0'), tensor([447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37, 436,
         37, 436,  37,  22,  22,  37,  49, 122,  37,  37, 217],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3227, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2529, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5756, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 8, 44, 88], device='cuda:0'), tensor([ 63, 436,  80, 354,  93], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([14], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([415, 405, 121, 415, 294], device='cuda:0'), tensor([21], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1705, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1113, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2818, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394, 279,  82,  37], device='cuda:0'), tensor([411, 439, 296, 411, 280, 411, 405, 411, 282, 451, 258,  71, 411],
       device='cuda:0'), tensor([116, 116, 116], device='cuda:0'), tensor([256, 302, 256, 121], device='cuda:0'), tensor([146], device='cuda:0'), tensor([436], device='cuda:0'), tensor([256, 174, 256], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2623, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1649, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4273, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([267,  93, 158,  93], device='cuda:0'), tensor([292, 340,  12, 236, 279, 236, 415, 415, 352, 445,  12, 415, 100, 279,
        130], device='cuda:0'), tensor([9], device='cuda:0'), tensor([433, 323, 323, 121, 269, 323], device='cuda:0'), tensor([325, 351, 294, 351,  93,  93, 351,  93, 351,  93, 351],
       device='cuda:0'), tensor([ 80,  88, 268,  80, 268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([173, 125], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3322, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2344, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5666, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([  9, 305], device='cuda:0'), tensor([256, 256, 256], device='cuda:0'), tensor([392, 404, 385], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([219], device='cuda:0'), tensor([305,  71, 390, 453,  93, 393, 100, 393, 385, 393, 305, 393, 305],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([269, 203, 332, 269, 407, 121, 407, 437, 286], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2957, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1914, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4871, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([141, 141, 141], device='cuda:0'), tensor([255], device='cuda:0'), tensor([167, 220,  71, 167,   5, 167, 431, 268, 415,  22,  50, 268,  50, 412,
        415, 356, 251, 138,  50, 152, 360, 436, 282,  50,  50],
       device='cuda:0'), tensor([ 30,  21, 286,  21, 286, 105,  95, 273, 135, 135,  93, 214, 351,  96,
        155, 351,  96, 121, 351, 217, 351, 217, 305], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([319, 319, 100], device='cuda:0'), tensor([251, 251], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4778, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3228, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8006, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [023][00030/00055]	Time 0.43 (0.46)	Loss 0.80 (0.69)
		cls_loss 0.48 (0.40)	reg_loss 0.32 (0.29)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([182, 392, 146,   5, 378], device='cuda:0'), tensor([ 72, 436, 366], device='cuda:0'), tensor([223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223, 438,  71,
        247, 279,  50, 184, 247, 279], device='cuda:0'), tensor([392, 100, 392, 354, 100, 392, 354, 256, 100, 392, 129, 100, 392, 100,
        392, 100, 392], device='cuda:0'), tensor([ 63,  96,  96, 405, 407, 405, 407, 405, 302, 405, 420, 405, 168, 405,
         82, 213, 285, 405], device='cuda:0'), tensor([408], device='cuda:0'), tensor([417], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4132, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3166, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7298, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([451], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([430, 169, 294, 100, 279, 451, 346, 249,  93,  71, 329, 300],
       device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([15], device='cuda:0'), tensor([319], device='cuda:0'), tensor([436, 124, 231, 346, 231, 298, 397, 397, 330], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2290, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2025, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4315, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([313, 205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([244], device='cuda:0'), tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443, 100], device='cuda:0'), tensor([279, 270, 181, 415], device='cuda:0'), tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([441, 298, 441, 298,  76, 298], device='cuda:0'), tensor([253, 177, 253,  87, 140], device='cuda:0'), tensor([306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3940, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3253, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7193, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 436, 215, 215, 436, 215, 215, 344, 192, 121, 436, 215, 344,  85,
        293,  84,  85,  44, 438, 345, 167, 108, 436, 241], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([15], device='cuda:0'), tensor([201, 348], device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204], device='cuda:0'), tensor([65], device='cuda:0'), tensor([440,  82, 440], device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2331, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1833, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4164, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11, 248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441,
        121, 441], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([141, 141, 141, 141], device='cuda:0'), tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([  9,  12, 425,  63, 165], device='cuda:0'), tensor([430, 384, 262, 339,  31, 445, 340, 277, 279, 236], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341,  10], device='cuda:0'), tensor([441, 316, 441], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3221, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2256, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5477, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,  93, 291, 121, 291, 121, 115, 436,  10, 357, 296, 223, 121, 100,
        436, 366, 215,  83, 436,  71, 436,  10,   9, 298], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([256, 174, 256, 174, 256, 174, 256, 174, 256, 174], device='cuda:0'), tensor([305, 385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([441,  32, 124,  71, 100,  32, 430, 441, 257, 415, 385],
       device='cuda:0'), tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439, 439],
       device='cuda:0'), tensor([107, 107, 107, 453, 107], device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5047, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3682, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8730, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([301, 439, 436, 439], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0'), tensor([100,   9, 404, 330,  57,  93], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357], device='cuda:0'), tensor([255], device='cuda:0'), tensor([415, 116, 388, 232, 116, 116, 435,  36, 186, 325, 186, 404, 338,  47,
        362], device='cuda:0'), tensor([ 37, 411, 411, 411,  50, 157,  90, 157,  37, 247, 225,  91,  91,  76,
        105], device='cuda:0'), tensor([257,   9, 439, 439, 439, 439], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4315, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2573, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6887, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 11,  11,  71,  11, 420, 451, 420], device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([305, 441, 225,  16,  76,  16, 402, 225, 418], device='cuda:0'), tensor([279, 380, 402, 447, 402,  50], device='cuda:0'), tensor([436, 215,  83, 405], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([ 91, 305, 305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,
         91], device='cuda:0'), tensor([392, 116, 392], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3768, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2302, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6070, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([298, 436, 294, 294, 436], device='cuda:0'), tensor([ 47, 200,  49,  49, 138, 194, 388, 100,  30,  47, 370,  68,  80],
       device='cuda:0'), tensor([185,  93, 113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305,
        294], device='cuda:0'), tensor([284], device='cuda:0'), tensor([213, 437, 394,  93, 394,  30, 437, 394, 394,  44, 385],
       device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0'), tensor([164, 147,  93,  25, 336, 241, 184, 296, 411,  50, 254, 415, 147, 421,
        421,  82, 421, 228, 415], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4919, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8536, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244, 432, 244], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([ 44, 116, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268, 268], device='cuda:0'), tensor([306, 401, 306,  71,  81, 306, 306, 306, 268, 306, 268, 268, 306],
       device='cuda:0'), tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([441, 294, 264], device='cuda:0'), tensor([90], device='cuda:0'), tensor([148], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2090, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2133, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4223, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [023][00040/00055]	Time 0.60 (0.49)	Loss 0.42 (0.63)
		cls_loss 0.21 (0.36)	reg_loss 0.21 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([58], device='cuda:0'), tensor([401, 121,  62, 294,  75], device='cuda:0'), tensor([451,  49, 424, 218, 436], device='cuda:0'), tensor([332, 100, 245, 451, 100, 100, 443, 302], device='cuda:0'), tensor([217, 305, 402, 305, 149, 302,  72, 196,  43, 402, 305, 128, 236, 128,
        128], device='cuda:0'), tensor([ 80,  64,  64,  64,  64, 305,  64,  64], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91], device='cuda:0'), tensor([362, 105, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3974, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2051, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6025, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([187, 305], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([201, 131,  22], device='cuda:0'), tensor([356,  93], device='cuda:0'), tensor([120, 424, 166, 385, 166], device='cuda:0'), tensor([436, 360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([ 50, 309, 279, 121, 309,  42], device='cuda:0'), tensor([10], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1457, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3642, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([103, 436, 103, 249, 103, 436,  48], device='cuda:0'), tensor([201,  47, 116,  47, 303, 363, 281, 183, 361, 404, 285, 213, 430, 183,
        388, 338, 281, 116, 138], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([302, 436,  60,  10, 120,  52,  52, 447,   9,  59, 425, 233, 436],
       device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93],
       device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4797, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3571, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8368, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80, 302, 294,  80, 124, 215], device='cuda:0'), tensor([431, 137, 431,   9, 431], device='cuda:0'), tensor([256, 174, 256], device='cuda:0'), tensor([142, 249, 142, 316,  12, 121, 120, 249,  31, 345,  96,  46],
       device='cuda:0'), tensor([249, 155, 131, 191,   9, 385,  71], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([430,   7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437],
       device='cuda:0'), tensor([305, 189, 189, 313], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2882, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2367, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5250, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399, 349],
       device='cuda:0'), tensor([ 93, 264, 309, 121, 442,  44, 278, 121, 201, 442,  16],
       device='cuda:0'), tensor([295, 295, 294], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291, 438], device='cuda:0'), tensor([100], device='cuda:0'), tensor([191], device='cuda:0'), tensor([117, 453, 271, 131, 117, 271, 121], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2644, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2279, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4924, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 32, 121,  37,  43, 121, 124,  44, 197, 121,  11, 121, 215],
       device='cuda:0'), tensor([441, 436, 441, 436, 441, 237, 441,  50], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([  0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93, 396,
         70,  82, 152, 164, 121, 251, 164, 121, 415], device='cuda:0'), tensor([80, 88, 63], device='cuda:0'), tensor([401, 441, 451, 305, 451, 121, 315, 451, 441,  32], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([438, 121, 438, 296, 220, 438, 443, 438, 305, 438, 305,  44],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4082, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3330, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7411, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441,  44,  22, 384, 436, 384, 438, 121, 113, 438, 385],
       device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([415, 430, 257,  31,  49,  24,  49, 181,  49], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([215], device='cuda:0'), tensor([100, 355, 116, 146], device='cuda:0'), tensor([184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0'), tensor([415, 279, 121, 415, 345, 309, 279, 309, 299], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3061, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2052, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5112, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([ 96, 382], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0'), tensor([275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,   9,
        436, 430, 275,  63, 131], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([294, 249, 399], device='cuda:0'), tensor([406], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1954, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1748, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3701, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([412, 116,  50, 412,  87, 398, 116, 412, 412], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0'), tensor([451], device='cuda:0'), tensor([4], device='cuda:0'), tensor([ 80, 279,  80, 354, 129, 354, 129, 354, 385], device='cuda:0'), tensor([385,  16, 385, 107, 415,  16, 399, 121,  16, 286,  16, 436,  16, 286,
        294,  71], device='cuda:0'), tensor([201, 121, 298], device='cuda:0'), tensor([430,  11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351,
        283], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3476, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2632, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6108, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([408, 399, 408,  50], device='cuda:0'), tensor([436, 438, 249, 105,  50,  73], device='cuda:0'), tensor([181, 181, 219, 181, 181, 181, 219, 181, 181, 181, 219, 181],
       device='cuda:0'), tensor([407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21, 279,
        159, 314, 184, 147], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([213, 294, 436, 331, 394, 257, 453, 424, 113, 150, 292, 415,  22, 247,
        234, 247, 294, 424, 150, 433, 247], device='cuda:0'), tensor([224, 438, 213,  80, 121, 423, 294,  63,  22, 127, 325],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4088, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3172, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7260, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [023][00050/00055]	Time 0.70 (0.53)	Loss 0.73 (0.65)
		cls_loss 0.41 (0.37)	reg_loss 0.32 (0.28)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120,  96, 218, 294, 245], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([436, 137, 357, 220,  15, 294, 302, 415, 440, 425, 424, 302],
       device='cuda:0'), tensor([430,  11, 452, 284,  90], device='cuda:0'), tensor([116, 116, 302, 116, 388, 338, 362, 338, 256, 385, 354],
       device='cuda:0'), tensor([424, 105, 283, 304, 280], device='cuda:0'), tensor([224,  44, 166, 268], device='cuda:0'), tensor([385, 385, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3113, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1959, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5072, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36], device='cuda:0'), tensor([256], device='cuda:0'), tensor([319, 120, 319,  46,  10], device='cuda:0'), tensor([295], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([384, 279, 436,  11,  46, 279,  90, 279, 436, 408, 433, 397, 249, 408],
       device='cuda:0'), tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3569, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2322, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5891, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([345, 399,  90, 399, 230, 277, 305, 175], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([319], device='cuda:0'), tensor([295], device='cuda:0'), tensor([ 65, 124, 144,  23,  82,  65,  82], device='cuda:0'), tensor([ 89, 319, 406, 451], device='cuda:0'), tensor([305, 256, 256, 256, 256, 116, 394], device='cuda:0'), tensor([234], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2188, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1595, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3783, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 54, 398], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([320, 320, 404, 447, 217,  80], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268],
       device='cuda:0'), tensor([436,  82,   0, 436, 447], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([430, 270, 436, 430, 314], device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2223, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1763, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3987, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 23 finished with lr=0.00007422


[Train]: Epoch 24 started
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([295, 356], device='cuda:0'), tensor([451], device='cuda:0'), tensor([407,  22,  21,   0, 407,  95, 279,   0, 201,   7, 280,   7],
       device='cuda:0'), tensor([451, 436,  15, 294,  15], device='cuda:0'), tensor([108, 121, 108, 392, 385, 281, 392], device='cuda:0'), tensor([124, 144,  23,  82,  65,  82,  65,  82], device='cuda:0'), tensor([121,   4], device='cuda:0'), tensor([ 80, 357, 431,  80, 220, 181, 220, 181, 220, 451,  71, 181, 220, 181,
        217, 137, 357, 431, 220, 137, 357, 431, 137, 220, 220, 357, 431, 220,
        409, 220, 357, 431, 294, 357, 431, 447], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2882, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6568, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268, 268, 306, 268, 306, 306, 306, 268], device='cuda:0'), tensor([268, 348, 268, 201, 268, 445], device='cuda:0'), tensor([89], device='cuda:0'), tensor([181, 315, 181, 315, 181, 382,  96, 382], device='cuda:0'), tensor([430], device='cuda:0'), tensor([150, 292, 415,  22, 247, 234, 247, 294, 424, 150, 433, 247, 218, 214,
        417, 294,  83, 417, 311], device='cuda:0'), tensor([411, 443,  30, 324, 415, 411,  71,  87, 316, 443, 411, 217, 443, 124],
       device='cuda:0'), tensor([430,  44,  11, 436], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3455, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2444, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5899, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([340,  13, 245,  71, 245,  13, 245, 413, 245, 413, 319],
       device='cuda:0'), tensor([204, 204, 204, 204, 204, 350, 204], device='cuda:0'), tensor([244], device='cuda:0'), tensor([392, 100, 392, 100, 392, 100, 392, 354, 100, 392, 354, 256, 100, 392,
        129, 100, 392, 100, 392], device='cuda:0'), tensor([244, 432, 244], device='cuda:0'), tensor([256, 256], device='cuda:0'), tensor([90], device='cuda:0'), tensor([366, 436, 366], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2703, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2145, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4848, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 21, 121,  21, 356, 294], device='cuda:0'), tensor([ 53, 424, 451, 191, 108], device='cuda:0'), tensor([ 43, 110,  90,  44, 269, 279, 269, 269, 315, 269, 437],
       device='cuda:0'), tensor([271, 121, 316, 316, 316], device='cuda:0'), tensor([ 40, 215, 294], device='cuda:0'), tensor([438, 296, 220, 438, 443, 438, 305, 438, 305,  44, 305, 443, 434],
       device='cuda:0'), tensor([ 37,  37, 207,  70, 270,  44,  37, 310, 399, 247], device='cuda:0'), tensor([251, 251], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2962, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2167, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5129, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 93, 437,  93, 437, 121, 437,  93, 437,  93, 437,  93, 437, 121, 280,
         93,  12, 121, 432, 408, 286, 283], device='cuda:0'), tensor([ 70,  96, 354, 215, 354, 121,  11, 390,  11, 402], device='cuda:0'), tensor([120, 175, 120,  98, 451], device='cuda:0'), tensor([392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392],
       device='cuda:0'), tensor([408], device='cuda:0'), tensor([4], device='cuda:0'), tensor([191], device='cuda:0'), tensor([ 31, 408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4368, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2339, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6708, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 124, 231, 346, 231, 298, 397, 397, 330, 436], device='cuda:0'), tensor([369, 369, 369, 369, 369, 174, 256, 174, 256, 174], device='cuda:0'), tensor([451, 451, 451, 451, 451], device='cuda:0'), tensor([ 80, 100,  80,  93, 121], device='cuda:0'), tensor([50], device='cuda:0'), tensor([311, 385, 205], device='cuda:0'), tensor([ 93, 393, 100, 393, 385, 393, 305, 393, 305, 393, 305, 159],
       device='cuda:0'), tensor([100, 399, 279,  63, 340,  12, 292, 340,  12, 236], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2320, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5223, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([402, 384, 215, 215, 215, 402], device='cuda:0'), tensor([142, 415, 121,  69,  93,  69,  63, 385, 437,  63, 270,  63,  63, 162],
       device='cuda:0'), tensor([430, 407, 394, 441, 394, 113,  21, 294,  21, 450, 217,  93, 270,  21,
        279, 159, 314], device='cuda:0'), tensor([441, 415,  82,  76,  93, 424,  82, 399,  44, 237, 405],
       device='cuda:0'), tensor([436,  55, 273, 408,  17, 408, 436, 408, 397, 408, 408, 383, 279],
       device='cuda:0'), tensor([116, 116, 116, 404, 138, 100,   9], device='cuda:0'), tensor([238, 378, 231, 100, 436,  10], device='cuda:0'), tensor([ 87, 398, 116, 412, 412,  87, 398, 116, 412], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3656, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8702, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([279, 270, 181, 415], device='cuda:0'), tensor([ 93,  11, 385,  11,  12], device='cuda:0'), tensor([354, 412, 138, 398, 256, 412, 412, 412, 354, 412, 138, 398, 256, 412,
        354, 412, 138, 398, 354, 412, 256, 412, 412, 412, 138, 398, 354, 412,
        256, 138, 398, 354, 256, 354, 412, 138, 398, 411, 412, 316, 412, 138,
        138, 354, 256, 354, 398, 354, 412, 256], device='cuda:0'), tensor([93], device='cuda:0'), tensor([392, 392], device='cuda:0'), tensor([65], device='cuda:0'), tensor([215,  32, 121, 120, 351,  89, 351,  37, 351,  94, 121, 155, 121, 351,
         37,  37, 121,  37, 280], device='cuda:0'), tensor([398], device='cuda:0')]
yes3 {'cls_loss': tensor(0.6213, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.4003, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(1.0216, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([80, 80], device='cuda:0'), tensor([451, 286, 424,  91, 451,  91, 225,  75,  91,  75], device='cuda:0'), tensor([ 93,   0,  44, 152,   7, 342, 121, 345, 418, 279, 121, 330,  22,  93,
        396,  70,  82, 152, 164, 121, 251, 164], device='cuda:0'), tensor([362, 105], device='cuda:0'), tensor([433, 121, 264, 415, 417], device='cuda:0'), tensor([295,  82, 295], device='cuda:0'), tensor([150, 283, 286, 283, 150, 150, 394, 150, 437, 425, 150, 437, 150, 397,
        249, 394], device='cuda:0'), tensor([137, 417,  83,  83, 400, 415, 400, 415, 121], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3128, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2588, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5716, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([376, 398,   9, 398,  82, 256, 315, 256], device='cuda:0'), tensor([ 59, 298, 294, 237, 436, 341], device='cuda:0'), tensor([351, 399, 351, 245, 351, 142, 351, 142, 279], device='cuda:0'), tensor([205, 313,  10, 313, 313,  82, 313,  83, 313, 415, 410, 294],
       device='cuda:0'), tensor([ 86, 384,  27, 105, 436,  11], device='cuda:0'), tensor([ 31, 105,  31], device='cuda:0'), tensor([255, 255, 255, 255, 255, 255, 255, 255], device='cuda:0'), tensor([255], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2561, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1929, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4490, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436, 248, 248,  11,  46, 234,  46, 249, 430], device='cuda:0'), tensor([449, 449, 449, 449], device='cuda:0'), tensor([241, 208, 241, 264, 241, 385, 138, 343, 396], device='cuda:0'), tensor([268,   5, 430, 268, 268], device='cuda:0'), tensor([ 83,  57, 399], device='cuda:0'), tensor([408, 408], device='cuda:0'), tensor([116,  19, 182, 100, 294, 279, 325, 100, 443, 281, 325, 124],
       device='cuda:0'), tensor([256, 174, 256, 174, 256, 174], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2089, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1845, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3934, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [024][00010/00055]	Time 0.70 (0.70)	Loss 0.39 (0.39)
		cls_loss 0.21 (0.21)	reg_loss 0.18 (0.18)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 36, 116, 305, 116, 385], device='cuda:0'), tensor([47], device='cuda:0'), tensor([146,  83], device='cuda:0'), tensor([451], device='cuda:0'), tensor([256], device='cuda:0'), tensor([187], device='cuda:0'), tensor([345, 309, 279, 309, 299,  32,  93, 121, 120, 302, 121],
       device='cuda:0'), tensor([411, 121, 411, 311,  70,  44, 279], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1125, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1008, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2133, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430,  75, 451], device='cuda:0'), tensor([138, 249, 270,  22, 120, 184, 134], device='cuda:0'), tensor([301,  43, 351, 197,  37, 120,  37,  43,  37], device='cuda:0'), tensor([430, 309,  50], device='cuda:0'), tensor([215,  93, 215, 294, 215,  71, 215, 285, 215,   0, 215,  71, 294, 215],
       device='cuda:0'), tensor([354, 324, 200, 279], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268, 268], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2325, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2333, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4658, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([438, 249, 105,  50,  73,  82,  15], device='cuda:0'), tensor([141, 141, 141], device='cuda:0'), tensor([226, 383, 430], device='cuda:0'), tensor([360, 394, 401, 401, 326,  43, 358, 241, 134, 393, 215, 182, 164],
       device='cuda:0'), tensor([132], device='cuda:0'), tensor([385, 407, 407, 355, 407, 168, 385, 138], device='cuda:0'), tensor([385, 320, 320, 124, 100, 383, 109, 388, 330,   8, 383, 385, 281, 183,
        325, 415, 124, 124,  51,   8, 385], device='cuda:0'), tensor([156, 279, 451,  50, 217], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3660, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2416, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6076, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([439, 439, 439, 439, 439, 439, 439, 439, 439, 439], device='cuda:0'), tensor([345,  44, 223, 310, 113, 399], device='cuda:0'), tensor([340,  13, 221,  44], device='cuda:0'), tensor([146, 268], device='cuda:0'), tensor([256, 256, 109,  47,  47, 116, 325,  47, 388, 260,  47,  93, 260, 256,
         47, 256, 116, 195, 325], device='cuda:0'), tensor([ 44, 430, 221, 430, 223, 224, 115, 307, 115,  11, 115,  11, 115, 223,
         11, 115, 190, 357,  50, 430, 302, 421, 421, 421], device='cuda:0'), tensor([250,  50, 250, 432, 250], device='cuda:0'), tensor([396, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3623, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2858, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6481, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 64,  64, 305,  64,  64], device='cuda:0'), tensor([408, 402, 158], device='cuda:0'), tensor([255], device='cuda:0'), tensor([121, 385, 202, 121, 385, 453], device='cuda:0'), tensor([119, 131, 121, 131, 415], device='cuda:0'), tensor([386, 437, 386, 385, 121, 166,  93, 120], device='cuda:0'), tensor([133, 303, 345, 146,   5, 183, 388, 404, 285, 435, 138, 146, 388, 146,
        138], device='cuda:0'), tensor([386,   9, 386, 184, 195, 415, 296, 121,  32,  49, 411,  50, 415,  93],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4251, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2332, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6582, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 44, 249, 340,  21,  21, 441,  72,  21,  21, 201,  21],
       device='cuda:0'), tensor([255, 275, 414, 255, 275,  63, 414, 255, 436, 255, 275, 414, 255, 275,
          9, 436, 430, 275,  63], device='cuda:0'), tensor([225,  16,  76,  16, 402, 225, 441, 285], device='cuda:0'), tensor([354, 354, 432, 354], device='cuda:0'), tensor([351, 351, 200, 351, 270, 351,  82, 215, 440], device='cuda:0'), tensor([187,  71, 302, 218], device='cuda:0'), tensor([ 58, 333,  58], device='cuda:0'), tensor([146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3631, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2738, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6368, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 423], device='cuda:0'), tensor([229], device='cuda:0'), tensor([284, 436, 394, 105, 385, 436, 215,  32, 215, 436, 215, 215, 226,  50],
       device='cuda:0'), tensor([316, 451, 405, 258, 430, 411], device='cuda:0'), tensor([302, 294,  80, 124, 215], device='cuda:0'), tensor([394, 257, 441,  44,  22, 384, 436, 384, 438], device='cuda:0'), tensor([142, 142, 142, 142, 142], device='cuda:0'), tensor([371, 430, 371, 424, 371, 371, 420], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2838, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1990, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4828, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([305, 116, 124, 436], device='cuda:0'), tensor([215,  83, 405], device='cuda:0'), tensor([ 14, 436,  14, 327], device='cuda:0'), tensor([ 37, 150,  37,  45,  37,  45,  37, 424,  37, 411, 411, 411,  50, 157,
         90, 157,  37, 247], device='cuda:0'), tensor([264, 309, 121, 442,  44, 278, 121, 201, 442,  16, 121, 223, 385, 223,
        215, 385,  90], device='cuda:0'), tensor([ 93, 441], device='cuda:0'), tensor([430, 123, 123, 152, 123, 287, 123, 123, 123, 350, 436, 436, 287,  87,
        279, 121, 417], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 239, 239], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4938, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3328, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8267, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([268,  80, 268,  80, 268,  80], device='cuda:0'), tensor([451,  49, 424, 218, 436, 120, 218, 436, 436, 424], device='cuda:0'), tensor([354, 430,  11], device='cuda:0'), tensor([121, 285,  71, 225, 120, 121,  71, 105, 105, 105, 121, 405, 121, 291,
        424, 433, 121,  87,  82, 130,  55, 224, 279, 121, 264,  44, 296],
       device='cuda:0'), tensor([121, 430, 436,  80,  47, 436, 325,  93, 436, 345, 113, 105, 183, 121,
        385, 166,  19], device='cuda:0'), tensor([430, 276, 419, 436, 121, 305, 416, 415, 305, 385], device='cuda:0'), tensor([256], device='cuda:0'), tensor([345,  30, 443, 436, 294, 100, 228], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3407, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2715, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6121, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([100, 453, 388, 257, 370,  80,  80, 443], device='cuda:0'), tensor([ 63,   7, 296,  81, 296, 100, 436, 249, 436, 294,  71, 294,  50, 436,
        221, 121, 191], device='cuda:0'), tensor([295, 351,  63,  80, 351], device='cuda:0'), tensor([223, 436, 399, 384, 270, 241, 415, 430, 294, 223, 223,  82, 248, 138,
        164, 147,  93,  25, 336, 241, 184, 296, 411,  50, 254, 415],
       device='cuda:0'), tensor([ 54, 398, 398], device='cuda:0'), tensor([256], device='cuda:0'), tensor([334,  22, 121], device='cuda:0'), tensor([249,  16, 249,  16, 407, 257, 407,  16, 407,  16, 407,  16, 249, 119,
        168], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4592, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3354, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7946, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [024][00020/00055]	Time 0.66 (0.68)	Loss 0.79 (0.59)
		cls_loss 0.46 (0.33)	reg_loss 0.34 (0.26)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([430, 270, 436, 430], device='cuda:0'), tensor([100,  71, 362], device='cuda:0'), tensor([255, 394, 255, 394], device='cuda:0'), tensor([120, 209,  96], device='cuda:0'), tensor([ 10, 436, 436, 294, 436,  87,  93, 120, 453,  44,  87, 436, 405, 100,
        385, 436,  93, 291, 121], device='cuda:0'), tensor([181, 181], device='cuda:0'), tensor([441, 447, 447, 441, 424, 377, 294, 447, 447,  37, 447,  37, 331,  37,
        436,  37, 436,  37,  22,  22,  37,  49, 122,  37,  37],
       device='cuda:0'), tensor([ 87, 137], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2858, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2294, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5152, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([209, 338, 401], device='cuda:0'), tensor([436, 349, 408, 415, 408, 349, 399, 349, 399, 349, 399],
       device='cuda:0'), tensor([100, 303, 325, 388, 116, 100,  51, 100, 303, 294], device='cuda:0'), tensor([285, 356, 330, 415, 415,  36,  93, 183,  47, 430, 294, 354],
       device='cuda:0'), tensor([296, 108, 258,  71, 159, 280,  71,  71, 424, 201], device='cuda:0'), tensor([451, 451, 451, 451, 451, 451, 451, 451, 451, 451, 451],
       device='cuda:0'), tensor([315, 436, 315, 108,   8,   8, 294], device='cuda:0'), tensor([423, 423, 423], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4046, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2819, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6865, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([121,  31,  80, 142], device='cuda:0'), tensor([319, 319, 121, 224], device='cuda:0'), tensor([398, 392, 202, 398, 338], device='cuda:0'), tensor([439, 439, 439], device='cuda:0'), tensor([  5, 392, 268, 268, 268, 268, 268,   5, 392, 268, 268, 268, 268, 268,
          5, 392, 268, 268, 268, 268, 138, 268,   5, 268, 447, 268, 313,   5,
        392,  50, 268, 268, 392, 268, 268, 268], device='cuda:0'), tensor([217, 269,  30, 436, 447,  95, 436, 440], device='cuda:0'), tensor([355, 116, 124,  38, 124,   8, 183,  80, 388, 100], device='cuda:0'), tensor([197, 197, 197, 197, 197, 197], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4234, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2971, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7205, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 10, 218], device='cuda:0'), tensor([436, 225, 247, 436, 294, 425,  93], device='cuda:0'), tensor([ 80, 415, 410, 294, 254, 294, 399, 330], device='cuda:0'), tensor([247, 436], device='cuda:0'), tensor([436, 408, 408, 436], device='cuda:0'), tensor([100, 100], device='cuda:0'), tensor([316, 430, 316], device='cuda:0'), tensor([88], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1413, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1094, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2507, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([224, 399, 438,  22, 254, 224, 399], device='cuda:0'), tensor([ 63, 253, 177, 253,  87, 140], device='cuda:0'), tensor([240, 436, 240], device='cuda:0'), tensor([ 70, 249, 165, 126, 165, 385, 152, 385], device='cuda:0'), tensor([225], device='cuda:0'), tensor([137, 256, 256, 256, 256], device='cuda:0'), tensor([ 8, 44, 88], device='cuda:0'), tensor([116, 116, 138, 294, 362, 362], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2133, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1634, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3768, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([283, 304, 280], device='cuda:0'), tensor([  7,   7,   7, 436, 247, 247, 100, 181,   9, 279, 155],
       device='cuda:0'), tensor([65,  9, 65, 65, 65, 65], device='cuda:0'), tensor([21], device='cuda:0'), tensor([295, 295], device='cuda:0'), tensor([294, 121, 269,  81, 269, 294,  62, 294, 121, 269, 420, 269, 249],
       device='cuda:0'), tensor([385, 217, 385, 121, 441, 383, 415, 313, 172, 441, 438, 441],
       device='cuda:0'), tensor([306, 256, 306, 256, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2545, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2056, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4602, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 90, 248], device='cuda:0'), tensor([ 13,   9, 436], device='cuda:0'), tensor([159,   6, 330, 109,   6, 330, 443, 260, 404, 330, 443,  47,  47,  47,
        338], device='cuda:0'), tensor([430, 120, 253, 279, 253, 253, 142, 230, 121, 171,  61],
       device='cuda:0'), tensor([320, 404, 447, 217,  80, 100], device='cuda:0'), tensor([239, 239, 239, 239, 239, 239, 120, 295, 295], device='cuda:0'), tensor([116, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
        306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306],
       device='cuda:0'), tensor([108, 138, 108], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5462, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3069, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8531, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 80,  80, 450, 105], device='cuda:0'), tensor([165, 191, 134,  77, 134, 241,  79, 447,  79, 350, 350, 200, 134, 134,
        313, 313, 447, 138,  93], device='cuda:0'), tensor([439], device='cuda:0'), tensor([411, 392, 120,  93, 338, 182], device='cuda:0'), tensor([244, 409, 346, 409, 315,  93], device='cuda:0'), tensor([248, 340, 236, 441, 121, 441, 248, 340, 236, 121, 105, 121, 441, 121,
        441, 401], device='cuda:0'), tensor([ 44, 223, 223, 223, 223], device='cuda:0'), tensor([226, 221,  93, 411, 226], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2352, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2135, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4487, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([423, 423, 333], device='cuda:0'), tensor([286, 121, 187], device='cuda:0'), tensor([415,  63, 279, 121, 411, 401, 100], device='cuda:0'), tensor([181, 181, 219, 181], device='cuda:0'), tensor([298,  16, 298,  73,  71, 136,  73], device='cuda:0'), tensor([9], device='cuda:0'), tensor([298, 441, 298,  76, 298, 441, 280], device='cuda:0'), tensor([ 93, 267,  93, 267], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2304, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1513, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3817, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 71, 437, 436, 283,  82,  82, 436,  21], device='cuda:0'), tensor([220, 292,  49, 415,  85, 357, 357], device='cuda:0'), tensor([408, 408, 408, 408, 408], device='cuda:0'), tensor([226, 351, 197, 351, 197, 351, 121, 394, 443, 394], device='cuda:0'), tensor([146,  71, 390], device='cuda:0'), tensor([415, 405, 121, 415], device='cuda:0'), tensor([ 80,  80,  47, 116,  80], device='cuda:0'), tensor([141, 141, 141], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2019, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1738, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3756, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [024][00030/00055]	Time 0.66 (0.67)	Loss 0.38 (0.52)
		cls_loss 0.20 (0.29)	reg_loss 0.17 (0.23)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([159, 159, 144, 294, 159, 294, 159, 144, 294, 294], device='cuda:0'), tensor([ 30, 181, 181,   9, 155, 121], device='cuda:0'), tensor([319, 424, 424,  89, 319], device='cuda:0'), tensor([100, 257], device='cuda:0'), tensor([ 63, 399, 121, 294], device='cuda:0'), tensor([215], device='cuda:0'), tensor([249, 296, 402, 436, 402, 181], device='cuda:0'), tensor([ 30, 173], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2314, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1653, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3967, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 22, 215, 441, 415, 441], device='cuda:0'), tensor([351, 351, 351, 351, 231, 351, 150, 215, 385, 100, 127, 399, 215],
       device='cuda:0'), tensor([100], device='cuda:0'), tensor([98], device='cuda:0'), tensor([294, 319, 319, 196], device='cuda:0'), tensor([419, 121, 394, 241, 207], device='cuda:0'), tensor([245,  67,  96,  22, 276, 453, 416, 424, 181], device='cuda:0'), tensor([215, 217, 215, 215, 215,  18, 215], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3011, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1868, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4879, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([385, 385, 279], device='cuda:0'), tensor([ 88, 424,  88, 247,  80,  91, 411,  88,  80], device='cuda:0'), tensor([323, 121, 269, 323], device='cuda:0'), tensor([273, 135, 135,  93, 214, 351,  96, 155, 351,  96, 121, 351, 217, 351,
        217, 305,  32, 305, 438], device='cuda:0'), tensor([121,  93, 249, 305, 175, 223], device='cuda:0'), tensor([295, 294, 345], device='cuda:0'), tensor([280, 451, 304], device='cuda:0'), tensor([338, 361,  93,  36, 338, 338, 338,  36, 354], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4015, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2603, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6618, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([406], device='cuda:0'), tensor([305, 257, 291, 305,  93, 248,  91, 305, 248,  91, 280, 305,  91, 257,
        305, 286,  91], device='cuda:0'), tensor([436, 159,  15, 436,  15, 436, 121, 451, 436, 451,  12, 241],
       device='cuda:0'), tensor([284], device='cuda:0'), tensor([392, 146], device='cuda:0'), tensor([451, 383], device='cuda:0'), tensor([ 44,  44, 144], device='cuda:0'), tensor([298, 268, 146], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2004, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1737, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.3741, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([436,  83, 181, 415,  32, 181, 436, 447, 436, 246], device='cuda:0'), tensor([107, 107, 107, 107, 107,   2], device='cuda:0'), tensor([  9, 163, 398, 163], device='cuda:0'), tensor([ 44, 268], device='cuda:0'), tensor([234, 215,  50,  50, 217], device='cuda:0'), tensor([205, 302,  52, 121,  52, 436,  52], device='cuda:0'), tensor([302,  85, 302, 363, 385, 247, 294, 217, 436,  93], device='cuda:0'), tensor([ 80, 354, 385], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4199, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2149, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6347, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([234, 415, 163], device='cuda:0'), tensor([408], device='cuda:0'), tensor([258, 226, 436], device='cuda:0'), tensor([433, 356, 292, 383,  55], device='cuda:0'), tensor([116, 294,  93,  36, 338, 376, 435, 116, 116, 389, 453],
       device='cuda:0'), tensor([215], device='cuda:0'), tensor([255], device='cuda:0'), tensor([420, 254,  40,  11, 217,  11,  11,  71,  11, 420, 451, 420],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2707, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1926, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4634, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([222, 121, 320, 447, 222, 222, 121, 257, 194, 222, 124,   1, 257, 338,
        338,  80,  80, 116, 100, 100, 100, 443], device='cuda:0'), tensor([256, 302, 256, 121, 412], device='cuda:0'), tensor([399], device='cuda:0'), tensor([219], device='cuda:0'), tensor([451, 121, 439, 439, 451], device='cuda:0'), tensor([302, 441, 313, 302, 441,  71, 399, 385, 302, 120, 302, 302, 302, 441,
        441], device='cuda:0'), tensor([408,  93], device='cuda:0'), tensor([451, 107,  93, 128,  93, 215, 141, 294, 399, 135, 307],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4134, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3029, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7163, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([256, 174, 256], device='cuda:0'), tensor([ 80, 177, 398, 385,  80,  80], device='cuda:0'), tensor([15,  9, 15], device='cuda:0'), tensor([441,   8, 441, 286, 441, 385, 441, 257], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268], device='cuda:0'), tensor([ 90, 415, 430,  70,  44, 430, 394], device='cuda:0'), tensor([268], device='cuda:0'), tensor([294,  22, 399, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2619, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2612, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5231, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([124, 443, 377,  93, 443], device='cuda:0'), tensor([ 11, 201,  93, 415, 210, 121, 248, 316, 121,  43, 351, 332, 351, 283],
       device='cuda:0'), tensor([257,   9, 439, 439, 439, 439, 439], device='cuda:0'), tensor([291, 340,  71, 450, 399,  50, 292, 385, 313, 415], device='cuda:0'), tensor([100,  96,  71,  30,  71, 436], device='cuda:0'), tensor([ 50, 430, 270,  11, 184, 138, 280, 138,  50], device='cuda:0'), tensor([ 59,  82,  70, 121, 138], device='cuda:0'), tensor([47,  9], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2407, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2225, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4631, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([ 76, 380,  76, 441, 257,  12, 399,  76, 415,  76], device='cuda:0'), tensor([ 34, 210, 164, 430, 415, 302, 415, 374, 294, 424,   4, 415, 294],
       device='cuda:0'), tensor([439, 451, 439, 451, 439, 439, 451, 439, 451, 439, 451, 439, 451],
       device='cuda:0'), tensor([399,  16, 401,  96, 399, 302, 294, 121,  16, 201, 217,  87, 401, 302,
        431, 436, 220, 242, 220], device='cuda:0'), tensor([90], device='cuda:0'), tensor([351, 436, 351, 436, 359, 436, 359], device='cuda:0'), tensor([159, 211, 121, 418, 270,  83,  82, 302,  50, 302, 247, 270, 394, 279,
        421, 150, 302, 415, 184, 302, 296, 302, 231, 150], device='cuda:0'), tensor([201, 348], device='cuda:0')]
yes3 {'cls_loss': tensor(0.5193, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3998, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.9192, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [024][00040/00055]	Time 0.65 (0.67)	Loss 0.92 (0.62)
		cls_loss 0.52 (0.35)	reg_loss 0.40 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([182, 392, 146, 146, 182, 392], device='cuda:0'), tensor([417], device='cuda:0'), tensor([279,  90, 279,  90], device='cuda:0'), tensor([411,  82,   0,  10,   0, 409], device='cuda:0'), tensor([ 82, 255], device='cuda:0'), tensor([105, 405], device='cuda:0'), tensor([255], device='cuda:0'), tensor([166,  71, 354, 116], device='cuda:0')]
yes3 {'cls_loss': tensor(0.1102, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1020, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.2122, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([93], device='cuda:0'), tensor([436, 103, 385, 103], device='cuda:0'), tensor([141, 141, 141, 141, 141], device='cuda:0'), tensor([383, 383, 430, 319, 319, 120, 319,  46], device='cuda:0'), tensor([139, 115, 121], device='cuda:0'), tensor([146, 268, 408, 268,  44, 146, 201], device='cuda:0'), tensor([259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259],
       device='cuda:0'), tensor([120,  96, 218, 294, 245], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2720, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2105, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4825, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([223,  93, 223, 291, 438, 121, 418, 279,  71, 438,  71, 438,  71, 223,
        438,  71, 247, 279,  50], device='cuda:0'), tensor([91, 88, 91, 88, 91, 88, 91, 88, 91, 88, 91, 98, 88, 91, 88, 91, 44, 88,
        91], device='cuda:0'), tensor([415, 431, 431, 436, 431, 165,  44, 436,  93, 137,  10, 436],
       device='cuda:0'), tensor([ 11,  78, 175,  71, 121, 436, 402, 452], device='cuda:0'), tensor([ 73, 401, 441, 451, 305, 451, 121, 315, 451], device='cuda:0'), tensor([148], device='cuda:0'), tensor([432, 432, 432, 432,   9, 432,   9, 298], device='cuda:0'), tensor([166], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4816, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3087, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7903, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([142,  80, 142,  80, 114,  80], device='cuda:0'), tensor([ 44, 166, 268], device='cuda:0'), tensor([166, 130, 378, 166, 385, 378, 388, 302,  80, 116], device='cuda:0'), tensor([  7, 121,   7,   7, 121,   7, 437,   7, 437, 121, 437, 430,   7],
       device='cuda:0'), tensor([ 22, 155,  22, 159, 159, 120], device='cuda:0'), tensor([408], device='cuda:0'), tensor([301, 283,  72, 121, 385, 283, 122, 121, 385,  83, 401, 301,  83, 283,
         83, 270, 415,  49, 301, 119, 430, 336,  93, 301, 387, 290],
       device='cuda:0'), tensor([113, 184, 270, 350, 305, 184, 411, 113, 408, 257, 408, 305, 294],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4696, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3311, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.8007, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([244], device='cuda:0'), tensor([217, 357,  44, 217, 357], device='cuda:0'), tensor([ 22,  44, 201, 211, 279, 121, 415, 126, 438, 396, 223, 121, 223, 279,
        165, 254, 115, 437, 310, 399, 415], device='cuda:0'), tensor([283,  93, 283], device='cuda:0'), tensor([174, 256, 174, 256, 174, 256, 174, 256, 174, 256, 174],
       device='cuda:0'), tensor([229,  15, 249, 216, 301], device='cuda:0'), tensor([315], device='cuda:0'), tensor([166, 294], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2185, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2000, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4185, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([201, 121, 298], device='cuda:0'), tensor([392, 116, 392], device='cuda:0'), tensor([345, 115, 436, 115, 436, 357, 436, 313,  83, 436, 280, 193],
       device='cuda:0'), tensor([ 10, 436, 175,  10, 175,  10, 436, 121, 436, 175, 436, 175, 436,  10,
        436,  10, 315], device='cuda:0'), tensor([268, 268, 432, 268], device='cuda:0'), tensor([155, 247, 436, 230, 142,  11], device='cuda:0'), tensor([ 22, 399, 329, 399, 215], device='cuda:0'), tensor([408], device='cuda:0')]
yes3 {'cls_loss': tensor(0.2390, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.1766, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.4156, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([424, 225, 215,  91,  63, 113], device='cuda:0'), tensor([385,  36,  71,  30,  80], device='cuda:0'), tensor([127, 325, 325, 127, 325, 430, 127, 224, 438, 213,  80, 121, 423],
       device='cuda:0'), tensor([357, 398, 357, 412, 357, 357, 398, 412, 357, 357], device='cuda:0'), tensor([288, 302, 436,  60,  10, 120,  52,  52, 447,   9], device='cuda:0'), tensor([224, 246, 224, 316, 195,  50, 451, 251,  22, 251, 279, 121],
       device='cuda:0'), tensor([256], device='cuda:0'), tensor([295], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3518, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2405, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5924, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([116, 404, 146, 325, 146, 345, 183,  47, 232, 404, 354, 194],
       device='cuda:0'), tensor([  0, 301, 131, 121, 228,  71,  42, 201, 257, 430,   0],
       device='cuda:0'), tensor([100, 279, 451, 346, 249,  93,  71, 329, 300, 294,  96],
       device='cuda:0'), tensor([316, 441], device='cuda:0'), tensor([316,  22, 452,  90, 159, 279,  90, 121,  22, 254], device='cuda:0'), tensor([399,  59,  63,  59, 257, 279,  30,  63], device='cuda:0'), tensor([215, 215,  37, 215,  37, 215, 302, 294, 215, 124,  50, 215, 219, 294],
       device='cuda:0'), tensor([ 44, 408, 155, 294,  63,  96,  96, 405, 407, 405, 407, 405, 302, 405,
        420, 405, 168], device='cuda:0')]
yes3 {'cls_loss': tensor(0.4246, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3066, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7313, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([294, 205,  15,  71, 436, 120], device='cuda:0'), tensor([ 63, 430, 294,  22, 316, 177, 436,  32,  93], device='cuda:0'), tensor([ 16, 436,  16, 286, 294,  71,  16, 286, 105,  16], device='cuda:0'), tensor([344, 192, 121, 436, 215, 344,  85, 293,  84,  85,  44, 438, 345, 167,
        108, 436, 241, 387,  85, 436, 167, 138], device='cuda:0'), tensor([ 44, 447, 294, 392, 100], device='cuda:0'), tensor([269, 301, 436], device='cuda:0'), tensor([ 11, 286,  11, 286, 201, 286, 340, 286, 351, 197, 351, 286, 197, 157,
        286, 411], device='cuda:0'), tensor([155, 131, 191,   9, 385,  71, 314, 105, 407, 385, 436],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.4340, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3070, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7410, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([120, 385, 436, 121, 319, 121, 316,  15], device='cuda:0'), tensor([242, 415, 436, 242, 415, 121, 242, 242], device='cuda:0'), tensor([268], device='cuda:0'), tensor([283, 383,  50, 291], device='cuda:0'), tensor([ 32,  95, 415, 152, 447], device='cuda:0'), tensor([  9, 451, 142], device='cuda:0'), tensor([ 88, 100,  88,  91,  88, 100,  88,  88, 100,  88, 100,  88,  88, 100,
         88, 100], device='cuda:0'), tensor([137,  50, 291, 438, 396, 438, 291, 438, 291, 438, 291],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3133, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2371, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5504, device='cuda:0', grad_fn=<AddBackward0>)}
Epoch: [024][00050/00055]	Time 0.65 (0.66)	Loss 0.55 (0.61)
		cls_loss 0.31 (0.34)	reg_loss 0.24 (0.27)
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([392, 436, 392, 404, 385], device='cuda:0'), tensor([ 71, 343, 241, 131, 220, 241,  71, 431, 224, 220, 167, 231,  22, 167,
        220,  71, 167,   5], device='cuda:0'), tensor([436,  50, 124, 223, 100, 436,  82, 436, 443,  82, 436, 124, 223, 196,
        221, 196, 316], device='cuda:0'), tensor([ 88,  80,  88, 268,  80, 268,  80, 268], device='cuda:0'), tensor([223, 121,  71, 424, 185, 223,  44, 223, 305, 336, 402, 294, 331, 450,
        223, 219, 387, 184,  76, 247, 279, 223], device='cuda:0'), tensor([120, 453,   9,  83,  93, 104, 294,  83, 279, 107, 181, 107],
       device='cuda:0'), tensor([124,   7, 163,  50], device='cuda:0'), tensor([392, 392, 392, 306, 116, 116, 306], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3904, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.3302, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.7205, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([441, 436, 441, 436, 441, 237, 441,  50, 237, 217], device='cuda:0'), tensor([ 63, 436], device='cuda:0'), tensor([294, 351, 294,  62,  10], device='cuda:0'), tensor([ 47, 116, 263, 116, 116,  47, 116,  47, 116, 263, 116, 294, 338, 294,
        116,  47], device='cuda:0'), tensor([ 15, 121, 312, 334,  15, 436], device='cuda:0'), tensor([354, 388, 354, 392], device='cuda:0'), tensor([189, 189, 313], device='cuda:0'), tensor([142, 127, 337, 345, 332, 337, 337, 214, 316, 121, 322],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.2820, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2194, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5014, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([437, 238, 437, 166, 437, 385, 437, 385, 385, 437, 166, 385, 437, 385,
        399], device='cuda:0'), tensor([ 93, 262, 121, 279, 195,  20, 433, 394, 350,  31,  82, 365,  93, 313],
       device='cuda:0'), tensor([305, 256, 256, 256], device='cuda:0'), tensor([326, 395,  85, 417, 159,  31, 121, 114, 326, 224, 224, 305],
       device='cuda:0'), tensor([351, 436, 120, 121, 121, 351, 258, 453, 215], device='cuda:0'), tensor([408, 408, 408], device='cuda:0'), tensor([316, 142, 436, 142], device='cuda:0'), tensor([ 12, 121, 120, 249,  31, 345,  96,  46,  72, 415, 108],
       device='cuda:0')]
yes3 {'cls_loss': tensor(0.3817, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2631, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.6448, device='cuda:0', grad_fn=<AddBackward0>)}
feat_lens [1024, 512, 256, 128, 64, 32, 16, 8]
self.buffer_points BufferList()
feat_len: 1024
buffer_pts.shape[0]: 4096
feat_len: 512
buffer_pts.shape[0]: 2048
feat_len: 256
buffer_pts.shape[0]: 1024
feat_len: 128
buffer_pts.shape[0]: 512
feat_len: 64
buffer_pts.shape[0]: 256
feat_len: 32
buffer_pts.shape[0]: 128
feat_len: 16
buffer_pts.shape[0]: 64
feat_len: 8
buffer_pts.shape[0]: 32
gt_label [tensor([151,  93, 127, 294, 394, 411], device='cuda:0'), tensor([268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
        268, 268], device='cuda:0'), tensor([201], device='cuda:0'), tensor([316, 159, 365,  31,  19,  31, 424,  31, 365,  31], device='cuda:0'), tensor([ 54, 398], device='cuda:0'), tensor([ 95, 313, 436, 313, 181,  82, 181,  82, 181,  82, 181,  82, 313, 181,
         82], device='cuda:0'), tensor([9], device='cuda:0'), tensor([291, 269, 269], device='cuda:0')]
yes3 {'cls_loss': tensor(0.3016, device='cuda:0', grad_fn=<DivBackward0>), 'reg_loss': tensor(0.2075, device='cuda:0', grad_fn=<DivBackward0>), 'final_loss': tensor(0.5090, device='cuda:0', grad_fn=<AddBackward0>)}
[Train]: Epoch 24 finished with lr=0.00007077

